cscope 15 /home/kisu/ssuos_v0.1.05/src/kernel               0000555408
	@arch/Main.c

1 
	~<öãºu±.h
>

2 
	~<devi˚/c⁄sﬁe.h
>

3 
	~<devi˚/block.h
>

4 
	~<ty≥.h
>

5 
	~<devi˚/kbd.h
>

6 
	~<devi˚/io.h
>

7 
	~<devi˚/pô.h
>

8 
	~<°d¨g.h
>

9 
	~<ssulib.h
>

10 
	~<mem/∑gög.h
>

11 
	~<¥oc/¥oc.h
>

12 
	~<mem/mm.h
>

13 
	~<sysˇŒ.h
>

14 
	~<devi˚/kbd.h
>

16 
	~<synch.h
>

17 
	~<mem/∑Œoc.h
>

19 
maö_öô
();

20 
¥öt_c⁄åibut‹s
();

22 c⁄° * 
	gVERSION
 = "0.1.05";

23 c⁄° * 
	gAUTHOR
 = "OSLAB";

24 c⁄° * 
	gMODIFIER
 = "You";

26 
	$ssuos_maö
()

28 
	`maö_öô
();

30 
	`idÀ
(
NULL
);

33 
	}
}

35 
	$maö_öô
()

37 
	`öå_dißbÀ
();

40 
	`öô_c⁄sﬁe
();

42 
	`¥öt_c⁄åibut‹s
();

44 
	`dëe˘_mem
();

45 
	`¥ötk
("%s", "Memory Detecting\n");

46 
	`¥ötk
("-Mem‹y sizê%u Kbyãs\n", 
	`mem_size
()/1024);

48 
	`öô_pô
();

49 
	`¥ötk
("%s", "PIT Intialization\n");

51 
	`öô_sysˇŒ
();

52 
	`¥ötk
("%s", "System call Intialization\n");

54 
	`öô_öå
();

55 
	`¥ötk
("%s", "Interrupt Initialization\n");

57 
	`öô_kbd
();

59 
	`öô_∑Œoc
();

60 
	`¥ötk
("%s" "Palloc Initialization\n");

62 
	`öô_∑gög
();

63 
	`¥ötk
("%s", "Paging Initialization\n");

65 
	`öô_¥oc
();

66 
	`¥ötk
("%s", "Process Intialization\n");

68 
	`öå_íabÀ
();

70 
	`ide_öô
();

73 
	`£ma_£lf_ã°
();

74 
	`¥ötk
("========== initialization complete ==========\n\n");

77 #ifde‡
SCREEN_SCROLL


78 
	`ª‰eshS¸ìn
();

80 
	}
}

82 
	$¥öt_c⁄åibut‹s
()

84 
	`¥ötk
("%s", "SSUOS main start!!!!\n");

85 
	`¥ötk
(" ______ ______ __ __ ______ ______ \n");

86 
	`¥ötk
(" / \\ / \\ / | / | / \\ / \\ \n");

87 
	`¥ötk
(" /$$$$$$ |/$$$$$$ |$$ | $$ | /$$$$$$ |/$$$$$$ |\n");

88 
	`¥ötk
(" $$ \\__$$/ $$ \\__$$/ $$ | $$ | $$ | $$ |$$ \\__$$/ \n");

89 
	`¥ötk
(" $$ \\ $$ \\ $$ | $$ | $$ | $$ |$$ \\ \n");

90 
	`¥ötk
(" $$$$$$ | $$$$$$ |$$ | $$ | $$ | $$ | $$$$$$ |\n");

91 
	`¥ötk
(" / \\__$$ |/ \\__$$ |$$ \\__$$ | $$ \\__$$ |/ \\__$$ |\n");

92 
	`¥ötk
(" $$ $$/ $$ $$/ $$ $$/ $$ $$/ $$ $$/ \n");

93 
	`¥ötk
(" $$$$$$/ $$$$$$/ $$$$$$/ $$$$$$/ $$$$$$/ \n");

94 
	`¥ötk
("\n");

95 
	`¥ötk
("****************Made by OSLAB in SoongSil University*********************\n");

96 
	`¥ötk
("\n");

97 
	`¥ötk
("contributors : Yunkyu Lee , Minwoo Jang , Sanghun Choi , Eunseok Choi\n");

98 
	`¥ötk
(" Hyunho Ji , Giwook Kang , Kisu Kim , Seonguk Lee \n");

99 
	`¥ötk
(" Gibeom Byeon, Jeonghwan Lee, Kyoungmin Kim, Myungjoon Shon\n");

100 
	`¥ötk
("\n");

101 
	`¥ötk
("************************ Professor. Jiman Hong ************************\n");

102 
	`¥ötk
(" \n");

103 
	}
}

	@arch/do_syscall.c

1 
	~<¥oc/sched.h
>

2 
	~<¥oc/¥oc.h
>

3 
	~<devi˚/devi˚.h
>

4 
	~<öãºu±.h
>

5 
	~<devi˚/kbd.h
>

7 
pid_t
 
	$do_f‹k
(
¥oc_func
 
func
, * 
aux
)

9 
pid_t
 
pid
;

10 
¥oc_›ti⁄
 
›t
;

12 
›t
.
¥i‹ôy
 = 
cur_¥o˚ss
->Öriority;

13 
pid
 = 
	`¥oc_¸óã
(
func
, &
›t
, 
aux
);

15  
pid
;

16 
	}
}

18 
	$do_exô
(
°©us
)

20 
cur_¥o˚ss
->
exô_°©us
 = 
°©us
;

21 
	`¥oc_‰ì
();

22 
	`do_sched_⁄_ªtu∫
();

23 
	}
}

25 
pid_t
 
	$do_waô
(*
°©us
)

27 
cur_¥o˚ss
->
chûd_pid
 != -1)

28 
	`scheduÀ
();

31 
pid
 = 
cur_¥o˚ss
->
chûd_pid
;

32 
cur_¥o˚ss
->
chûd_pid
 = -1;

34 
¥o˚ss
 
¥ocs
[];

35 
¥ocs
[
pid
].
°©e
 = 
PROC_UNUSED
;

37 if(!
°©us
)

38 *
°©us
 = 
¥ocs
[
pid
].
exô_°©us
;

40  
pid
;

41 
	}
}

43 
	$do_shutdown
()

45 
	`dev_shutdown
();

47 
	}
}

49 
	$do_ssuªad
()

51  
	`kbd_ªad_ch¨
();

52 
	}
}

	@arch/i386/intr-stubs.S

2 .
	gãxt


17 .
func
 
öå_íåy


18 
	göå_íåy
:

20 
pushl
 %
ds


21 
pushl
 %
es


22 
pushl
 %
fs


23 
pushl
 %
gs


24 
pushÆ


27 
˛d


31 
ÀÆ
 56(%
e•
), %
ebp


34 
	gpushl
 %
	ge•


35 .
globl
 
öå_comm⁄


36 
ˇŒ
 
öå_comm⁄


37 
addl
 
	g$4
, %
	ge•


38 .
	gídfunc


48 .
globl
 
	göå_exô


49 .
func
 
öå_exô


50 
	göå_exô
:

52 
p›Æ


53 
p›l
 %
gs


54 
p›l
 %
fs


55 
p›l
 %
es


56 
p›l
 %
ds


60 
addl
 
$12
, %
e•


63 
	gúë


64 .
	gídfunc


92 .
	gd©a


93 .
globl
 
öå_°ubs


94 
	göå_°ubs
:

98 
	#zîo
 \

99 
pushl
 %
ebp
; \

100 
pushl
 
$0


	)

104 
	#REAL
 \

105 
	`pushl
 (%
e•
); \

106 
movl
 %
ebp
, 4(%
e•
)

	)

111 
	#STUB
(
NUMBER
, 
TYPE
) \

112 .
ãxt
; \

113 .
func
 
öå
##
NUMBER
##
_°ub
; \

114 
öå
##
NUMBER
##
_°ub
: \

115 
TYPE
; \

116 
push
 
$0x
##
NUMBER
; \

117 
jmp
 
öå_íåy
; \

118 .
ídfunc
; \

120 .
d©a
; \

121 .
öå
##
NUMBER
##
_°ub
;

	)

124 
	$STUB
(00, 
zîo
Ë
	$STUB
(01, 
zîo
Ë
	$STUB
(02, 
zîo
Ë
	$STUB
(03, 
zîo
)

125 
	$STUB
(04, 
zîo
Ë
	$STUB
(05, 
zîo
Ë
	$STUB
(06, 
zîo
Ë
	$STUB
(07, 
zîo
)

126 
	$STUB
(08, 
REAL
Ë
	$STUB
(09, 
zîo
Ë
	$STUB
(0a, 
REAL
Ë
	$STUB
(0b, 
REAL
)

127 
	$STUB
(0c, 
zîo
Ë
	$STUB
(0d, 
REAL
Ë
	$STUB
(0e, 
REAL
Ë
	$STUB
(0f, 
zîo
)

129 
	$STUB
(10, 
zîo
Ë
	$STUB
(11, 
REAL
Ë
	$STUB
(12, 
zîo
Ë
	$STUB
(13, 
zîo
)

130 
	$STUB
(14, 
zîo
Ë
	$STUB
(15, 
zîo
Ë
	$STUB
(16, 
zîo
Ë
	$STUB
(17, 
zîo
)

131 
	$STUB
(18, 
REAL
Ë
	$STUB
(19, 
zîo
Ë
	$STUB
(1a, 
REAL
Ë
	$STUB
(1b, 
REAL
)

132 
	$STUB
(1c, 
zîo
Ë
	$STUB
(1d, 
REAL
Ë
	$STUB
(1e, 
REAL
Ë
	$STUB
(1f, 
zîo
)

134 
	$STUB
(20, 
zîo
Ë
	$STUB
(21, 
zîo
Ë
	$STUB
(22, 
zîo
Ë
	$STUB
(23, 
zîo
)

135 
	$STUB
(24, 
zîo
Ë
	$STUB
(25, 
zîo
Ë
	$STUB
(26, 
zîo
Ë
	$STUB
(27, 
zîo
)

136 
	$STUB
(28, 
zîo
Ë
	$STUB
(29, 
zîo
Ë
	$STUB
(2a, 
zîo
Ë
	$STUB
(2b, 
zîo
)

137 
	$STUB
(2c, 
zîo
Ë
	$STUB
(2d, 
zîo
Ë
	$STUB
(2e, 
zîo
Ë
	$STUB
(2f, 
zîo
)

139 
	$STUB
(30, 
zîo
Ë
	$STUB
(31, 
zîo
Ë
	$STUB
(32, 
zîo
Ë
	$STUB
(33, 
zîo
)

140 
	$STUB
(34, 
zîo
Ë
	$STUB
(35, 
zîo
Ë
	$STUB
(36, 
zîo
Ë
	$STUB
(37, 
zîo
)

141 
	$STUB
(38, 
zîo
Ë
	$STUB
(39, 
zîo
Ë
	$STUB
(3a, 
zîo
Ë
	$STUB
(3b, 
zîo
)

142 
	$STUB
(3c, 
zîo
Ë
	$STUB
(3d, 
zîo
Ë
	$STUB
(3e, 
zîo
Ë
	$STUB
(3f, 
zîo
)

144 
	$STUB
(40, 
zîo
Ë
	$STUB
(41, 
zîo
Ë
	$STUB
(42, 
zîo
Ë
	$STUB
(43, 
zîo
)

145 
	$STUB
(44, 
zîo
Ë
	$STUB
(45, 
zîo
Ë
	$STUB
(46, 
zîo
Ë
	$STUB
(47, 
zîo
)

146 
	$STUB
(48, 
zîo
Ë
	$STUB
(49, 
zîo
Ë
	$STUB
(4a, 
zîo
Ë
	$STUB
(4b, 
zîo
)

147 
	$STUB
(4c, 
zîo
Ë
	$STUB
(4d, 
zîo
Ë
	$STUB
(4e, 
zîo
Ë
	$STUB
(4f, 
zîo
)

149 
	$STUB
(50, 
zîo
Ë
	$STUB
(51, 
zîo
Ë
	$STUB
(52, 
zîo
Ë
	$STUB
(53, 
zîo
)

150 
	$STUB
(54, 
zîo
Ë
	$STUB
(55, 
zîo
Ë
	$STUB
(56, 
zîo
Ë
	$STUB
(57, 
zîo
)

151 
	$STUB
(58, 
zîo
Ë
	$STUB
(59, 
zîo
Ë
	$STUB
(5a, 
zîo
Ë
	$STUB
(5b, 
zîo
)

152 
	$STUB
(5c, 
zîo
Ë
	$STUB
(5d, 
zîo
Ë
	$STUB
(5e, 
zîo
Ë
	$STUB
(5f, 
zîo
)

154 
	$STUB
(60, 
zîo
Ë
	$STUB
(61, 
zîo
Ë
	$STUB
(62, 
zîo
Ë
	$STUB
(63, 
zîo
)

155 
	$STUB
(64, 
zîo
Ë
	$STUB
(65, 
zîo
Ë
	$STUB
(66, 
zîo
Ë
	$STUB
(67, 
zîo
)

156 
	$STUB
(68, 
zîo
Ë
	$STUB
(69, 
zîo
Ë
	$STUB
(6a, 
zîo
Ë
	$STUB
(6b, 
zîo
)

157 
	$STUB
(6c, 
zîo
Ë
	$STUB
(6d, 
zîo
Ë
	$STUB
(6e, 
zîo
Ë
	$STUB
(6f, 
zîo
)

159 
	$STUB
(70, 
zîo
Ë
	$STUB
(71, 
zîo
Ë
	$STUB
(72, 
zîo
Ë
	$STUB
(73, 
zîo
)

160 
	$STUB
(74, 
zîo
Ë
	$STUB
(75, 
zîo
Ë
	$STUB
(76, 
zîo
Ë
	$STUB
(77, 
zîo
)

161 
	$STUB
(78, 
zîo
Ë
	$STUB
(79, 
zîo
Ë
	$STUB
(7a, 
zîo
Ë
	$STUB
(7b, 
zîo
)

162 
	$STUB
(7c, 
zîo
Ë
	$STUB
(7d, 
zîo
Ë
	$STUB
(7e, 
zîo
Ë
	`STUB
(7f, zero)

	@arch/i386/switch.S

2 .
£t
 
	gARG_CUR
, 8

3 .
£t
 
	gARG_NEXT
, 12

5 .
globÆ
 
	gswôch_¥o˚ss


7 .
func
 
swôch_¥o˚ss


8 
	gswôch_¥o˚ss
:

11 
pushl
 %
ebp


12 
movl
 %
e•
, %
ebp


14 
	gpushl
 %
óx


15 
	gpushl
 %
ebx


16 
	gpushl
 %
ecx


17 
	gpushl
 %
edx


18 
	gpushl
 %
esi


19 
	gpushl
 %
	gedi


22 .
globÆ
 
¥o˚ss_°ack_ofs


23 
mov
 
	g¥o˚ss_°ack_ofs
, %
edx


24 
mov
 
	g¥o˚ss_°ack_ofs
, %
ebx


25 
addl
 
	g$4
, %
ebx


28 
movl
 
ARG_CUR
(%
ebp
), %
óx


29 
	gmovl
 %
	ge•
, (%
	góx
, %
	gedx
, 1)

32 
movl
 
ARG_NEXT
(%
ebp
), %
óx


34 
movl
 (%
óx
, %
edx
, 1), %
e•


35 
movl
 (%
óx
, %
ebx
, 1), %
ecx


36 
	gmovl
 %
	gecx
, %
¸3


39 
	gp›l
 %
edi


40 
	gp›l
 %
esi


41 
	gp›l
 %
edx


42 
	gp›l
 %
ecx


43 
	gp›l
 %
ebx


44 
	gp›l
 %
óx


46 
	gp›l
 %
ebp


48 
	gªt


	@arch/interrupt.c

1 
	~<öãºu±.h
>

2 
	~<devi˚/c⁄sﬁe.h
>

3 
	~<ty≥.h
>

4 
	~<devi˚/pô.h
>

5 
	~<¥oc/sched.h
>

6 
	~<devi˚/io.h
>

7 
	~<devi˚/kbd.h
>

8 
	~<¥oc/¥oc.h
>

9 
	~<ssulib.h
>

10 
	~<¥oc/swôch.h
>

11 
	~<sysˇŒ.h
>

12 
	~<öå-°ubs.h
>

15 
	#TIMER_MAX
 10

	)

16 
	#REFRESH_FPS
 20

	)

17 
	#CODE_SEGMENT
 0x08

	)

19 #¥agm®
∑ck
(
push
, 1)

21 
	s_ID


23 
	mLowOff£t
;

24 
	mCodeSñe˘‹
;

25 
	mTy≥
;

26 
	mHighOff£t
;

27 } 
	t_ID
;

29 
	s_IDTR


31 
	mSize
;

32 
	mAddªss
;

33 } 
	t_IDTR
;

34 #¥agm®
∑ck
(
p›
)

36 
_ID
 *
	gidt
;

38 #i‚de‡
ASSERT


39 
	#ASSERT
(
CONDITION
Ë–(*Ë0)

	)

42 
	gticks
;

44 
öå_h™dÀr_func
 *
	gh™dÀrs
[
INTR_MAX
];

45 
boﬁ
 
	gsched_⁄_ªtu∫
;

49 
boﬁ
 
	gö_exã∫Æ_öå
;

51 
deÁu…_h™dÀr
(
öå_‰ame
 *
i‰ame
);

52 
timî_h™dÀr
(
öå_‰ame
 *
i‰ame
);

53 
sysˇŒ_h™dÀr
(
öå_‰ame
 *
i‰ame
);

55 
	$öô_öå
()

57 
i
;

59 
ticks
 = 0;

60 
ö_exã∫Æ_öå
 = 
Ál£
;

61 
sched_⁄_ªtu∫
 = 
Ál£
;

63 
öå_Àvñ
 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
();

65 
_IDTR
 
IDTR
;

67 
__asm__
 
	`__vﬁ©ûe
("sidà%0"::"m" (
IDTR
));

68 
	`¥ötk
("idå sizê: %dáddªs†: 0x%x\n", 
IDTR
.
Size
, IDTR.
Addªss
);

69 
idt
 = (
_ID
 *)
IDTR
.
Addªss
;

72 
i
 = 0; i<
INTR_MAX
; i++)

74 
idt
[
i
].
LowOff£t
 = ()(()
öå_°ubs
[i] & 0xffff);

75 
idt
[
i
].
CodeSñe˘‹
 = ()
CODE_SEGMENT
;

76 if(
i
 == 14)

77 
idt
[
i
].
Ty≥
 = ()0x8f00;

79 
idt
[
i
].
Ty≥
 = ()0x8e00;

80 
idt
[
i
].
HighOff£t
 = ()((()
öå_°ubs
[i] >> 16) & 0xffff);

82 
h™dÀrs
[
i
] = 
deÁu…_h™dÀr
;

85 
	`ªg_h™dÀr
(32, 
timî_h™dÀr
);

86 
	`¥ötk
("%s", "Timer Handler Registration\n");

89 
	`ªg_h™dÀr
(0x30, 
sysˇŒ_h™dÀr
);

90 
	`¥ötk
("%s", "System Call Handler Registeration\n");

92 
	`öå_£t_Àvñ
 (
ﬁd_Àvñ
);

94 
	}
}

96 
	$öå_comm⁄
(
öå_‰ame
 *
i‰ame
)

98 
ö_exã∫Æ_öå
 = 
i‰ame
->
vec_no
 >= 0x20 && iframe->vec_no < 0x30;

101 if(
ö_exã∫Æ_öå
)

103 
	`ASSERT
 (
	`öå_gë_Àvñ
 (Ë=
INTR_OFF
);

104 
sched_⁄_ªtu∫
 = 
Ál£
;

108 if(
h™dÀrs
[
i‰ame
->
vec_no
] !
NULL
)

109 
h™dÀrs
[
i‰ame
->
vec_no
](iframe);

116 
	`deÁu…_h™dÀr
(
i‰ame
);

119 if(
ö_exã∫Æ_öå
)

121 
	`ASSERT
 (
i‰ame
->
vec_no
 >= 0x20 && iframe->vec_no < 0x30);

123 
ö_exã∫Æ_öå
 = 
Ál£
;

126 
	`outb
(0x20, 0x20);

129 if(
i‰ame
->
vec_no
 >= 0x28)

130 
	`outb
(0xa0, 0x20);

132 if(
sched_⁄_ªtu∫
)

133 
	`scheduÀ
();

135 
	}
}

138 
	$do_sched_⁄_ªtu∫
()

140 
	`ASSERT
 (
	`öå_c⁄ãxt
 ());

141 
sched_⁄_ªtu∫
 = 
åue
;

142 
	}
}

144 
	$ªg_h™dÀr
(
idx
, 
öå_h™dÀr_func
 *
h™dÀr
)

146 
öå_Àvñ
 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
();

148 
h™dÀrs
[
idx
] = 
h™dÀr
;

151 
	`öå_£t_Àvñ
 (
ﬁd_Àvñ
);

153 
	}
}

162 
	#FLAG_MBS
 0x00000002

	)

163 
	#FLAG_IF
 0x00000200

	)

166 
öå_Àvñ
 
	$öå_gë_Àvñ
 ()

168 
uöt32_t
 
Êags
;

174 
asm
 vﬁ©ûê("pushÊ;Ö›»%0" : "=g" (
Êags
));

176  
Êags
 & 
FLAG_IF
 ? 
INTR_ON
 : 
INTR_OFF
;

177 
	}
}

181 
öå_Àvñ
 
	$öå_£t_Àvñ
 (
öå_Àvñ
 
Àvñ
)

183  
Àvñ
 =
INTR_ON
 ? 
	`öå_íabÀ
 (Ë: 
	`öå_dißbÀ
 ();

184 
	}
}

187 
öå_Àvñ
 
	$öå_íabÀ
 ()

189 
öå_Àvñ
 
ﬁd_Àvñ
 = 
	`öå_gë_Àvñ
 ();

190 
	`ASSERT
 (!
	`öå_c⁄ãxt
 ());

196 
asm
 volatile ("sti");

198  
ﬁd_Àvñ
;

199 
	}
}

202 
öå_Àvñ
 
	$öå_dißbÀ
 ()

204 
öå_Àvñ
 
ﬁd_Àvñ
 = 
	`öå_gë_Àvñ
 ();

209 
asm
 volatile ("cli" : : : "memory");

211  
ﬁd_Àvñ
;

212 
	}
}

216 
boﬁ
 
	$öå_c⁄ãxt
 ()

218  
ö_exã∫Æ_öå
;

219 
	}
}

223 
	$gë_ticks
()

225  
ticks
;

226 
	}
}

228 
	$deÁu…_h™dÀr
(
öå_‰ame
 *
i‰ame
)

232 
	`¥ötk
("\n\nöàöå %d\n\n", 
i‰ame
->
vec_no
);

236 
	}
}

238 
	$timî_h™dÀr
(
öå_‰ame
 *
i‰ame
)

240 
ticks
++;

241 
cur_¥o˚ss
->
time_u£d
++;

242 
cur_¥o˚ss
->
time_¶i˚
++;

244 if(
cur_¥o˚ss
->
time_¶i˚
 >
TIMER_MAX
)

246 
	`do_sched_⁄_ªtu∫
();

248 #ifde‡
SCREEN_SCROLL


250 
ª‰esh_ticks
 = 0;

251 if(++
ª‰esh_ticks
 >(
PIT_FRQ_HZ
/
REFRESH_FPS
)) {

252 
ª‰esh_ticks
 = 0;

253 
	`ª‰eshS¸ìn
();

256 
	}
}

258 
	$sysˇŒ_h™dÀr
(
öå_‰ame
 *
i‰ame
)

260 
sys_num
, 
¨g_num
, 
ªt
;

261 *
±
;

262 
i
;

264 
	#SYSCALL_ARG_MAX
 3

	)

265 
¨g
[
SYSCALL_ARG_MAX
];

267 
±
 = (*Ë((()&
i‰ame
->
ss
) - 4);

268 
sys_num
 = *
±
++;

269 
¨g_num
 = 
sysˇŒ_tbl
[
sys_num
][1];

271 
i
 = 0; i<
¨g_num
; i++)

272 
¨g
[
i
] = *
±
++;

274 
¨g_num
)

277 
ªt
 = (((*)())
sysˇŒ_tbl
[
sys_num
][0])();

280 
ªt
 = (((*)())
sysˇŒ_tbl
[
sys_num
][0])(
¨g
[0]);

283 
ªt
 = (((*)(, ))
sysˇŒ_tbl
[
sys_num
][0])(
¨g
[0],árg[1]);

286 
ªt
 = (((*)(, , ))
sysˇŒ_tbl
[
sys_num
][0]Ë(
¨g
[0],árg[1],árg[2]);

290 *(
±
 + 3Ë
ªt
;

291 
	}
}

	@arch/syscall.c

1 
	~<sysˇŒ.h
>

2 
	~<do_sysˇŒ.h
>

3 
	~<¥oc/¥oc.h
>

11 
	#sysˇŒ0
(
SYS_NUM
) ({ \

12 
ªt
; \

13 
__asm__
 
	`__vﬁ©ûe
( \

18 : [
num
] "g" (
SYS_NUM
) \

20 
ªt
; \

21 })

	)

23 
	#sysˇŒ1
(
SYS_NUM
, 
ARG0
) ({ \

24 
ªt
; \

25 
__asm__
 
	`__vﬁ©ûe
( \

31 : [
num
] "g" (
SYS_NUM
), \

32 [
¨g0
] "g" (
ARG0
) \

34 
ªt
; \

35 })

	)

37 
	#sysˇŒ2
(
SYS_NUM
, 
ARG0
, 
ARG1
) ({ \

38 
ªt
; \

39 
__asm__
 
	`__vﬁ©ûe
( \

46 : [
num
] "g" (
SYS_NUM
), \

47 [
¨g0
] "g" (
ARG0
), \

48 [
¨g1
] "g" (
ARG1
) \

50 
ªt
; \

51 })

	)

53 
	#sysˇŒ3
(
SYS_NUM
, 
ARG0
, 
ARG1
, 
ARG2
) ({ \

54 
ªt
; \

55 
__asm__
 
	`__vﬁ©ûe
( \

63 : [
num
] "g" (
SYS_NUM
), \

64 [
¨g0
] "g" (
ARG0
), \

65 [
¨g1
] "g" (
ARG1
), \

66 [
¨g2
] "g" (
ARG2
) \

68 
ªt
; \

69 })

	)

71 
	gsysˇŒ_tbl
[
SYS_NUM
][2];

73 
	#REGSYS
(
NUM
, 
FUNC
, 
ARG
) \

74 
sysˇŒ_tbl
[
NUM
][0] = ()
FUNC
; \

75 
sysˇŒ_tbl
[
NUM
][1] = 
ARG
;

	)

78 
	$öô_sysˇŒ
()

80 
	`REGSYS
(
SYS_FORK
, 
do_f‹k
, 2);

81 
	`REGSYS
(
SYS_EXIT
, 
do_exô
, 1);

82 
	`REGSYS
(
SYS_WAIT
, 
do_waô
, 1);

83 
	`REGSYS
(
SYS_SSUREAD
, 
do_ssuªad
, 0);

84 
	`REGSYS
(
SYS_SHUTDOWN
, 
do_shutdown
, 0);

85 
	}
}

87 
	$exô
(
°©us
)

89 
	`sysˇŒ1
(
SYS_EXIT
, 
°©us
);

90 
	}
}

92 
pid_t
 
	$f‹k
(
¥oc_func
 
func
, * 
aux
)

94  
	`sysˇŒ2
(
SYS_FORK
, 
func
, 
aux
);

95 
	}
}

97 
pid_t
 
	$waô
(*
°©us
)

99  
	`sysˇŒ1
(
SYS_WAIT
, 
°©us
);

100 
	}
}

102 
	$ssuªad
()

104  
	`sysˇŒ0
(
SYS_SSUREAD
);

105 
	}
}

107 
	$shutdown
()

109 
	`sysˇŒ0
(
SYS_SHUTDOWN
);

110 
	}
}

	@bitmap.c

1 
	~<bôm≠.h
>

2 
	~<limôs.h
>

3 
	~<round.h
>

7 #ifde‡
FILESYS


8 
	~<fûe.h
>

11 #i‚de‡
ASSERT


12 
	#ASSERT
(
COND
Ë;

	)

23 
	tñem_ty≥
;

26 
	#ELEM_BITS
 ( (
ñem_ty≥
Ë* 
CHAR_BIT
)

	)

31 
	sbôm≠


33 
size_t
 
	mbô_˙t
;

34 
ñem_ty≥
 *
	mbôs
;

39 
ölöe
 
size_t


40 
	$ñem_idx
 (
size_t
 
bô_idx
)

42  
bô_idx
 / 
ELEM_BITS
;

43 
	}
}

47 
ölöe
 
ñem_ty≥


48 
	$bô_mask
 (
size_t
 
bô_idx
)

50  (
ñem_ty≥
Ë1 << (
bô_idx
 % 
ELEM_BITS
);

51 
	}
}

54 
ölöe
 
size_t


55 
	$ñem_˙t
 (
size_t
 
bô_˙t
)

57  
	`DIV_ROUND_UP
 (
bô_˙t
, 
ELEM_BITS
);

58 
	}
}

61 
ölöe
 
size_t


62 
	$byã_˙t
 (
size_t
 
bô_˙t
)

64   (
ñem_ty≥
Ë* 
	`ñem_˙t
 (
bô_˙t
);

65 
	}
}

69 
ölöe
 
ñem_ty≥


70 
	$œ°_mask
 (c⁄° 
bôm≠
 *
b
)

72 
œ°_bôs
 = 
b
->
bô_˙t
 % 
ELEM_BITS
;

73  
œ°_bôs
 ? ((
ñem_ty≥
) 1 <<Üast_bits) - 1 : (elem_type) -1;

74 
	}
}

107 
bôm≠
 *

108 
	$bôm≠_¸óã_ö_buf
 (
size_t
 
bô_˙t
, *
block
, size_à
block_size
)

110 
bôm≠
 *
b
 = 
block
;

112 
	`ASSERT
 (
block_size
 >
	`bôm≠_buf_size
 (
bô_˙t
));

114 
b
->
bô_˙t
 = bit_cnt;

115 
b
->
bôs
 = (
ñem_ty≥
 *) (b + 1);

116 
	`bôm≠_£t_Æl
 (
b
, 
Ál£
);

117  
b
;

118 
	}
}

122 
size_t


123 
	$bôm≠_buf_size
 (
size_t
 
bô_˙t
)

125   (
bôm≠
Ë+ 
	`byã_˙t
 (
bô_˙t
);

126 
	}
}

145 
size_t


146 
	$bôm≠_size
 (c⁄° 
bôm≠
 *
b
)

148  
b
->
bô_˙t
;

149 
	}
}

154 
	$bôm≠_£t
 (
bôm≠
 *
b
, 
size_t
 
idx
, 
boﬁ
 
vÆue
)

156 
	`ASSERT
 (
b
 !
NULL
);

157 
	`ASSERT
 (
idx
 < 
b
->
bô_˙t
);

158 i‡(
vÆue
)

159 
	`bôm≠_m¨k
 (
b
, 
idx
);

161 
	`bôm≠_ª£t
 (
b
, 
idx
);

162 
	}
}

166 
	$bôm≠_m¨k
 (
bôm≠
 *
b
, 
size_t
 
bô_idx
)

168 
size_t
 
idx
 = 
	`ñem_idx
 (
bô_idx
);

169 
ñem_ty≥
 
mask
 = 
	`bô_mask
 (
bô_idx
);

175 
b
->
bôs
[
idx
] |
mask
;

176 
	}
}

180 
	$bôm≠_ª£t
 (
bôm≠
 *
b
, 
size_t
 
bô_idx
)

182 
size_t
 
idx
 = 
	`ñem_idx
 (
bô_idx
);

183 
ñem_ty≥
 
mask
 = 
	`bô_mask
 (
bô_idx
);

189 
b
->
bôs
[
idx
] &~
mask
;

190 
	}
}

196 
	$bôm≠_Êù
 (
bôm≠
 *
b
, 
size_t
 
bô_idx
)

198 
size_t
 
idx
 = 
	`ñem_idx
 (
bô_idx
);

199 
ñem_ty≥
 
mask
 = 
	`bô_mask
 (
bô_idx
);

205 
b
->
bôs
[
idx
] ^
mask
;

206 
	}
}

209 
boﬁ


210 
	$bôm≠_ã°
 (c⁄° 
bôm≠
 *
b
, 
size_t
 
idx
)

212 
	`ASSERT
 (
b
 !
NULL
);

213 
	`ASSERT
 (
idx
 < 
b
->
bô_˙t
);

214  (
b
->
bôs
[
	`ñem_idx
 (
idx
)] & 
	`bô_mask
 (idx)) != 0;

215 
	}
}

221 
	$bôm≠_£t_Æl
 (
bôm≠
 *
b
, 
boﬁ
 
vÆue
)

223 
	`ASSERT
 (
b
 !
NULL
);

225 
	`bôm≠_£t_mu…ùÀ
 (
b
, 0, 
	`bôm≠_size
 (b), 
vÆue
);

226 
	}
}

230 
	$bôm≠_£t_mu…ùÀ
 (
bôm≠
 *
b
, 
size_t
 
°¨t
, size_à
˙t
, 
boﬁ
 
vÆue
)

232 
size_t
 
i
;

234 
	`ASSERT
 (
b
 !
NULL
);

235 
	`ASSERT
 (
°¨t
 <
b
->
bô_˙t
);

236 
	`ASSERT
 (
°¨t
 + 
˙t
 <
b
->
bô_˙t
);

238 
i
 = 0; i < 
˙t
; i++)

239 
	`bôm≠_£t
 (
b
, 
°¨t
 + 
i
, 
vÆue
);

240 
	}
}

244 
size_t


245 
	$bôm≠_cou¡
 (c⁄° 
bôm≠
 *
b
, 
size_t
 
°¨t
, size_à
˙t
, 
boﬁ
 
vÆue
)

247 
size_t
 
i
, 
vÆue_˙t
;

249 
	`ASSERT
 (
b
 !
NULL
);

250 
	`ASSERT
 (
°¨t
 <
b
->
bô_˙t
);

251 
	`ASSERT
 (
°¨t
 + 
˙t
 <
b
->
bô_˙t
);

253 
vÆue_˙t
 = 0;

254 
i
 = 0; i < 
˙t
; i++)

255 i‡(
	`bôm≠_ã°
 (
b
, 
°¨t
 + 
i
Ë=
vÆue
)

256 
vÆue_˙t
++;

257  
vÆue_˙t
;

258 
	}
}

262 
boﬁ


263 
	$bôm≠_c⁄èös
 (c⁄° 
bôm≠
 *
b
, 
size_t
 
°¨t
, size_à
˙t
, 
boﬁ
 
vÆue
)

265 
size_t
 
i
;

267 
	`ASSERT
 (
b
 !
NULL
);

268 
	`ASSERT
 (
°¨t
 <
b
->
bô_˙t
);

269 
	`ASSERT
 (
°¨t
 + 
˙t
 <
b
->
bô_˙t
);

271 
i
 = 0; i < 
˙t
; i++)

272 i‡(
	`bôm≠_ã°
 (
b
, 
°¨t
 + 
i
Ë=
vÆue
)

273  
åue
;

274  
Ál£
;

275 
	}
}

279 
boﬁ


280 
	$bôm≠_™y
 (c⁄° 
bôm≠
 *
b
, 
size_t
 
°¨t
, size_à
˙t
)

282  
	`bôm≠_c⁄èös
 (
b
, 
°¨t
, 
˙t
, 
åue
);

283 
	}
}

287 
boﬁ


288 
	$bôm≠_n⁄e
 (c⁄° 
bôm≠
 *
b
, 
size_t
 
°¨t
, size_à
˙t
)

290  !
	`bôm≠_c⁄èös
 (
b
, 
°¨t
, 
˙t
, 
åue
);

291 
	}
}

295 
boﬁ


296 
	$bôm≠_Æl
 (c⁄° 
bôm≠
 *
b
, 
size_t
 
°¨t
, size_à
˙t
)

298  !
	`bôm≠_c⁄èös
 (
b
, 
°¨t
, 
˙t
, 
Ál£
);

299 
	}
}

307 
size_t


308 
	$bôm≠_sˇn
 (c⁄° 
bôm≠
 *
b
, 
size_t
 
°¨t
, size_à
˙t
, 
boﬁ
 
vÆue
)

310 
	`ASSERT
 (
b
 !
NULL
);

311 
	`ASSERT
 (
°¨t
 <
b
->
bô_˙t
);

313 i‡(
˙t
 <
b
->
bô_˙t
)

315 
size_t
 
œ°
 = 
b
->
bô_˙t
 - 
˙t
;

316 
size_t
 
i
;

317 
i
 = 
°¨t
; i <
œ°
; i++)

318 i‡(!
	`bôm≠_c⁄èös
 (
b
, 
i
, 
˙t
, !
vÆue
))

319  
i
;

321  
BITMAP_ERROR
;

322 
	}
}

331 
size_t


332 
	$bôm≠_sˇn_™d_Êù
 (
bôm≠
 *
b
, 
size_t
 
°¨t
, size_à
˙t
, 
boﬁ
 
vÆue
)

334 
size_t
 
idx
 = 
	`bôm≠_sˇn
 (
b
, 
°¨t
, 
˙t
, 
vÆue
);

335 i‡(
idx
 !
BITMAP_ERROR
)

336 
	`bôm≠_£t_mu…ùÀ
 (
b
, 
idx
, 
˙t
, !
vÆue
);

337  
idx
;

338 
	}
}

342 #ifde‡
FILESYS


344 
size_t


345 
	$bôm≠_fûe_size
 (c⁄° 
bôm≠
 *
b
)

347  
	`byã_˙t
 (
b
->
bô_˙t
);

348 
	}
}

352 
boﬁ


353 
	$bôm≠_ªad
 (
bôm≠
 *
b
, 
fûe
 *file)

355 
boﬁ
 
suc˚ss
 = 
åue
;

356 i‡(
b
->
bô_˙t
 > 0)

358 
off_t
 
size
 = 
	`byã_˙t
 (
b
->
bô_˙t
);

359 
suc˚ss
 = 
	`fûe_ªad_©
 (
fûe
, 
b
->
bôs
, 
size
, 0) == size;

360 
b
->
bôs
[
	`ñem_˙t
 (b->
bô_˙t
Ë- 1] &
	`œ°_mask
 (b);

362  
suc˚ss
;

363 
	}
}

367 
boﬁ


368 
	$bôm≠_wrôe
 (c⁄° 
bôm≠
 *
b
, 
fûe
 *file)

370 
off_t
 
size
 = 
	`byã_˙t
 (
b
->
bô_˙t
);

371  
	`fûe_wrôe_©
 (
fûe
, 
b
->
bôs
, 
size
, 0) == size;

372 
	}
}

	@build/Main.s

1 .
	gfûe
 "Main.c"

2 .
	gãxt


3 .
	gLãxt0
:

4 .
comm
 
Glob_x
,4,4

5 .
comm
 
	gGlob_y
,4,4

6 .
globl
 
	gVERSION


7 .
	g£˘i⁄
 .
	grod©a


8 .
	gLC0
:

9 .
°rög
 "0.1.05"

10 .
d©a


11 .
Æign
 4

12 .
ty≥
 
VERSION
, @
	gobje˘


13 .
size
 
	gVERSION
, 4

14 
	gVERSION
:

15 ..
LC0


16 .
globl
 
AUTHOR


17 .
£˘i⁄
 .
rod©a


18 .
LC1
:

19 .
°rög
 "OSLAB"

20 .
d©a


21 .
Æign
 4

22 .
ty≥
 
AUTHOR
, @
	gobje˘


23 .
size
 
	gAUTHOR
, 4

24 
	gAUTHOR
:

25 ..
LC1


26 .
globl
 
MODIFIER


27 .
£˘i⁄
 .
rod©a


28 .
LC2
:

29 .
°rög
 "You"

30 .
d©a


31 .
Æign
 4

32 .
ty≥
 
MODIFIER
, @
	gobje˘


33 .
size
 
	gMODIFIER
, 4

34 
	gMODIFIER
:

35 ..
LC2


36 .
ãxt


37 .
globl
 
ssuos_maö


38 .
ty≥
 
ssuos_maö
, @
fun˘i⁄


39 
	gssuos_maö
:

40 .
LFB3
:

41 .
fûe
 1 "arch/Main.c"

42 .
loc
 1 27 0

43 .
cfi_°¨çroc


44 
pushl
 %
ebp


45 .
cfi_def_cÁ_off£t
 8

46 .
cfi_off£t
 5, -8

47 
	gmovl
 %
	ge•
, %
	gebp


48 .
	gcfi_def_cÁ_ªgi°î
 5

49 
subl
 
	g$8
, %
	ge•


50 .
	gloc
 1 28 0

51 
ˇŒ
 
	gmaö_öô


52 .
	gloc
 1 30 0

53 
subl
 
	g$12
, %
e•


54 
pushl
 
$0


55 
ˇŒ
 
idÀ


56 
addl
 
	g$16
, %
	ge•


57 .
	gloc
 1 32 0

58 
	gn›


59 .
	gloc
 1 33 0

60 
	gÀave


61 .
	gcfi_ª°‹e
 5

62 .
	gcfi_def_cÁ
 4, 4

63 
	gªt


64 .
	gcfi_íd¥oc


65 .
	gLFE3
:

66 .
size
 
ssuos_maö
, .-
	gssuos_maö


67 .
	g£˘i⁄
 .
	grod©a


68 .
	gLC3
:

69 .
°rög
 "Memory Detecting\n"

70 .
LC4
:

71 .
°rög
 "%s"

72 .
LC5
:

73 .
°rög
 "-Memory size = %u Kbytes\n"

74 .
LC6
:

75 .
°rög
 "PIT Intialization\n"

76 .
LC7
:

77 .
°rög
 "System call Intialization\n"

78 .
LC8
:

79 .
°rög
 "Interrupt Initialization\n"

80 .
LC9
:

81 .
°rög
 "%sPalloc Initialization\n"

82 .
LC10
:

83 .
°rög
 "Paging Initialization\n"

84 .
LC11
:

85 .
°rög
 "Process Intialization\n"

86 .
Æign
 4

87 .
LC12
:

88 .
°rög
 "========== initialization complete ==========\n\n"

89 .
ãxt


90 .
globl
 
maö_öô


91 .
ty≥
 
maö_öô
, @
fun˘i⁄


92 
	gmaö_öô
:

93 .
LFB4
:

94 .
loc
 1 36 0

95 .
cfi_°¨çroc


96 
pushl
 %
ebp


97 .
cfi_def_cÁ_off£t
 8

98 .
cfi_off£t
 5, -8

99 
	gmovl
 %
	ge•
, %
	gebp


100 .
	gcfi_def_cÁ_ªgi°î
 5

101 
subl
 
	g$8
, %
	ge•


102 .
	gloc
 1 37 0

103 
ˇŒ
 
	göå_dißbÀ


104 .
	gloc
 1 40 0

105 
ˇŒ
 
	göô_c⁄sﬁe


106 .
	gloc
 1 42 0

107 
ˇŒ
 
	g¥öt_c⁄åibut‹s


108 .
	gloc
 1 44 0

109 
ˇŒ
 
	gdëe˘_mem


110 .
	gloc
 1 45 0

111 
subl
 
	g$8
, %
e•


112 
pushl
 
	g$
.
LC3


113 
pushl
 
	g$
.
LC4


114 
ˇŒ
 
¥ötk


115 
addl
 
	g$16
, %
	ge•


116 .
	gloc
 1 46 0

117 
ˇŒ
 
mem_size


118 
shæ
 
	g$10
, %
óx


119 
subl
 
	g$8
, %
e•


120 
	gpushl
 %
óx


121 
pushl
 
	g$
.
LC5


122 
ˇŒ
 
¥ötk


123 
addl
 
	g$16
, %
	ge•


124 .
	gloc
 1 48 0

125 
ˇŒ
 
	göô_pô


126 .
	gloc
 1 49 0

127 
subl
 
	g$8
, %
e•


128 
pushl
 
	g$
.
LC6


129 
pushl
 
	g$
.
LC4


130 
ˇŒ
 
¥ötk


131 
addl
 
	g$16
, %
	ge•


132 .
	gloc
 1 51 0

133 
ˇŒ
 
	göô_sysˇŒ


134 .
	gloc
 1 52 0

135 
subl
 
	g$8
, %
e•


136 
pushl
 
	g$
.
LC7


137 
pushl
 
	g$
.
LC4


138 
ˇŒ
 
¥ötk


139 
addl
 
	g$16
, %
	ge•


140 .
	gloc
 1 54 0

141 
ˇŒ
 
	göô_öå


142 .
	gloc
 1 55 0

143 
subl
 
	g$8
, %
e•


144 
pushl
 
	g$
.
LC8


145 
pushl
 
	g$
.
LC4


146 
ˇŒ
 
¥ötk


147 
addl
 
	g$16
, %
	ge•


148 .
	gloc
 1 57 0

149 
ˇŒ
 
	göô_kbd


150 .
	gloc
 1 59 0

151 
ˇŒ
 
	göô_∑Œoc


152 .
	gloc
 1 60 0

153 
subl
 
	g$12
, %
e•


154 
pushl
 
	g$
.
LC9


155 
ˇŒ
 
¥ötk


156 
addl
 
	g$16
, %
	ge•


157 .
	gloc
 1 62 0

158 
ˇŒ
 
	göô_∑gög


159 .
	gloc
 1 63 0

160 
subl
 
	g$8
, %
e•


161 
pushl
 
	g$
.
LC10


162 
pushl
 
	g$
.
LC4


163 
ˇŒ
 
¥ötk


164 
addl
 
	g$16
, %
	ge•


165 .
	gloc
 1 65 0

166 
ˇŒ
 
	göô_¥oc


167 .
	gloc
 1 66 0

168 
subl
 
	g$8
, %
e•


169 
pushl
 
	g$
.
LC11


170 
pushl
 
	g$
.
LC4


171 
ˇŒ
 
¥ötk


172 
addl
 
	g$16
, %
	ge•


173 .
	gloc
 1 68 0

174 
ˇŒ
 
	göå_íabÀ


175 .
	gloc
 1 70 0

176 
ˇŒ
 
	gide_öô


177 .
	gloc
 1 73 0

178 
ˇŒ
 
	g£ma_£lf_ã°


179 .
	gloc
 1 74 0

180 
subl
 
	g$12
, %
e•


181 
pushl
 
	g$
.
LC12


182 
ˇŒ
 
¥ötk


183 
addl
 
	g$16
, %
	ge•


184 .
	gloc
 1 80 0

185 
n›


186 
	gÀave


187 .
	gcfi_ª°‹e
 5

188 .
	gcfi_def_cÁ
 4, 4

189 
	gªt


190 .
	gcfi_íd¥oc


191 .
	gLFE4
:

192 .
size
 
maö_öô
, .-
	gmaö_öô


193 .
	g£˘i⁄
 .
	grod©a


194 .
	gLC13
:

195 .
°rög
 "SSUOS main start!!!!\n"

196 .
Æign
 4

197 .
LC14
:

198 .
°rög
 " ______ ______ __ __ ______ ______ \n"

199 .
Æign
 4

200 .
LC15
:

201 .
°rög
 " / \\ / \\ / | / | / \\ / \\ \n"

202 .
Æign
 4

203 .
LC16
:

204 .
°rög
 " /$$$$$$ |/$$$$$$ |$$ | $$ | /$$$$$$ |/$$$$$$ |\n"

205 .
Æign
 4

206 .
LC17
:

207 .
°rög
 " $$ \\__$$/ $$ \\__$$/ $$ | $$ | $$ | $$ |$$ \\__$$/ \n"

208 .
Æign
 4

209 .
LC18
:

210 .
°rög
 " $$ \\ $$ \\ $$ | $$ | $$ | $$ |$$ \\ \n"

211 .
Æign
 4

212 .
LC19
:

213 .
°rög
 " $$$$$$ | $$$$$$ |$$ | $$ | $$ | $$ | $$$$$$ |\n"

214 .
Æign
 4

215 .
LC20
:

216 .
°rög
 " / \\__$$ |/ \\__$$ |$$ \\__$$ | $$ \\__$$ |/ \\__$$ |\n"

217 .
Æign
 4

218 .
LC21
:

219 .
°rög
 " $$ $$/ $$ $$/ $$ $$/ $$ $$/ $$ $$/ \n"

220 .
Æign
 4

221 .
LC22
:

222 .
°rög
 " $$$$$$/ $$$$$$/ $$$$$$/ $$$$$$/ $$$$$$/ \n"

223 .
LC23
:

224 .
°rög
 "\n"

225 .
Æign
 4

226 .
LC24
:

227 .
°rög
 "****************Made by OSLAB in SoongSil University*********************\n"

228 .
Æign
 4

229 .
LC25
:

230 .
°rög
 "contributors : Yunkyu Lee , Minwoo Jang , Sanghun Choi , Eunseok Choi\n"

231 .
Æign
 4

232 .
LC26
:

233 .
°rög
 " Hyunho Ji , Giwook Kang , Kisu Kim , Seonguk Lee \n"

234 .
Æign
 4

235 .
LC27
:

236 .
°rög
 " Gibeom Byeon, Jeonghwan Lee, Kyoungmin Kim, Myungjoon Shon\n"

237 .
Æign
 4

238 .
LC28
:

239 .
°rög
 "************************ Professor. Jiman Hong ************************\n"

240 .
Æign
 4

241 .
LC29
:

242 .
°rög
 " \n"

243 .
ãxt


244 .
globl
 
¥öt_c⁄åibut‹s


245 .
ty≥
 
¥öt_c⁄åibut‹s
, @
fun˘i⁄


246 
	g¥öt_c⁄åibut‹s
:

247 .
LFB5
:

248 .
loc
 1 83 0

249 .
cfi_°¨çroc


250 
pushl
 %
ebp


251 .
cfi_def_cÁ_off£t
 8

252 .
cfi_off£t
 5, -8

253 
	gmovl
 %
	ge•
, %
	gebp


254 .
	gcfi_def_cÁ_ªgi°î
 5

255 
subl
 
	g$8
, %
	ge•


256 .
	gloc
 1 84 0

257 
subl
 
	g$8
, %
e•


258 
pushl
 
	g$
.
LC13


259 
pushl
 
	g$
.
LC4


260 
ˇŒ
 
¥ötk


261 
addl
 
	g$16
, %
	ge•


262 .
	gloc
 1 85 0

263 
subl
 
	g$12
, %
e•


264 
pushl
 
	g$
.
LC14


265 
ˇŒ
 
¥ötk


266 
addl
 
	g$16
, %
	ge•


267 .
	gloc
 1 86 0

268 
subl
 
	g$12
, %
e•


269 
pushl
 
	g$
.
LC15


270 
ˇŒ
 
¥ötk


271 
addl
 
	g$16
, %
	ge•


272 .
	gloc
 1 87 0

273 
subl
 
	g$12
, %
e•


274 
pushl
 
	g$
.
LC16


275 
ˇŒ
 
¥ötk


276 
addl
 
	g$16
, %
	ge•


277 .
	gloc
 1 88 0

278 
subl
 
	g$12
, %
e•


279 
pushl
 
	g$
.
LC17


280 
ˇŒ
 
¥ötk


281 
addl
 
	g$16
, %
	ge•


282 .
	gloc
 1 89 0

283 
subl
 
	g$12
, %
e•


284 
pushl
 
	g$
.
LC18


285 
ˇŒ
 
¥ötk


286 
addl
 
	g$16
, %
	ge•


287 .
	gloc
 1 90 0

288 
subl
 
	g$12
, %
e•


289 
pushl
 
	g$
.
LC19


290 
ˇŒ
 
¥ötk


291 
addl
 
	g$16
, %
	ge•


292 .
	gloc
 1 91 0

293 
subl
 
	g$12
, %
e•


294 
pushl
 
	g$
.
LC20


295 
ˇŒ
 
¥ötk


296 
addl
 
	g$16
, %
	ge•


297 .
	gloc
 1 92 0

298 
subl
 
	g$12
, %
e•


299 
pushl
 
	g$
.
LC21


300 
ˇŒ
 
¥ötk


301 
addl
 
	g$16
, %
	ge•


302 .
	gloc
 1 93 0

303 
subl
 
	g$12
, %
e•


304 
pushl
 
	g$
.
LC22


305 
ˇŒ
 
¥ötk


306 
addl
 
	g$16
, %
	ge•


307 .
	gloc
 1 94 0

308 
subl
 
	g$12
, %
e•


309 
pushl
 
	g$
.
LC23


310 
ˇŒ
 
¥ötk


311 
addl
 
	g$16
, %
	ge•


312 .
	gloc
 1 95 0

313 
subl
 
	g$12
, %
e•


314 
pushl
 
	g$
.
LC24


315 
ˇŒ
 
¥ötk


316 
addl
 
	g$16
, %
	ge•


317 .
	gloc
 1 96 0

318 
subl
 
	g$12
, %
e•


319 
pushl
 
	g$
.
LC23


320 
ˇŒ
 
¥ötk


321 
addl
 
	g$16
, %
	ge•


322 .
	gloc
 1 97 0

323 
subl
 
	g$12
, %
e•


324 
pushl
 
	g$
.
LC25


325 
ˇŒ
 
¥ötk


326 
addl
 
	g$16
, %
	ge•


327 .
	gloc
 1 98 0

328 
subl
 
	g$12
, %
e•


329 
pushl
 
	g$
.
LC26


330 
ˇŒ
 
¥ötk


331 
addl
 
	g$16
, %
	ge•


332 .
	gloc
 1 99 0

333 
subl
 
	g$12
, %
e•


334 
pushl
 
	g$
.
LC27


335 
ˇŒ
 
¥ötk


336 
addl
 
	g$16
, %
	ge•


337 .
	gloc
 1 100 0

338 
subl
 
	g$12
, %
e•


339 
pushl
 
	g$
.
LC23


340 
ˇŒ
 
¥ötk


341 
addl
 
	g$16
, %
	ge•


342 .
	gloc
 1 101 0

343 
subl
 
	g$12
, %
e•


344 
pushl
 
	g$
.
LC28


345 
ˇŒ
 
¥ötk


346 
addl
 
	g$16
, %
	ge•


347 .
	gloc
 1 102 0

348 
subl
 
	g$12
, %
e•


349 
pushl
 
	g$
.
LC29


350 
ˇŒ
 
¥ötk


351 
addl
 
	g$16
, %
	ge•


352 .
	gloc
 1 103 0

353 
n›


354 
	gÀave


355 .
	gcfi_ª°‹e
 5

356 .
	gcfi_def_cÁ
 4, 4

357 
	gªt


358 .
	gcfi_íd¥oc


359 .
	gLFE5
:

360 .
size
 
¥öt_c⁄åibut‹s
, .-
	g¥öt_c⁄åibut‹s


361 .
	gLëext0
:

362 .
fûe
 2 "./include/device/console.h"

363 .
fûe
 3 "./include/syscall.h"

364 .
£˘i⁄
 .
debug_öfo
,"",@
	g¥ogbôs


365 .
	gLdebug_öfo0
:

367 .
vÆue
 0x4

368 ..
Ldebug_abbªv0


369 .
byã
 0x4

370 .
uÀb128
 0x1

371 ..
LASF21


372 .
byã
 0xc

373 ..
LASF22


374 ..
LASF23


375 ..
Lãxt0


376 ..
Lëext0
-.
Lãxt0


377 ..
Ldebug_löe0


378 .
uÀb128
 0x2

379 .
byã
 0x1

380 .
byã
 0x8

381 ..
LASF0


382 .
uÀb128
 0x2

383 .
byã
 0x1

384 .
byã
 0x6

385 ..
LASF1


386 .
uÀb128
 0x2

387 .
byã
 0x4

388 .
byã
 0x7

389 ..
LASF2


390 .
uÀb128
 0x2

391 .
byã
 0x8

392 .
byã
 0x5

393 ..
LASF3


394 .
uÀb128
 0x2

395 .
byã
 0x1

396 .
byã
 0x6

397 ..
LASF4


398 .
uÀb128
 0x2

399 .
byã
 0x2

400 .
byã
 0x5

401 ..
LASF5


402 .
uÀb128
 0x3

403 .
byã
 0x4

404 .
byã
 0x5

405 .
°rög
 "int"

406 .
uÀb128
 0x2

407 .
byã
 0x2

408 .
byã
 0x7

409 ..
LASF6


410 .
uÀb128
 0x2

411 .
byã
 0x8

412 .
byã
 0x7

413 ..
LASF7


414 .
uÀb128
 0x4

415 ..
LASF24


416 .
byã
 0x4

418 .
byã
 0x3

419 .
byã
 0x4

421 .
uÀb128
 0x5

422 ..
LASF8


423 .
byã
 0

424 .
uÀb128
 0x5

425 ..
LASF9


426 .
byã
 0x1

427 .
uÀb128
 0x5

428 ..
LASF10


429 .
byã
 0x2

430 .
uÀb128
 0x5

431 ..
LASF11


432 .
byã
 0x3

433 .
uÀb128
 0x5

434 ..
LASF12


435 .
byã
 0x4

436 .
uÀb128
 0x5

437 ..
LASF13


438 .
byã
 0x5

439 .
byã
 0

440 .
uÀb128
 0x6

441 ..
LASF14


442 .
byã
 0x1

443 .
byã
 0x1a

444 ..
LFB3


445 ..
LFE3
-.
LFB3


446 .
uÀb128
 0x1

447 .
byã
 0x9c

448 .
uÀb128
 0x7

449 ..
LASF25


450 .
byã
 0x1

451 .
byã
 0x23

452 ..
LFB4


453 ..
LFE4
-.
LFB4


454 .
uÀb128
 0x1

455 .
byã
 0x9c

457 .
uÀb128
 0x8

458 ..
LASF26


459 .
byã
 0x1

460 .
byã
 0x46

462 .
uÀb128
 0x9

463 .
byã
 0

464 .
byã
 0

465 .
uÀb128
 0x6

466 ..
LASF15


467 .
byã
 0x1

468 .
byã
 0x52

469 ..
LFB5


470 ..
LFE5
-.
LFB5


471 .
uÀb128
 0x1

472 .
byã
 0x9c

473 .
uÀb128
 0xa

474 ..
LASF16


475 .
byã
 0x2

476 .
byã
 0xc

478 .
uÀb128
 0x5

479 .
byã
 0x3

480 .
Glob_x


481 .
uÀb128
 0xa

482 ..
LASF17


483 .
byã
 0x2

484 .
byã
 0xd

486 .
uÀb128
 0x5

487 .
byã
 0x3

488 .
Glob_y


489 .
uÀb128
 0xa

490 ..
LASF18


491 .
byã
 0x1

492 .
byã
 0x16

494 .
uÀb128
 0x5

495 .
byã
 0x3

496 .
VERSION


497 .
uÀb128
 0xb

498 .
byã
 0x4

500 .
uÀb128
 0xc

502 .
uÀb128
 0xa

503 ..
LASF19


504 .
byã
 0x1

505 .
byã
 0x17

507 .
uÀb128
 0x5

508 .
byã
 0x3

509 .
AUTHOR


510 .
uÀb128
 0xa

511 ..
LASF20


512 .
byã
 0x1

513 .
byã
 0x18

515 .
uÀb128
 0x5

516 .
byã
 0x3

517 .
MODIFIER


518 .
byã
 0

519 .
£˘i⁄
 .
debug_abbªv
,"",@
	g¥ogbôs


520 .
	gLdebug_abbªv0
:

521 .
uÀb128
 0x1

522 .
uÀb128
 0x11

523 .
byã
 0x1

524 .
uÀb128
 0x25

525 .
uÀb128
 0xe

526 .
uÀb128
 0x13

527 .
uÀb128
 0xb

528 .
uÀb128
 0x3

529 .
uÀb128
 0xe

530 .
uÀb128
 0x1b

531 .
uÀb128
 0xe

532 .
uÀb128
 0x11

533 .
uÀb128
 0x1

534 .
uÀb128
 0x12

535 .
uÀb128
 0x6

536 .
uÀb128
 0x10

537 .
uÀb128
 0x17

538 .
byã
 0

539 .
byã
 0

540 .
uÀb128
 0x2

541 .
uÀb128
 0x24

542 .
byã
 0

543 .
uÀb128
 0xb

544 .
uÀb128
 0xb

545 .
uÀb128
 0x3e

546 .
uÀb128
 0xb

547 .
uÀb128
 0x3

548 .
uÀb128
 0xe

549 .
byã
 0

550 .
byã
 0

551 .
uÀb128
 0x3

552 .
uÀb128
 0x24

553 .
byã
 0

554 .
uÀb128
 0xb

555 .
uÀb128
 0xb

556 .
uÀb128
 0x3e

557 .
uÀb128
 0xb

558 .
uÀb128
 0x3

559 .
uÀb128
 0x8

560 .
byã
 0

561 .
byã
 0

562 .
uÀb128
 0x4

563 .
uÀb128
 0x4

564 .
byã
 0x1

565 .
uÀb128
 0x3

566 .
uÀb128
 0xe

567 .
uÀb128
 0xb

568 .
uÀb128
 0xb

569 .
uÀb128
 0x49

570 .
uÀb128
 0x13

571 .
uÀb128
 0x3a

572 .
uÀb128
 0xb

573 .
uÀb128
 0x3b

574 .
uÀb128
 0xb

575 .
uÀb128
 0x1

576 .
uÀb128
 0x13

577 .
byã
 0

578 .
byã
 0

579 .
uÀb128
 0x5

580 .
uÀb128
 0x28

581 .
byã
 0

582 .
uÀb128
 0x3

583 .
uÀb128
 0xe

584 .
uÀb128
 0x1c

585 .
uÀb128
 0xb

586 .
byã
 0

587 .
byã
 0

588 .
uÀb128
 0x6

589 .
uÀb128
 0x2e

590 .
byã
 0

591 .
uÀb128
 0x3f

592 .
uÀb128
 0x19

593 .
uÀb128
 0x3

594 .
uÀb128
 0xe

595 .
uÀb128
 0x3a

596 .
uÀb128
 0xb

597 .
uÀb128
 0x3b

598 .
uÀb128
 0xb

599 .
uÀb128
 0x27

600 .
uÀb128
 0x19

601 .
uÀb128
 0x11

602 .
uÀb128
 0x1

603 .
uÀb128
 0x12

604 .
uÀb128
 0x6

605 .
uÀb128
 0x40

606 .
uÀb128
 0x18

607 .
uÀb128
 0x2116

608 .
uÀb128
 0x19

609 .
byã
 0

610 .
byã
 0

611 .
uÀb128
 0x7

612 .
uÀb128
 0x2e

613 .
byã
 0x1

614 .
uÀb128
 0x3f

615 .
uÀb128
 0x19

616 .
uÀb128
 0x3

617 .
uÀb128
 0xe

618 .
uÀb128
 0x3a

619 .
uÀb128
 0xb

620 .
uÀb128
 0x3b

621 .
uÀb128
 0xb

622 .
uÀb128
 0x27

623 .
uÀb128
 0x19

624 .
uÀb128
 0x11

625 .
uÀb128
 0x1

626 .
uÀb128
 0x12

627 .
uÀb128
 0x6

628 .
uÀb128
 0x40

629 .
uÀb128
 0x18

630 .
uÀb128
 0x2116

631 .
uÀb128
 0x19

632 .
uÀb128
 0x1

633 .
uÀb128
 0x13

634 .
byã
 0

635 .
byã
 0

636 .
uÀb128
 0x8

637 .
uÀb128
 0x2e

638 .
byã
 0x1

639 .
uÀb128
 0x3f

640 .
uÀb128
 0x19

641 .
uÀb128
 0x3

642 .
uÀb128
 0xe

643 .
uÀb128
 0x3a

644 .
uÀb128
 0xb

645 .
uÀb128
 0x3b

646 .
uÀb128
 0xb

647 .
uÀb128
 0x49

648 .
uÀb128
 0x13

649 .
uÀb128
 0x3c

650 .
uÀb128
 0x19

651 .
byã
 0

652 .
byã
 0

653 .
uÀb128
 0x9

654 .
uÀb128
 0x18

655 .
byã
 0

656 .
byã
 0

657 .
byã
 0

658 .
uÀb128
 0xa

659 .
uÀb128
 0x34

660 .
byã
 0

661 .
uÀb128
 0x3

662 .
uÀb128
 0xe

663 .
uÀb128
 0x3a

664 .
uÀb128
 0xb

665 .
uÀb128
 0x3b

666 .
uÀb128
 0xb

667 .
uÀb128
 0x49

668 .
uÀb128
 0x13

669 .
uÀb128
 0x3f

670 .
uÀb128
 0x19

671 .
uÀb128
 0x2

672 .
uÀb128
 0x18

673 .
byã
 0

674 .
byã
 0

675 .
uÀb128
 0xb

676 .
uÀb128
 0xf

677 .
byã
 0

678 .
uÀb128
 0xb

679 .
uÀb128
 0xb

680 .
uÀb128
 0x49

681 .
uÀb128
 0x13

682 .
byã
 0

683 .
byã
 0

684 .
uÀb128
 0xc

685 .
uÀb128
 0x26

686 .
byã
 0

687 .
uÀb128
 0x49

688 .
uÀb128
 0x13

689 .
byã
 0

690 .
byã
 0

691 .
byã
 0

692 .
£˘i⁄
 .
debug_¨™ges
,"",@
	g¥ogbôs


694 .
	gvÆue
 0x2

695 ..
	gLdebug_öfo0


696 .
	gbyã
 0x4

697 .
	gbyã
 0

698 .
	gvÆue
 0

699 .
	gvÆue
 0

700 ..
	gLãxt0


701 ..
	gLëext0
-.
	gLãxt0


704 .
	g£˘i⁄
 .
	gdebug_löe
,"",@
	g¥ogbôs


705 .
	gLdebug_löe0
:

706 .
£˘i⁄
 .
debug_°r
,"MS",@
	g¥ogbôs
,1

707 .
	gLASF3
:

708 .
°rög
 "longÜong int"

709 .
LASF2
:

710 .
°rög
 "unsigned int"

711 .
LASF0
:

712 .
°rög
 "unsigned char"

713 .
LASF14
:

714 .
°rög
 "ssuos_main"

715 .
LASF25
:

716 .
°rög
 "main_init"

717 .
LASF7
:

718 .
°rög
 "longÜong unsigned int"

719 .
LASF17
:

720 .
°rög
 "Glob_y"

721 .
LASF22
:

722 .
°rög
 "arch/Main.c"

723 .
LASF12
:

724 .
°rög
 "SYS_SHUTDOWN"

725 .
LASF11
:

726 .
°rög
 "SYS_SSUREAD"

727 .
LASF18
:

728 .
°rög
 "VERSION"

729 .
LASF1
:

730 .
°rög
 "char"

731 .
LASF19
:

732 .
°rög
 "AUTHOR"

733 .
LASF26
:

734 .
°rög
 "ide_init"

735 .
LASF24
:

736 .
°rög
 "SYS_LIST"

737 .
LASF23
:

738 .
°rög
 "/home/kisu/ssuos_v0.1.05/src/kernel"

739 .
LASF8
:

740 .
°rög
 "SYS_FORK"

741 .
LASF9
:

742 .
°rög
 "SYS_EXIT"

743 .
LASF6
:

744 .
°rög
 "short unsigned int"

745 .
LASF4
:

746 .
°rög
 "signed char"

747 .
LASF15
:

748 .
°rög
 "print_contributors"

749 .
LASF10
:

750 .
°rög
 "SYS_WAIT"

751 .
LASF5
:

752 .
°rög
 "short int"

753 .
LASF20
:

754 .
°rög
 "MODIFIER"

755 .
LASF13
:

756 .
°rög
 "SYS_NUM"

757 .
LASF16
:

758 .
°rög
 "Glob_x"

759 .
LASF21
:

760 .
°rög
 "GNU C11 5.3.1 20160406 (Red Hat 5.3.1-6) -m32 -mtune=generic -march=i686 -g -O0 -ffreestanding -fno-stack-protector"

761 .
idít
 "GCC: (GNU) 5.3.1 20160406 (Red Hat 5.3.1-6)"

762 .
£˘i⁄
 .
nŸe
.
GNU
-
°ack
,"",@
	g¥ogbôs


	@device/block.c

1 
	~<devi˚/block.h
>

2 
	~<li°.h
>

3 
	~<°rög.h
>

4 
	~<°dio.h
>

5 
	~<devi˚/ide.h
>

6 
	~<mem/mÆloc.h
>

9 
	sblock


11 
li°_ñem
 
	mli°_ñem
;

13 
	m«me
[16];

14 
block_ty≥
 
	mty≥
;

15 
block_£˘‹_t
 
	msize
;

17 c⁄° 
block_›î©i⁄s
 *
	m›s
;

18 *
	maux
;

20 
	mªad_˙t
;

21 
	mwrôe_˙t
;

25 
li°
 
	gÆl_blocks
 = 
LIST_INITIALIZER
 (
Æl_blocks
);

28 
block
 *
	gblock_by_rﬁe
[
BLOCK_ROLE_CNT
];

30 
block
 *
li°_ñem_to_block
 (
li°_ñem
 *);

35 
	$block_ty≥_«me
 (
block_ty≥
 
ty≥
)

37 c⁄° *
block_ty≥_«mes
[
BLOCK_CNT
] =

48  
block_ty≥_«mes
[
ty≥
];

49 
	}
}

53 
block
 *

54 
	$block_gë_rﬁe
 (
block_ty≥
 
rﬁe
)

57  
block_by_rﬁe
[
rﬁe
];

58 
	}
}

62 
	$block_£t_rﬁe
 (
block_ty≥
 
rﬁe
, 
block
 *block)

65 
block_by_rﬁe
[
rﬁe
] = 
block
;

66 
	}
}

70 
block
 *

71 
	$block_fú°
 ()

73  
	`li°_ñem_to_block
 (
	`li°_begö
 (&
Æl_blocks
));

74 
	}
}

78 
block
 *

79 
	$block_√xt
 (
block
 *block)

81  
	`li°_ñem_to_block
 (
	`li°_√xt
 (&
block
->
li°_ñem
));

82 
	}
}

86 
block
 *

87 
	$block_gë_by_«me
 (c⁄° *
«me
)

89 
li°_ñem
 *
e
;

91 
e
 = 
	`li°_begö
 (&
Æl_blocks
);É !
	`li°_íd
 (&all_blocks);

92 
e
 = 
	`li°_√xt
 (e))

94 
block
 *block = 
	`li°_íåy
 (
e
, block, 
li°_ñem
);

95 i‡(!
	`°rcmp
 (
«me
, 
block
->name))

96  
block
;

99  
NULL
;

100 
	}
}

105 
	$check_£˘‹
 (
block
 *block, 
block_£˘‹_t
 
£˘‹
)

107 i‡(
£˘‹
 >
block
->
size
)

111 ; ("Ac˚s†∑°Énd o‡devi˚ %†(£˘‹=%"
PRDSNu
", "

112 "size=%"
PRDSNu
")\n", 
	`block_«me
 (
block
), 
£˘‹
, block->
size
);

114 
	}
}

121 
	$block_ªad
 (
block
 *block, 
block_£˘‹_t
 
£˘‹
, *
buf„r
)

123 
	`check_£˘‹
 (
block
, 
£˘‹
);

124 
block
->
›s
->
	`ªad
 (block->
aux
, 
£˘‹
, 
buf„r
);

125 
block
->
ªad_˙t
++;

126 
	}
}

134 
	$block_wrôe
 (
block
 *block, 
block_£˘‹_t
 
£˘‹
, c⁄° *
buf„r
)

136 
	`check_£˘‹
 (
block
, 
£˘‹
);

138 
block
->
›s
->
	`wrôe
 (block->
aux
, 
£˘‹
, 
buf„r
);

139 
block
->
wrôe_˙t
++;

140 
	}
}

143 
block_£˘‹_t


144 
	$block_size
 (
block
 *block)

146  
block
->
size
;

147 
	}
}

151 
	$block_«me
 (
block
 *block)

153  
block
->
«me
;

154 
	}
}

157 
block_ty≥


158 
	$block_ty≥
 (
block
 *block)

160  
block
->
ty≥
;

161 
	}
}

165 
	$block_¥öt_°©s
 ()

167 
i
;

169 
i
 = 0; i < 
BLOCK_ROLE_CNT
; i++)

171 
block
 *block = 
block_by_rﬁe
[
i
];

172 i‡(
block
 !
NULL
)

174 
	`¥ötf
 ("%s (%s): %lluÑeads, %llu writes\n",

175 
block
->
«me
, 
	`block_ty≥_«me
 (block->
ty≥
),

176 
block
->
ªad_˙t
, block->
wrôe_˙t
);

179 
	}
}

186 
block
 *

187 
	$block_ªgi°î
 (c⁄° *
«me
, 
block_ty≥
 
ty≥
,

188 c⁄° *
exåa_öfo
, 
block_£˘‹_t
 
size
,

189 c⁄° 
block_›î©i⁄s
 *
›s
, *
aux
)

191 
block
 *block = 
	`mÆloc
 ( *block);

192 i‡(
block
 =
NULL
)

195 
	`li°_push_back
 (&
Æl_blocks
, &
block
->
li°_ñem
);

196 
	`°æ˝y
 (
block
->
«me
,Çame,  block->name);

197 
block
->
ty≥
 =Åype;

198 
block
->
size
 = size;

199 
block
->
›s
 = ops;

200 
block
->
aux
 =áux;

201 
block
->
ªad_˙t
 = 0;

202 
block
->
wrôe_˙t
 = 0;

204 
	`¥ötf
 ("%s: %'"
PRDSNu
" se˘‹†(", 
block
->
«me
, block->
size
);

205 
	`¥öt_hum™_ªadabÀ_size
 ((
uöt64_t
Ë
block
->
size
 * 
BLOCK_SECTOR_SIZE
);

206 
	`¥ötf
 (")");

207 i‡(
exåa_öfo
 !
NULL
)

208 
	`¥ötf
 (", %s", 
exåa_öfo
);

209 
	`¥ötf
 ("\n");

211  
block
;

212 
	}
}

216 
block
 *

217 
	$li°_ñem_to_block
 (
li°_ñem
 *list_elem)

219  (
li°_ñem
 !
	`li°_íd
 (&
Æl_blocks
)

220 ? 
	`li°_íåy
 (
li°_ñem
, 
block
,Üist_elem)

221 : 
NULL
);

222 
	}
}

	@device/console.c

1 
	~<öãºu±.h
>

2 
	~<devi˚/c⁄sﬁe.h
>

3 
	~<ty≥.h
>

4 
	~<devi˚/kbd.h
>

5 
	~<devi˚/io.h
>

6 
	~<devi˚/pô.h
>

7 
	~<°d¨g.h
>

9 
	#HSCREEN
 80

	)

10 
	#VSCREEN
 25

	)

11 
	#SIZE_SCREEN
 
HSCREEN
 * 
VSCREEN


	)

12 
	#NSCROLL
 30

	)

13 
	#SIZE_SCROLL
 
NSCROLL
 * 
HSCREEN


	)

14 
	#VIDIO_MEMORY
 0xB8000

	)

16 
	#IO_BASE
 0x3F8

	)

17 
	#FIRST_SPORT
 (
IO_BASE
)

	)

18 
	#LINE_STATUS
 (
IO_BASE
 + 5Ë

	)

19 
	#THR_EMPTY
 0x20

	)

21 
	g√xt_löe
[2];

23 #ifde‡
SCREEN_SCROLL


25 
	#buf_e
 (
buf_w
 + 
SIZE_NSCROLL
)

	)

26 
	#SCROLL_END
 
buf_s
 + 
SIZE_SCROLL


	)

28 
	gbuf_s
[
SIZE_SCROLL
];

29 *
	gbuf_w
;

30 *
	gbuf_p
;

32 * 
	gs¸_íd
;

34 
boﬁ
 
	ga_s
 = 
TRUE
;

38 
	$öô_c⁄sﬁe
()

40 
Glob_x
 = 0;

41 
Glob_y
 = 2;

43 
√xt_löe
[0] = '\r';

44 
√xt_löe
[1] = '\r';

46 #ifde‡
SCREEN_SCROLL


47 
buf_w
 = 
buf_s
;

48 
buf_p
 = 
buf_s
;

49 
a_s
 = 
TRUE
;

50 
s¸_íd
 = 
buf_s
 + 
SIZE_SCROLL
;

53 
	}
}

55 
	$PrötCh¨ToS¸ìn
(
x
, 
y
, c⁄° *
pSåög
)

57 
Glob_x
 = 
x
;

58 
Glob_y
 = 
y
;

59 
i
 = 0;

60 
pSåög
[
i
] != 0)

62 
	`PrötCh¨
(
Glob_x
++, 
Glob_y
, 
pSåög
[
i
++]);

64 
	}
}

66 
	$PrötCh¨
(
x
, 
y
, c⁄° 
Såög
)

68 #ifde‡
SCREEN_SCROLL


69 i‡(
Såög
 == '\n') {

70 if((
y
+1Ë> 
VSCREEN
) {

71 
	`s¸ﬁl
();

72 
y
--;

74 
Glob_x
 = 0;

75 
Glob_y
 = 
y
+1;

79 i‡((
y
 >
VSCREEN
Ë&& (
x
 >= 0)) {

80 
	`s¸ﬁl
();

81 
x
 = 0; 
y
--;

84 * 
b
 = &
buf_w
[
y
 * 
HSCREEN
 + 
x
];

85 if(
b
 >
SCROLL_END
)

86 
b
-
SIZE_SCROLL
;

87 *
b
 = 
Såög
;

89 if(
Glob_x
 >
HSCREEN
)

91 
Glob_x
 = 0;

92 
Glob_y
++;

96 
CHAR
 *
pS¸ìn
 = (CHAR *)
VIDIO_MEMORY
;

98 i‡(
Såög
 == '\n') {

99 if((
y
+1) > 24) {

100 
	`s¸ﬁl
();

101 
y
--;

103 
pS¸ìn
 +((
y
+1) * 80);

104 
Glob_x
 = 0;

105 
Glob_y
 = 
y
+1;

109 i‡((
y
 > 24Ë&& (
x
 >= 0)) {

110 
	`s¸ﬁl
();

111 
x
 = 0; 
y
--;

114 
pS¸ìn
 +–
y
 * 80Ë+ 
x
;

115 
pS¸ìn
[0].
bAâ
 = 0x07;

116 
pS¸ìn
[0].
bCh
 = 
Såög
;

118 if(
Glob_x
 > 79)

120 
Glob_x
 = 0;

121 
Glob_y
++;

125 
	}
}

127 
	$˛rS¸ìn
()

129 
CHAR
 *
pS¸ìn
 = (CHAR *Ë
VIDIO_MEMORY
;

130 
i
;

132 
i
 = 0; i < 80*25; i++) {

133 (*
pS¸ìn
).
bAâ
 = 0x07;

134 (*
pS¸ìn
++).
bCh
 = ' ';

136 
Glob_x
 = 0;

137 
Glob_y
 = 0;

138 
	}
}

140 
	$s¸ﬁl
()

142 #ifde‡
SCREEN_SCROLL


143 
buf_w
 +
HSCREEN
;

144 
buf_w
 > 
SCROLL_END
)

145 
buf_w
 -
SIZE_SCROLL
;

148 
i
;

149 
i
 = 0; i < 
HSCREEN
; i++)

150 
buf_w
[
i
] = 0;

152 
CHAR
 *
pS¸ìn
 = (CHAR *Ë
VIDIO_MEMORY
;

153 
CHAR
 *
pS¸Buf
 = (CHAR *Ë(
VIDIO_MEMORY
 + 2*80);

154 
i
;

155 
i
 = 0; i < 80*24; i++) {

156 (*
pS¸ìn
).
bAâ
 = (*
pS¸Buf
).bAtt;

157 (*
pS¸ìn
++).
bCh
 = (*
pS¸Buf
++).bCh;

159 
i
 = 0; i < 80; i++) {

160 (*
pS¸ìn
).
bAâ
 = 0x07;

161 (*
pS¸ìn
++).
bCh
 = ' ';

164 
Glob_y
--;

166 
	}
}

168 #ifde‡
SERIAL_STDOUT


169 
	$¥ötCh¨ToSîül
(c⁄° *
pSåög
)

171 
i
;

172 
öå_Àvñ
 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
();

173 ;*
pSåög
 !
NULL
;ÖString++)

175 if(*
pSåög
 != '\n'){

176 (
	`öb
(
LINE_STATUS
Ë& 
THR_EMPTY
) == 0)

178 
	`outb
(
FIRST_SPORT
, *
pSåög
);

182 
i
=0; i<2; i++){

183 (
	`öb
(
LINE_STATUS
Ë& 
THR_EMPTY
) == 0)

185 
	`outb
(
FIRST_SPORT
, 
√xt_löe
[
i
]);

189 
	`öå_£t_Àvñ
 (
ﬁd_Àvñ
);

190 
	}
}

194 
	$¥ötk
(c⁄° *
fmt
, ...)

196 
buf
[1024];

197 
va_li°
 
¨gs
;

198 
Àn
;

200 
	`va_°¨t
(
¨gs
, 
fmt
);

201 
Àn
 = 
	`v•rötk
(
buf
, 
fmt
, 
¨gs
);

202 
	`va_íd
(
¨gs
);

204 #ifde‡
SERIAL_STDOUT


205 
	`¥ötCh¨ToSîül
(
buf
);

207 
	`PrötCh¨ToS¸ìn
(
Glob_x
, 
Glob_y
, 
buf
);

209  
Àn
;

210 
	}
}

212 #ifde‡
SCREEN_SCROLL


213 
	$s¸ﬁl_s¸ìn
(
off£t
)

215 if(
a_s
 =
TRUE
 && 
off£t
 > 0 && 
buf_p
 =
buf_w
)

218 
a_s
 = 
FALSE
;

220 
buf_p
 = (*)(()buf_∞+ (
HSCREEN
 * 
off£t
));

221 if(
buf_p
 >
SCROLL_END
)

222 
buf_p
 = (*)(()buf_∞- 
SIZE_SCROLL
);

223 if(
buf_p
 < 
buf_s
)

224 
buf_p
 = (*)(()buf_∞+ 
SIZE_SCROLL
);

225 
	}
}

227 
	$£t_ÁŒow
()

229 
a_s
 = 
TRUE
;

230 
	}
}

232 
	$ª‰eshS¸ìn
()

234 
CHAR
 *
p_s
(CHAR *Ë
VIDIO_MEMORY
;

235 
i
;

237 if(
a_s
)

238 
buf_p
 = 
buf_w
;

240 * 
b
 = 
buf_p
;

242 
i
 = 0; i < 
SIZE_SCREEN
; i++, 
b
++, 
p_s
++)

244 if(
b
 >
SCROLL_END
)

245 
b
 -
SIZE_SCROLL
;

246 
p_s
->
bAâ
 = 0x07;

247 
p_s
->
bCh
 = *
b
;

249 
	}
}

	@device/device.c

1 
	~<devi˚/c⁄sﬁe.h
>

2 
	~<devi˚/devi˚.h
>

3 
	~<devi˚/io.h
>

10 
	$dev_shutdown
()

12 c⁄° 
s
[] = "Shutdown";

13 c⁄° *
p
;

18 
	`¥ötk
 ("Powering off...\n");

23 
p
 = 
s
; *p != '\0';Ö++)

24 
	`outb
 (0x8900, *
p
);

29 
asm
 volatile ("cli; hlt" : : : "memory");

32 
	`¥ötk
 ("stillÑunning...\n");

34 
	}
}

	@device/ide.c

1 
	~<devi˚/ide.h
>

2 
	~<˘y≥.h
>

3 
	~<debug.h
>

4 
	~<°dboﬁ.h
>

5 
	~<°dio.h
>

6 
	~<devi˚/block.h
>

7 
	~<devi˚/∑πôi⁄.h
>

9 
	~<devi˚/io.h
>

10 
	~<öãºu±.h
>

11 
	~<synch.h
>

12 
	~<devi˚/c⁄sﬁe.h
>

18 
	#ªg_d©a
(
CHANNEL
Ë((CHANNEL)->
ªg_ba£
 + 0Ë

	)

19 
	#ªg_îr‹
(
CHANNEL
Ë((CHANNEL)->
ªg_ba£
 + 1Ë

	)

20 
	#ªg_n£˘
(
CHANNEL
Ë((CHANNEL)->
ªg_ba£
 + 2Ë

	)

21 
	#ªg_lbÆ
(
CHANNEL
Ë((CHANNEL)->
ªg_ba£
 + 3Ë

	)

22 
	#ªg_lbam
(
CHANNEL
Ë((CHANNEL)->
ªg_ba£
 + 4Ë

	)

23 
	#ªg_lbah
(
CHANNEL
Ë((CHANNEL)->
ªg_ba£
 + 5Ë

	)

24 
	#ªg_devi˚
(
CHANNEL
Ë((CHANNEL)->
ªg_ba£
 + 6Ë

	)

25 
	#ªg_°©us
(
CHANNEL
Ë((CHANNEL)->
ªg_ba£
 + 7Ë

	)

26 
	#ªg_comm™d
(
CHANNEL
Ë
	`ªg_°©us
 (CHANNELË

	)

31 
	#ªg_˘l
(
CHANNEL
Ë((CHANNEL)->
ªg_ba£
 + 0x206Ë

	)

32 
	#ªg_Æt_°©us
(
CHANNEL
Ë
	`ªg_˘l
 (CHANNELË

	)

35 
	#STA_BSY
 0x80

	)

36 
	#STA_DRDY
 0x40

	)

37 
	#STA_DRQ
 0x08

	)

40 
	#CTL_SRST
 0x04

	)

43 
	#DEV_MBS
 0xa0

	)

44 
	#DEV_LBA
 0x40

	)

45 
	#DEV_DEV
 0x10

	)

50 
	#CMD_IDENTIFY_DEVICE
 0xe¯

	)

51 
	#CMD_READ_SECTOR_RETRY
 0x20

	)

52 
	#CMD_WRITE_SECTOR_RETRY
 0x30

	)

55 
	s©a_disk


57 
	m«me
[8];

58 
ch™√l
 *
	mch™√l
;

59 
	mdev_no
;

60 
boﬁ
 
	mis_©a
;

65 
	sch™√l


67 
	m«me
[8];

68 
uöt16_t
 
	mªg_ba£
;

69 
uöt8_t
 
	múq
;

71 
lock
 
	mlock
;

72 
boﬁ
 
	mex≥˘ög_öãºu±
;

74 
£m≠h‹e
 
	mcom∂ëi⁄_waô
;

76 
©a_disk
 
	mdevi˚s
[2];

80 
	#CHANNEL_CNT
 2

	)

81 
ch™√l
 
	gch™√ls
[
CHANNEL_CNT
];

83 
block_›î©i⁄s
 
	gide_›î©i⁄s
;

85 
ª£t_ch™√l
 (
ch™√l
 *);

86 
boﬁ
 
check_devi˚_ty≥
 (
©a_disk
 *);

87 
idítify_©a_devi˚
 (
©a_disk
 *);

89 
£À˘_£˘‹
 (
©a_disk
 *, 
block_£˘‹_t
);

90 
issue_pio_comm™d
 (
ch™√l
 *, 
uöt8_t
 
comm™d
);

91 
öput_£˘‹
 (
ch™√l
 *, *);

92 
ouçut_£˘‹
 (
ch™√l
 *, const *);

94 
waô_u¡û_idÀ
 (c⁄° 
©a_disk
 *);

95 
boﬁ
 
waô_whûe_busy
 (c⁄° 
©a_disk
 *);

96 
£À˘_devi˚
 (c⁄° 
©a_disk
 *);

97 
£À˘_devi˚_waô
 (c⁄° 
©a_disk
 *);

99 
öãºu±_h™dÀr
 (
öå_num
);

103 
	$ide_öô
 ()

105 
size_t
 
ch™_no
;

107 
ch™_no
 = 0; ch™_nÿ< 
CHANNEL_CNT
; chan_no++)

109 
ch™√l
 *
c
 = &
ch™√ls
[
ch™_no
];

110 
dev_no
;

114 
ch™_no
)

117 
c
->
ªg_ba£
 = 0x1f0;

119 
c
->
úq
 = 0x76;

122 
c
->
ªg_ba£
 = 0x170;

123 
c
->
úq
 = 15 + 0x20;

128 
	`lock_öô
 (&
c
->
lock
);

129 
c
->
ex≥˘ög_öãºu±
 = 
Ál£
;

130 
	`£ma_öô
 (&
c
->
com∂ëi⁄_waô
, 0);

133 
dev_no
 = 0; dev_no < 2; dev_no++)

135 
©a_disk
 *
d
 = &
c
->
devi˚s
[
dev_no
];

138 
d
->
ch™√l
 = 
c
;

139 
d
->
dev_no
 = dev_no;

140 
d
->
is_©a
 = 
Ál£
;

144 
	`ªg_h™dÀr
 (
c
->
úq
, 
öãºu±_h™dÀr
);

147 
	`ª£t_ch™√l
 (
c
);

150 i‡(
	`check_devi˚_ty≥
 (&
c
->
devi˚s
[0]))

151 
	`check_devi˚_ty≥
 (&
c
->
devi˚s
[1]);

154 
dev_no
 = 0; dev_no < 2; dev_no++)

155 i‡(
c
->
devi˚s
[
dev_no
].
is_©a
)

156 
	`idítify_©a_devi˚
 (&
c
->
devi˚s
[
dev_no
]);

158 
	}
}

161 *
des¸ambÀ_©a_°rög
 (*, 
size
);

166 
	$ª£t_ch™√l
 (
ch™√l
 *
c
)

168 
boﬁ
 
¥e£¡
[2];

169 
dev_no
;

173 
dev_no
 = 0; dev_no < 2; dev_no++)

175 
©a_disk
 *
d
 = &
c
->
devi˚s
[
dev_no
];

177 
	`£À˘_devi˚
 (
d
);

179 
	`outb
 (
	`ªg_n£˘
 (
c
), 0x55);

180 
	`outb
 (
	`ªg_lbÆ
 (
c
), 0xaa);

182 
	`outb
 (
	`ªg_n£˘
 (
c
), 0xaa);

183 
	`outb
 (
	`ªg_lbÆ
 (
c
), 0x55);

185 
	`outb
 (
	`ªg_n£˘
 (
c
), 0x55);

186 
	`outb
 (
	`ªg_lbÆ
 (
c
), 0xaa);

188 
¥e£¡
[
dev_no
] = (
	`öb
 (
	`ªg_n£˘
 (
c
)) == 0x55

189 && 
	`öb
 (
	`ªg_lbÆ
 (
c
)) == 0xaa);

194 
	`outb
 (
	`ªg_˘l
 (
c
), 0);

196 
	`outb
 (
	`ªg_˘l
 (
c
), 
CTL_SRST
);

198 
	`outb
 (
	`ªg_˘l
 (
c
), 0);

203 i‡(
¥e£¡
[0])

205 
	`£À˘_devi˚
 (&
c
->
devi˚s
[0]);

206 
	`waô_whûe_busy
 (&
c
->
devi˚s
[0]);

210 i‡(
¥e£¡
[1])

212 
i
;

214 
	`£À˘_devi˚
 (&
c
->
devi˚s
[1]);

215 
i
 = 0; i < 3000; i++)

217 i‡(
	`öb
 (
	`ªg_n£˘
 (
c
)Ë=1 && inb (
	`ªg_lbÆ
 (c)) == 1)

221 
	`waô_whûe_busy
 (&
c
->
devi˚s
[1]);

223 
	}
}

230 
boﬁ


231 
	$check_devi˚_ty≥
 (
©a_disk
 *
d
)

233 
ch™√l
 *
c
 = 
d
->channel;

234 
uöt8_t
 
îr‹
, 
lbam
, 
lbah
, 
°©us
;

236 
	`£À˘_devi˚
 (
d
);

238 
îr‹
 = 
	`öb
 (
	`ªg_îr‹
 (
c
));

239 
lbam
 = 
	`öb
 (
	`ªg_lbam
 (
c
));

240 
lbah
 = 
	`öb
 (
	`ªg_lbah
 (
c
));

241 
°©us
 = 
	`öb
 (
	`ªg_°©us
 (
c
));

243 i‡((
îr‹
 !1 && (îr‹ !0x81 || 
d
->
dev_no
 == 1))

244 || (
°©us
 & 
STA_DRDY
) == 0

245 || (
°©us
 & 
STA_BSY
) != 0)

247 
d
->
is_©a
 = 
Ál£
;

248  
îr‹
 != 0x81;

252 
d
->
is_©a
 = (
lbam
 =0 && 
lbah
 == 0) || (lbam == 0x3c &&Übah == 0xc3);

253  
åue
;

255 
	}
}

261 
	$idítify_©a_devi˚
 (
©a_disk
 *
d
)

263 
ch™√l
 *
c
 = 
d
->channel;

264 
id
[
BLOCK_SECTOR_SIZE
];

265 
block_£˘‹_t
 
ˇ∑côy
;

266 *
modñ
, *
£rül
;

267 
exåa_öfo
[128];

268 
block
 *block;

270 
i
;

277 
	`£À˘_devi˚_waô
 (
d
);

278 
	`issue_pio_comm™d
 (
c
, 
CMD_IDENTIFY_DEVICE
);

280 i‡(!
	`waô_whûe_busy
 (
d
))

282 
d
->
is_©a
 = 
Ál£
;

286 
	`öput_£˘‹
 (
c
, 
id
);

290 
ˇ∑côy
 = *(
uöt32_t
 *Ë&
id
[60 * 2];

291 
modñ
 = 
	`des¸ambÀ_©a_°rög
 (&
id
[10 * 2], 20);

292 
£rül
 = 
	`des¸ambÀ_©a_°rög
 (&
id
[27 * 2], 40);

293 
	`¢¥ötf
 (
exåa_öfo
, Éxtra_info,

294 "modñ \"%s\", sîü»\"%s\"", 
modñ
, 
£rül
);

301 i‡(
ˇ∑côy
 >1024 * 1024 * 1024 / 
BLOCK_SECTOR_SIZE
)

304 
	`¥öt_hum™_ªadabÀ_size
 (
ˇ∑côy
 * 512);

306 
d
->
is_©a
 = 
Ál£
;

311 
block
 = 
	`block_ªgi°î
 (
d
->
«me
, 
BLOCK_RAW
, 
exåa_öfo
, 
ˇ∑côy
,

312 &
ide_›î©i⁄s
, 
d
);

313 
	`¥ötk
("modñ %s", 
exåa_öfo
 );

314 
	`∑πôi⁄_sˇn
 (
block
);

315 
	}
}

321 
	$des¸ambÀ_©a_°rög
 (*
°rög
, 
size
)

323 
i
;

326 
i
 = 0; i + 1 < 
size
; i += 2)

328 
tmp
 = 
°rög
[
i
];

329 
°rög
[
i
] = string[i + 1];

330 
°rög
[
i
 + 1] = 
tmp
;

334 
size
--; size > 0; size--)

336 
c
 = 
°rög
[
size
 - 1];

337 i‡(
c
 !'\0' && !
	`is•a˚
 (c))

340 
°rög
[
size
] = '\0';

342  
°rög
;

343 
	}
}

350 
	$ide_ªad
 (*
d_
, 
block_£˘‹_t
 
£c_no
, *
buf„r
)

352 
©a_disk
 *
d
 = 
d_
;

353 
ch™√l
 *
c
 = 
d
->channel;

354 
	`lock_acquúe
 (&
c
->
lock
);

355 
	`£À˘_£˘‹
 (
d
, 
£c_no
);

356 
	`issue_pio_comm™d
 (
c
, 
CMD_READ_SECTOR_RETRY
);

357 
	`£ma_down
 (&
c
->
com∂ëi⁄_waô
);

358 i‡(!
	`waô_whûe_busy
 (
d
))

361 
	`öput_£˘‹
 (
c
, 
buf„r
);

362 
	`lock_ªÀa£
 (&
c
->
lock
);

363 
	}
}

371 
	$ide_wrôe
 (*
d_
, 
block_£˘‹_t
 
£c_no
, c⁄° *
buf„r
)

373 
©a_disk
 *
d
 = 
d_
;

374 
ch™√l
 *
c
 = 
d
->channel;

375 
	`lock_acquúe
 (&
c
->
lock
);

376 
	`£À˘_£˘‹
 (
d
, 
£c_no
);

377 
	`issue_pio_comm™d
 (
c
, 
CMD_WRITE_SECTOR_RETRY
);

378 i‡(!
	`waô_whûe_busy
 (
d
))

381 
	`ouçut_£˘‹
 (
c
, 
buf„r
);

382 
	`£ma_down
 (&
c
->
com∂ëi⁄_waô
);

383 
	`lock_ªÀa£
 (&
c
->
lock
);

384 
	}
}

386 
block_›î©i⁄s
 
	gide_›î©i⁄s
 =

388 
ide_ªad
,

389 
ide_wrôe


396 
	$£À˘_£˘‹
 (
©a_disk
 *
d
, 
block_£˘‹_t
 
£c_no
)

398 
ch™√l
 *
c
 = 
d
->channel;

402 
	`£À˘_devi˚_waô
 (
d
);

403 
	`outb
 (
	`ªg_n£˘
 (
c
), 1);

404 
	`outb
 (
	`ªg_lbÆ
 (
c
), 
£c_no
);

405 
	`outb
 (
	`ªg_lbam
 (
c
), 
£c_no
 >> 8);

406 
	`outb
 (
	`ªg_lbah
 (
c
), (
£c_no
 >> 16));

407 
	`outb
 (
	`ªg_devi˚
 (
c
),

408 
DEV_MBS
 | 
DEV_LBA
 | (
d
->
dev_no
 =1 ? 
DEV_DEV
 : 0Ë| (
£c_no
 >> 24));

409 
	}
}

414 
	$issue_pio_comm™d
 (
ch™√l
 *
c
, 
uöt8_t
 
comm™d
)

420 
c
->
ex≥˘ög_öãºu±
 = 
åue
;

421 
	`outb
 (
	`ªg_comm™d
 (
c
), 
comm™d
);

422 
	}
}

427 
	$öput_£˘‹
 (
ch™√l
 *
c
, *
£˘‹
)

429 
	`ösw
 (
	`ªg_d©a
 (
c
), 
£˘‹
, 
BLOCK_SECTOR_SIZE
 / 2);

430 
	}
}

435 
	$ouçut_£˘‹
 (
ch™√l
 *
c
, c⁄° *
£˘‹
)

437 
	`outsw
 (
	`ªg_d©a
 (
c
), 
£˘‹
, 
BLOCK_SECTOR_SIZE
 / 2);

438 
	}
}

448 
	$waô_u¡û_idÀ
 (c⁄° 
©a_disk
 *
d
)

450 
i
;

452 
i
 = 0; i < 1000; i++)

454 i‡((
	`öb
 (
	`ªg_°©us
 (
d
->
ch™√l
)Ë& (
STA_BSY
 | 
STA_DRQ
)) == 0)

460 
	}
}

466 
boﬁ


467 
	$waô_whûe_busy
 (c⁄° 
©a_disk
 *
d
)

469 
ch™√l
 *
c
 = 
d
->channel;

470 
i
;

472 
i
 = 0; i < 3000; i++)

474 i‡(
i
 == 700);

476 i‡(!(
	`öb
 (
	`ªg_Æt_°©us
 (
c
)Ë& 
STA_BSY
))

478 i‡(
i
 >= 700);

480  (
	`öb
 (
	`ªg_Æt_°©us
 (
c
)Ë& 
STA_DRQ
) != 0;

486  
Ál£
;

487 
	}
}

491 
	$£À˘_devi˚
 (c⁄° 
©a_disk
 *
d
)

493 
ch™√l
 *
c
 = 
d
->channel;

494 
uöt8_t
 
dev
 = 
DEV_MBS
;

495 i‡(
d
->
dev_no
 == 1)

496 
dev
 |
DEV_DEV
;

497 
	`outb
 (
	`ªg_devi˚
 (
c
), 
dev
);

498 
	`öb
 (
	`ªg_Æt_°©us
 (
c
));

500 
	}
}

505 
	$£À˘_devi˚_waô
 (c⁄° 
©a_disk
 *
d
)

507 
	`waô_u¡û_idÀ
 (
d
);

508 
	`£À˘_devi˚
 (
d
);

509 
	`waô_u¡û_idÀ
 (
d
);

510 
	}
}

514 
	$öãºu±_h™dÀr
 (
öå_num
)

517 
ch™√l
 *
c
;

519 
	`¥ötk
("go home\n");

520 
c
 = 
ch™√ls
; c < ch™√l†+ 
CHANNEL_CNT
; c++)

521 i‡(
öå_num
 =
c
->
úq
)

523 i‡(
c
->
ex≥˘ög_öãºu±
)

525 
	`öb
 (
	`ªg_°©us
 (
c
));

526 
	`£ma_up
 (&
c
->
com∂ëi⁄_waô
);

535 
	}
}

	@device/kbd.c

1 
	~<devi˚/kbd.h
>

2 
	~<ty≥.h
>

3 
	~<devi˚/c⁄sﬁe.h
>

4 
	~<öãºu±.h
>

5 
	~<devi˚/io.h
>

6 
	~<ssulib.h
>

8 
Key_Sètus
 
	gKSèt
;

9 
	gkbd_buf
[
BUFSIZ
];

15 
	gbuf_hód
, 
	gbuf_èû
;

17 
BYTE
 
	gKbd_M≠
[4][
KBDMAPSIZE
] = {

52 
	$öô_kbd
()

54 
KSèt
.
Shi·Fœg
 = 0;

55 
KSèt
.
C≠¶ockFœg
 = 0;

56 
KSèt
.
NumlockFLag
 = 0;

57 
KSèt
.
S¸ﬁŒockFœg
 = 0;

58 
KSèt
.
Exã¡edFœg
 = 0;

59 
KSèt
.
Pau£Fœg
 = 0;

61 
buf_hód
 = 0;

62 
buf_èû
 = 0;

64 
	`ªg_h™dÀr
(33, 
kbd_h™dÀr
);

65 
	}
}

68 
	$Upd©eKeySèt
(
BYTE
 
Sˇncode
)

71 if(
Sˇncode
 & 0x80)

74 if(
Sˇncode
 == 0xB6 || Scancode == 0xAA)

76 
KSèt
.
Shi·Fœg
 = 
FALSE
;

83 if(
Sˇncode
 =0x3A && 
KSèt
.
C≠¶ockFœg
)

85 
KSèt
.
C≠¶ockFœg
 = 
FALSE
;

87 if(
Sˇncode
 == 0x3A)

88 
KSèt
.
C≠¶ockFœg
 = 
TRUE
;

90 if(
Sˇncode
 == 0x36 || Scancode == 0x2A)

92 
KSèt
.
Shi·Fœg
 = 
TRUE
;

96 if(
Sˇncode
 == 0xE0)

98 
KSèt
.
Exã¡edFœg
 = 
TRUE
;

100 if(
KSèt
.
Exã¡edFœg
 =
TRUE
 && 
Sˇncode
 != 0xE0)

102 
KSèt
.
Exã¡edFœg
 = 
FALSE
;

104 
	}
}

106 
BOOL
 
	$C⁄vîtSˇncodeToASCII
(
BYTE
 
Sˇncode
, BYTE *
Asciicode
)

109 if(
KSèt
.
Pau£Fœg
 > 0)

111 
KSèt
.
Pau£Fœg
--;

112  
FALSE
;

116 if(
Sˇncode
 == 0xE1)

118 *
Asciicode
 = 0x00;

119 
KSèt
.
Pau£Fœg
 = 2;

120  
FALSE
;

124 if(
Sˇncode
 == 0xE0)

126 *
Asciicode
 = 0x00;

127  
FALSE
;

132 if(!(
Sˇncode
 & 0x80))

134 if(
KSèt
.
Shi·Fœg
 & KSèt.
C≠¶ockFœg
)

136 *
Asciicode
 = 
Kbd_M≠
[3][
Sˇncode
 & 0x7F];

138 if(
KSèt
.
Shi·Fœg
)

140 *
Asciicode
 = 
Kbd_M≠
[2][
Sˇncode
 & 0x7F];

142 if(
KSèt
.
C≠¶ockFœg
)

144 *
Asciicode
 = 
Kbd_M≠
[1][
Sˇncode
 & 0x7F];

148 *
Asciicode
 = 
Kbd_M≠
[0][
Sˇncode
];

151  
TRUE
;

153  
FALSE
;

154 
	}
}

156 
boﬁ
 
	$isFuŒ
()

158  (
buf_hód
+1Ë% 
BUFSIZ
 =
buf_èû
;

159 
	}
}

161 
boﬁ
 
	$isEm±y
()

163  
buf_hód
 =
buf_èû
;

164 
	}
}

166 
	$kbd_h™dÀr
(
öå_‰ame
 *
i‰ame
)

168 
BYTE
 
asciicode
;

169 
BYTE
 
d©a
 = 
	`öb
(0x60);

171 
	`Upd©eKeySèt
(
d©a
);

172 if(
	`C⁄vîtSˇncodeToASCII
(
d©a
, &
asciicode
))

178 if–!
	`isFuŒ
(Ë&& 
asciicode
 != 0)

180 
	`¥ötk
("%c", 
asciicode
);

181 
kbd_buf
[
buf_èû
] = 
asciicode
;

182 
buf_èû
 = (buf_èû + 1Ë% 
BUFSIZ
;

185 #ifde‡
SCREEN_SCROLL


188 
asciicode
)

191 
	`s¸ﬁl_s¸ìn
(-1);

194 
	`s¸ﬁl_s¸ìn
(+1);

197 
	`£t_ÁŒow
();

204 
	}
}

207 
	$kbd_ªad_ch¨
()

210 if–
	`isEm±y
())

213 
ªt
;

214 
ªt
 = 
kbd_buf
[
buf_hód
];

215 
buf_hód
 = (buf_hód + 1)%
BUFSIZ
;

216  
ªt
;

217 
	}
}

	@device/partition.c

1 
	~<devi˚/∑πôi⁄.h
>

2 
	~<∑cked.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<°dio.h
>

6 
	~<devi˚/block.h
>

7 
	~<mem/mÆloc.h
>

11 
	s∑πôi⁄


13 
block
 *
	mblock
;

14 
block_£˘‹_t
 
	m°¨t
;

17 
block_›î©i⁄s
 
	g∑πôi⁄_›î©i⁄s
;

19 
ªad_∑πôi⁄_èbÀ
 (
block
 *, 
block_£˘‹_t
 
£˘‹
,

20 
block_£˘‹_t
 
¥im¨y_exãnded_£˘‹
,

21 *
∑π_ƒ
);

22 
found_∑πôi⁄
 (
block
 *, 
uöt8_t
 
ty≥
,

23 
block_£˘‹_t
 
°¨t
, block_£˘‹_à
size
,

24 
∑π_ƒ
);

25 c⁄° *
∑πôi⁄_ty≥_«me
 (
uöt8_t
);

29 
	$∑πôi⁄_sˇn
 (
block
 *block)

31 
∑π_ƒ
 = 0;

32 
	`ªad_∑πôi⁄_èbÀ
 (
block
, 0, 0, &
∑π_ƒ
);

33 i‡(
∑π_ƒ
 == 0)

34 
	`¥ötf
 ("%s: Devi˚ c⁄èö†nÿ∑πôi⁄s\n", 
	`block_«me
 (
block
));

35 
	}
}

51 
	$ªad_∑πôi⁄_èbÀ
 (
block
 *block, 
block_£˘‹_t
 
£˘‹
,

52 
block_£˘‹_t
 
¥im¨y_exãnded_£˘‹
,

53 *
∑π_ƒ
)

56 
	s∑πôi⁄_èbÀ_íåy


58 
uöt8_t
 
boŸabÀ
;

59 
uöt8_t
 
°¨t_chs
[3];

60 
uöt8_t
 
ty≥
;

61 
uöt8_t
 
íd_chs
[3];

62 
uöt32_t
 
off£t
;

63 
uöt32_t
 
size
;

65 
PACKED
;

68 
	s∑πôi⁄_èbÀ


70 
uöt8_t
 
lﬂdî
[446];

71 
∑πôi⁄_èbÀ_íåy
 
∑πôi⁄s
[4];

72 
uöt16_t
 
sig«tuª
;

74 
PACKED
;

76 
∑πôi⁄_èbÀ
 *
±
;

77 
size_t
 
i
;

80 i‡(
£˘‹
 >
	`block_size
 (
block
))

82 
	`¥ötf
 ("%s: P¨tôi⁄ÅabÀáà£˘‹ %"
PRDSNu
"ÖastÉnd of device.\n",

83 
	`block_«me
 (
block
), 
£˘‹
);

88 
	`ASSERT
 ( *
±
 =
BLOCK_SECTOR_SIZE
);

89 
±
 = 
	`mÆloc
 ( *pt);

90 i‡(
±
 =
NULL
)

92 
	`block_ªad
 (
block
, 0, 
±
);

95 i‡(
±
->
sig«tuª
 != 0xaa55)

97 i‡(
¥im¨y_exãnded_£˘‹
 == 0)

98 
	`¥ötf
 ("%s: InvÆidÖ¨tôi⁄ÅabÀ sig«tuª\n", 
	`block_«me
 (
block
));

100 
	`¥ötf
 ("%s: InvÆidÉxãndedÖ¨tôi⁄ÅabÀ i¿£˘‹ %"
PRDSNu
"\n",

101 
	`block_«me
 (
block
), 
£˘‹
);

102 
	`‰ì
 (
±
);

107 
i
 = 0; i <  
±
->
∑πôi⁄s
 /  *pt->partitions; i++)

109 
∑πôi⁄_èbÀ_íåy
 *
e
 = &
±
->
∑πôi⁄s
[
i
];

111 i‡(
e
->
size
 =0 ||É->
ty≥
 == 0)

115 i‡(
e
->
ty≥
 == 0x05

116 || 
e
->
ty≥
 == 0x0f

117 || 
e
->
ty≥
 == 0x85

118 || 
e
->
ty≥
 == 0xc5)

120 
	`¥ötf
 ("%s: ExãndedÖ¨tôi⁄ i¿£˘‹ %"
PRDSNu
"\n",

121 
	`block_«me
 (
block
), 
£˘‹
);

131 i‡(
£˘‹
 == 0)

132 
	`ªad_∑πôi⁄_èbÀ
 (
block
, 
e
->
off£t
,É->off£t, 
∑π_ƒ
);

134 
	`ªad_∑πôi⁄_èbÀ
 (
block
, 
e
->
off£t
 + 
¥im¨y_exãnded_£˘‹
,

135 
¥im¨y_exãnded_£˘‹
, 
∑π_ƒ
);

139 ++*
∑π_ƒ
;

141 
	`found_∑πôi⁄
 (
block
, 
e
->
ty≥
,É->
off£t
 + 
£˘‹
,

142 
e
->
size
, *
∑π_ƒ
);

146 
	`‰ì
 (
±
);

147 
	}
}

155 
	$found_∑πôi⁄
 (
block
 *block, 
uöt8_t
 
∑π_ty≥
,

156 
block_£˘‹_t
 
°¨t
, block_£˘‹_à
size
,

157 
∑π_ƒ
)

159 i‡(
°¨t
 >
	`block_size
 (
block
))

160 
	`¥ötf
 ("%s%d: P¨tôi⁄ sèπ†∑°Énd o‡devi˚ (£˘‹ %"
PRDSNu
")\n",

161 
	`block_«me
 (
block
), 
∑π_ƒ
, 
°¨t
);

162 i‡(
°¨t
 + 
size
 < sèπ || sèπ + sizê> 
	`block_size
 (
block
))

163 
	`¥ötf
 ("%s%d: P¨tôi⁄Énd (%"
PRDSNu
")ÖastÉnd of device (%"PRDSNu")\n",

164 
	`block_«me
 (
block
), 
∑π_ƒ
, 
°¨t
 + 
size
, 
	`block_size
 (block));

167 
block_ty≥
 
ty≥
 = (
∑π_ty≥
 =0x20 ? 
BLOCK_KERNEL


168 : 
∑π_ty≥
 =0x21 ? 
BLOCK_FILESYS


169 : 
∑π_ty≥
 =0x22 ? 
BLOCK_SCRATCH


170 : 
∑π_ty≥
 =0x23 ? 
BLOCK_SWAP


171 : 
BLOCK_FOREIGN
);

172 
∑πôi⁄
 *
p
;

173 
exåa_öfo
[128];

174 
«me
[16];

176 
p
 = 
	`mÆloc
 ( *p);

177 i‡(
p
 =
NULL
)

179 
p
->
block
 = block;

180 
p
->
°¨t
 = start;

182 
	`¢¥ötf
 (
«me
, Çame, "%s%d", 
	`block_«me
 (
block
), 
∑π_ƒ
);

183 
	`¢¥ötf
 (
exåa_öfo
, Éxtra_info, "%s (%02x)",

184 
	`∑πôi⁄_ty≥_«me
 (
∑π_ty≥
),Öart_type);

185 
	`block_ªgi°î
 (
«me
, 
ty≥
, 
exåa_öfo
, 
size
, &
∑πôi⁄_›î©i⁄s
, 
p
);

187 
	}
}

191 
	$∑πôi⁄_ty≥_«me
 (
uöt8_t
 
ty≥
)

197 c⁄° *
ty≥_«mes
[256] =

299  
ty≥_«mes
[
ty≥
] !
NULL
 ?Åype_names[type] : "Unknown";

300 
	}
}

305 
	$∑πôi⁄_ªad
 (*
p_
, 
block_£˘‹_t
 
£˘‹
, *
buf„r
)

307 
∑πôi⁄
 *
p
 = 
p_
;

308 
	`block_ªad
 (
p
->
block
,Ö->
°¨t
 + 
£˘‹
, 
buf„r
);

309 
	}
}

315 
	$∑πôi⁄_wrôe
 (*
p_
, 
block_£˘‹_t
 
£˘‹
, c⁄° *
buf„r
)

317 
∑πôi⁄
 *
p
 = 
p_
;

318 
	`block_wrôe
 (
p
->
block
,Ö->
°¨t
 + 
£˘‹
, 
buf„r
);

319 
	}
}

321 
block_›î©i⁄s
 
	g∑πôi⁄_›î©i⁄s
 =

323 
∑πôi⁄_ªad
,

324 
∑πôi⁄_wrôe


	@device/pit.c

2 
	~<devi˚/pô.h
>

3 
	~<devi˚/io.h
>

4 
	~<öãºu±.h
>

6 
	$öô_pô
()

8 
öå_Àvñ
 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
();

9 
	`outb
(
PIT_COMMAND
, (
PIT_COUNTER0
 | 
PIT_RW_LMBYTE
 | 
PIT_MODE2
 | 
PIT_BINARY
) );

10 
	`outb
(
PIT_CHANNEL0
, (
PIT_HZ
/
PIT_FRQ_HZ
)%0xff);

11 
	`outb
(
PIT_CHANNEL0
, (
PIT_HZ
/
PIT_FRQ_HZ
)>>8);

12 
	`öå_£t_Àvñ
 (
ﬁd_Àvñ
);

13 
	}
}

	@include/bitmap.h

1 #i‚de‡
__BITMAP_H__


2 
	#__BITMAP_H__


	)

4 
	~<ty≥.h
>

10 
bôm≠
 *
bôm≠_¸óã_ö_buf
 (
size_t
 
bô_˙t
, *, size_à
byã_˙t
);

11 
size_t
 
bôm≠_buf_size
 (size_à
bô_˙t
);

12 
bôm≠_de°roy
 (
bôm≠
 *);

15 
size_t
 
bôm≠_size
 (c⁄° 
bôm≠
 *);

18 
bôm≠_£t
 (
bôm≠
 *, 
size_t
 
idx
, 
boﬁ
);

19 
bôm≠_m¨k
 (
bôm≠
 *, 
size_t
 
idx
);

20 
bôm≠_ª£t
 (
bôm≠
 *, 
size_t
 
idx
);

21 
bôm≠_Êù
 (
bôm≠
 *, 
size_t
 
idx
);

22 
boﬁ
 
bôm≠_ã°
 (c⁄° 
bôm≠
 *, 
size_t
 
idx
);

25 
bôm≠_£t_Æl
 (
bôm≠
 *, 
boﬁ
);

26 
bôm≠_£t_mu…ùÀ
 (
bôm≠
 *, 
size_t
 
°¨t
, size_à
˙t
, 
boﬁ
);

27 
size_t
 
bôm≠_cou¡
 (c⁄° 
bôm≠
 *, size_à
°¨t
, size_à
˙t
, 
boﬁ
);

28 
boﬁ
 
bôm≠_c⁄èös
 (c⁄° 
bôm≠
 *, 
size_t
 
°¨t
, size_à
˙t
, bool);

29 
boﬁ
 
bôm≠_™y
 (c⁄° 
bôm≠
 *, 
size_t
 
°¨t
, size_à
˙t
);

30 
boﬁ
 
bôm≠_n⁄e
 (c⁄° 
bôm≠
 *, 
size_t
 
°¨t
, size_à
˙t
);

31 
boﬁ
 
bôm≠_Æl
 (c⁄° 
bôm≠
 *, 
size_t
 
°¨t
, size_à
˙t
);

34 
	#BITMAP_ERROR
 
SIZE_MAX


	)

35 
size_t
 
bôm≠_sˇn
 (c⁄° 
bôm≠
 *, size_à
°¨t
, size_à
˙t
, 
boﬁ
);

36 
size_t
 
bôm≠_sˇn_™d_Êù
 (
bôm≠
 *, size_à
°¨t
, size_à
˙t
, 
boﬁ
);

40 #ifde‡
FILESYS


41 
	gfûe
;

42 
size_t
 
bôm≠_fûe_size
 (c⁄° 
bôm≠
 *);

43 
boﬁ
 
bôm≠_ªad
 (
bôm≠
 *, 
fûe
 *);

44 
boﬁ
 
bôm≠_wrôe
 (c⁄° 
bôm≠
 *, 
fûe
 *);

48 
bôm≠_dump
 (c⁄° 
bôm≠
 *);

	@include/ctype.h

1 #i‚de‡
__LIB_CTYPE_H


2 
	#__LIB_CTYPE_H


	)

4 
ölöe
 
	$i¶owî
 (
c
Ë{  c >'a' && c <'z'; 
	}
}

5 
ölöe
 
	$isuµî
 (
c
Ë{  c >'A' && c <'Z'; 
	}
}

6 
ölöe
 
	$ißÕha
 (
c
Ë{  
	`i¶owî
 (cË|| 
	`isuµî
 (c); 
	}
}

7 
ölöe
 
	$isdigô
 (
c
Ë{  c >'0' && c <'9'; 
	}
}

8 
ölöe
 
	$iß um
 (
c
Ë{  
	`ißÕha
 (cË|| 
	`isdigô
 (c); 
	}
}

9 
ölöe
 
	$isxdigô
 (
c
) {

10  
	`isdigô
 (
c
) || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F');

11 
	}
}

12 
ölöe
 
	$is•a˚
 (
c
) {

13  (
c
 == ' ' || c == '\f' || c == '\n'

14 || 
c
 == '\r' || c == '\t' || c == '\v');

15 
	}
}

16 
ölöe
 
	$isbœnk
 (
c
Ë{  c =' ' || c ='\t'; 
	}
}

17 
ölöe
 
	$isgøph
 (
c
Ë{  c > 32 && c < 127; 
	}
}

18 
ölöe
 
	$i•röt
 (
c
Ë{  c >32 && c < 127; 
	}
}

19 
ölöe
 
	$is˙ål
 (
c
Ë{  (¯>0 && c < 32Ë|| c =127; 
	}
}

20 
ölöe
 
	$ißscii
 (
c
Ë{  c >0 && c < 128; 
	}
}

21 
ölöe
 
	$i•un˘
 (
c
) {

22  
	`i•röt
 (
c
Ë&& !
	`iß um
 (cË&& !
	`is•a˚
 (c);

23 
	}
}

25 
ölöe
 
	$tﬁowî
 (
c
Ë{  
	`isuµî
 (cË? c - 'A' + 'a' : c; 
	}
}

26 
ölöe
 
	$touµî
 (
c
Ë{  
	`i¶owî
 (cË? c - 'a' + 'A' : c; 
	}
}

	@include/debug.h

1 #i‚de‡
__LIB_DEBUG_H


2 
	#__LIB_DEBUG_H


	)

7 
	#UNUSED
 
	`__©åibuã__
 ((
unu£d
))

	)

8 
	#NO_RETURN
 
	`__©åibuã__
 ((
n‹ëu∫
))

	)

9 
	#NO_INLINE
 
	`__©åibuã__
 ((
noölöe
))

	)

10 
	#PRINTF_FORMAT
(
FMT
, 
FIRST
Ë
	`__©åibuã__
 ((
	`f‹m©
 (
¥ötf
, FMT, FIRST)))

	)

14 
	#PANIC
(...Ë
	`debug_∑nic
 (
__FILE__
, 
__LINE__
, 
__func__
, 
__VA_ARGS__
)

	)

16 
	$debug_∑nic
 (c⁄° *
fûe
, 
löe
, c⁄° *
fun˘i⁄
,

17 c⁄° *
mesßge
, ...Ë
	$PRINTF_FORMAT
 (4, 5Ë
NO_RETURN
;

18 
	`debug_backåa˚
 ();

19 
	`debug_backåa˚_Æl
 ();

27 #unde‡
ASSERT


28 #unde‡
NOT_REACHED


30 #i‚de‡
NDEBUG


31 
	#ASSERT
(
CONDITION
) \

32 i‡(
CONDITION
Ë{ 
	}
} { \

33 
	`PANIC
 ("assertion `%s' failed.", #CONDITION); \

34 }

	)

35 
	#NOT_REACHED
(Ë
	`PANIC
 ("execuãdá¿uƒóchabÀ sèãmít");

	)

37 
	#ASSERT
(
CONDITION
Ë((Ë0)

	)

38 
	#NOT_REACHED
(Ë;;)

	)

	@include/device/block.h

1 #i‚de‡
DEVICES_BLOCK_H


2 
	#DEVICES_BLOCK_H


	)

4 
	~<°ddef.h
>

5 
	~<öây≥s.h
>

11 
	#BLOCK_SECTOR_SIZE
 512

	)

15 
uöt32_t
 
	tblock_£˘‹_t
;

19 
	#PRDSNu
 
PRIu32


	)

23 
	gblock
;

26 
	eblock_ty≥


29 
	mBLOCK_KERNEL
,

30 
	mBLOCK_FILESYS
,

31 
	mBLOCK_SCRATCH
,

32 
	mBLOCK_SWAP
,

33 
	mBLOCK_ROLE_CNT
,

37 
	mBLOCK_RAW
 = 
BLOCK_ROLE_CNT
,

38 
	mBLOCK_FOREIGN
,

39 
	mBLOCK_CNT


42 c⁄° *
block_ty≥_«me
 (
block_ty≥
);

45 
block
 *
block_gë_rﬁe
 (
block_ty≥
);

46 
block_£t_rﬁe
 (
block_ty≥
, 
block
 *);

47 
block
 *
block_gë_by_«me
 (c⁄° *
«me
);

49 
block
 *
block_fú°
 ();

50 
block
 *
block_√xt
 (block *);

53 
block_£˘‹_t
 
block_size
 (
block
 *);

54 
block_ªad
 (
block
 *, 
block_£˘‹_t
, *);

55 
block_wrôe
 (
block
 *, 
block_£˘‹_t
, const *);

56 c⁄° *
block_«me
 (
block
 *);

57 
block_ty≥
 block_ty≥ (
block
 *);

60 
block_¥öt_°©s
 ();

64 
	sblock_›î©i⁄s


66 (*
	mªad
Ë(*
	maux
, 
	mblock_£˘‹_t
, *
	mbuf„r
);

67 (*
	mwrôe
Ë(*
	maux
, 
	mblock_£˘‹_t
, c⁄° *
	mbuf„r
);

70 
block
 *
block_ªgi°î
 (c⁄° *
«me
, 
block_ty≥
,

71 c⁄° *
exåa_öfo
, 
block_£˘‹_t
 
size
,

72 c⁄° 
block_›î©i⁄s
 *, *
aux
);

	@include/device/console.h

1 #i‚de‡
__CONSOLE_H__


2 
	#__CONSOLE_H__


	)

4 #¥agm®
∑ck
(
push
, 1)

6 
	skChSåu˘


8 
	mbCh
;

9 
	mbAâ
;

10 } 
	tCHAR
;

12 
	gGlob_x
;

13 
	gGlob_y
;

15 #¥agm®
∑ck
(
p›
)

18 
	#SERIAL_STDOUT


	)

20 
öô_c⁄sﬁe
();

22 
PrötCh¨ToS¸ìn
(
x
, 
y
, c⁄° *
pSåög
);

23 
PrötCh¨
(
x
, 
y
, c⁄° 
Såög
);

25 
˛rS¸ìn
();

26 
s¸ﬁl
();

27 
¥ötk
(c⁄° *
fmt
, ...);

29 #ifde‡
SCREEN_SCROLL


30 
ª‰eshS¸ìn
();

31 
s¸ﬁl_s¸ìn
(
off£t
);

32 
£t_ÁŒow
();

	@include/device/device.h

1 #i‚def 
__DEVICE_H__


2 
	#__DEVICE_H__


	)

4 
dev_shutdown
();

	@include/device/ide.h

	@include/device/io.h

1 #i‚def 
__IO_H__


2 
	#__IO_H__


	)

4 
	~<°ddef.h
>

5 
	~<°döt.h
>

7 
outb
(
p‹t
, 
d©a
);

8 
öb
(
p‹t
);

9 
oué
(
p‹t
, 
d©a
);

10 
öl
(
p‹t
);

11 
iowaô
();

13 
ªad_¸0
();

14 
wrôe_¸0
(
d©a
);

15 
ªad_¸3
();

16 
wrôe_¸3
(
d©a
);

17 
ªad_¸4
();

18 
wrôe_¸4
(
d©a
);

20 
dev_shutdown
();

24 
ölöe
 

25 
	$ösw
 (
uöt16_t
 
p‹t
, *
addr
, 
size_t
 
˙t
)

28 
asm
 vﬁ©ûê("ª∞ösw" : "+D" (
addr
), "+c" (
˙t
Ë: "d" (
p‹t
) : "memory");

29 
	}
}

33 
ölöe
 

34 
	$outsw
 (
uöt16_t
 
p‹t
, c⁄° *
addr
, 
size_t
 
˙t
)

37 
asm
 vﬁ©ûê("ª∞outsw" : "+S" (
addr
), "+c" (
˙t
Ë: "d" (
p‹t
));

38 
	}
}

	@include/device/kbd.h

1 #i‚de‡
__KDB_H__


2 
	#__KDB_H__


	)

4 
	~<ty≥.h
>

5 
	~<öãºu±.h
>

7 
	#KBDMAPSIZE
 86

	)

9 
	#KEY_ESC
 0x1B

	)

10 
	#KEY_RSHIFT
 0x02

	)

11 
	#KEY_PRTSCN
 0x03

	)

12 
	#KEY_LALT
 0x04

	)

13 
	#KEY_SPACE
 0x05

	)

14 
	#KEY_CAPS
 0x06

	)

15 
	#KEY_F1
 0X07

	)

16 
	#KEY_F2
 0x08

	)

17 
	#KEY_F3
 0x09

	)

18 
	#KEY_F4
 0x0A

	)

19 
	#KEY_F5
 0x0B

	)

20 
	#KEY_F6
 0x0C

	)

21 
	#KEY_F7
 0x0D

	)

22 
	#KEY_F8
 0x0E

	)

23 
	#KEY_F9
 0x0F

	)

24 
	#KEY_F10
 0x10

	)

25 
	#KEY_F11
 0x11

	)

26 
	#KEY_F12
 0x12

	)

27 
	#KEY_BSPACE
 0x13

	)

28 
	#KEY_TAB
 0x14

	)

30 
	sKey_Sètus_Såu˘
 {

31 
BOOL
 
	mShi·Fœg
;

32 
BOOL
 
	mC≠¶ockFœg
;

33 
BOOL
 
	mNumlockFLag
;

34 
BOOL
 
	mS¸ﬁŒockFœg
;

36 
BOOL
 
	mExã¡edFœg
;

37 
	mPau£Fœg
;

38 } 
	tKey_Sètus
;

40 
Upd©eKeySèt
(
BYTE
);

41 
BOOL
 
C⁄vîtSˇncodeToASCII
(
BYTE
, BYTE *);

42 
öô_kbd
();

43 
kbd_h™dÀr
(
öå_‰ame
 *
i‰ame
);

45 
kbd_ªad_ch¨
();

	@include/device/partition.h

1 #i‚de‡
DEVICES_PARTITION_H


2 
	#DEVICES_PARTITION_H


	)

4 
	gblock
;

6 
∑πôi⁄_sˇn
 (
block
 *);

	@include/device/pit.h

1 #i‚def 
__PIT_H__


2 
	#__PIT_H__


	)

4 
	#PIT_CHANNEL0
 0x40

	)

5 
	#PIT_CHANNEL1
 0x41

	)

6 
	#PIT_CHANNEL2
 0x42

	)

7 
	#PIT_COMMAND
 0x43

	)

9 
	#PIT_COUNTER0
 0x00

	)

10 
	#PIT_COUNTER1
 0x40

	)

11 
	#PIT_COUNTER2
 0x80

	)

12 
	#PIT_READBACK
 0xA0

	)

14 
	#PIT_RW_COUNTER_LATCH
 0x00

	)

15 
	#PIT_RW_LBYTE
 0x10

	)

16 
	#PIT_RW_MBYTE
 0x20

	)

17 
	#PIT_RW_LMBYTE
 0x30

	)

19 
	#PIT_MODE0
 
Ox00


	)

20 
	#PIT_MODE1
 0x02

	)

21 
	#PIT_MODE2
 0x04

	)

22 
	#PIT_MODE3
 0x06

	)

23 
	#PIT_MODE4
 0x08

	)

24 
	#PIT_MODE5
 0x0A

	)

26 
	#PIT_BINARY
 0x00

	)

27 
	#PIT_BCD
 0x01

	)

29 
	#PIT_HZ
 1193181

	)

30 
	#PIT_FRQ_HZ
 1000

	)

32 
öô_pô
();

	@include/do_syscall.h

1 #i‚def 
__DO_SYSCALL_H__


2 
	#__DO_SYSCALL_H__


	)

4 
pid_t
 
do_f‹k
(
¥oc_func
 
func
, * 
aux
);

5 
do_exô
(
°©us
);

6 
pid_t
 
do_waô
(*
°©us
);

7 
do_ssuªad
(
ty≥
, * 
buf
, 
Àn
);

8 
do_shutdown
();

	@include/interrupt.h

1 #i‚de‡
__INTERRUPT_H__


2 
	#__INTERRUPT_H__


	)

4 
	#HLT
(Ë
__asm__
 
	`__vﬁ©ûe
("h…");

	)

12 
	~<ty≥.h
>

15 
	eöå_Àvñ


17 
	mINTR_OFF
,

18 
	mINTR_ON


21 
öå_Àvñ
 
öå_gë_Àvñ
 ();

22 
öå_Àvñ
 
öå_£t_Àvñ
 (intr_level);

23 
öå_Àvñ
 
öå_íabÀ
 ();

24 
öå_Àvñ
 
öå_dißbÀ
 ();

26 #¥agm®
∑ck
(
push
, 1)

29 
	söå_‰ame


33 
uöt32_t
 
	medi
;

34 
uöt32_t
 
	mesi
;

35 
uöt32_t
 
	mebp
;

36 
uöt32_t
 
	me•_dummy
;

37 
uöt32_t
 
	mebx
;

38 
uöt32_t
 
	medx
;

39 
uöt32_t
 
	mecx
;

40 
uöt32_t
 
	móx
;

41 
uöt16_t
 
	mgs
, :16;

42 
uöt16_t
 
	mfs
, :16;

43 
uöt16_t
 
	mes
, :16;

44 
uöt16_t
 
	mds
, :16;

47 
uöt32_t
 
	mvec_no
;

52 
uöt32_t
 
	mîr‹_code
;

56 *
	m‰ame_poöãr
;

60 (*
	meù
) ();

61 
uöt16_t
 
	mcs
, :16;

62 
uöt32_t
 
	meÊags
;

63 *
	me•
;

64 
uöt16_t
 
	mss
, :16;

67 #¥agm®
∑ck
(
p›
)

69 
	töå_h™dÀr_func
 (
	töå_‰ame
 *);

70 
boﬁ
 
öå_c⁄ãxt
 ();

71 
do_sched_⁄_ªtu∫
();

75 
öô_öå
();

76 
ªg_h™dÀr
(
idx
, 
öå_h™dÀr_func
 *
h™dÀr
);

77 
gë_ticks
();

79 #i‚de‡
__ASSEMBLER__


	@include/intr-stubs.h

1 #i‚de‡
_INTR_STUBS_H_


2 
	#_INTR_STUBS_H_


	)

4 
	#INTR_MAX
 256

	)

17 
	töå_°ub_func
 ();

18 
öå_°ub_func
 *
öå_°ubs
[
INTR_MAX
];

21 
öå_exô
 ();

	@include/inttypes.h

1 #i‚de‡
__LIB_INTTYPES_H


2 
	#__LIB_INTTYPES_H


	)

4 
	~<°döt.h
>

6 
	#PRId8
 "hhd"

	)

7 
	#PRIi8
 "hhi"

	)

8 
	#PRIo8
 "hho"

	)

9 
	#PRIu8
 "hhu"

	)

10 
	#PRIx8
 "hhx"

	)

11 
	#PRIX8
 "hhX"

	)

13 
	#PRId16
 "hd"

	)

14 
	#PRIi16
 "hi"

	)

15 
	#PRIo16
 "ho"

	)

16 
	#PRIu16
 "hu"

	)

17 
	#PRIx16
 "hx"

	)

18 
	#PRIX16
 "hX"

	)

20 
	#PRId32
 "d"

	)

21 
	#PRIi32
 "i"

	)

22 
	#PRIo32
 "o"

	)

23 
	#PRIu32
 "u"

	)

24 
	#PRIx32
 "x"

	)

25 
	#PRIX32
 "X"

	)

27 
	#PRId64
 "Œd"

	)

28 
	#PRIi64
 "Œi"

	)

29 
	#PRIo64
 "Œo"

	)

30 
	#PRIu64
 "Œu"

	)

31 
	#PRIx64
 "Œx"

	)

32 
	#PRIX64
 "ŒX"

	)

34 
	#PRIdMAX
 "jd"

	)

35 
	#PRIiMAX
 "ji"

	)

36 
	#PRIoMAX
 "jo"

	)

37 
	#PRIuMAX
 "ju"

	)

38 
	#PRIxMAX
 "jx"

	)

39 
	#PRIXMAX
 "jX"

	)

41 
	#PRIdPTR
 "td"

	)

42 
	#PRIiPTR
 "ti"

	)

43 
	#PRIoPTR
 "to"

	)

44 
	#PRIuPTR
 "tu"

	)

45 
	#PRIxPTR
 "tx"

	)

46 
	#PRIXPTR
 "tX"

	)

	@include/limits.h

1 #i‚de‡
__LIMITS_H__


2 
	#__LIMITS_H__


	)

4 
	#CHAR_BIT
 8

	)

6 
	#SCHAR_MAX
 127

	)

7 
	#SCHAR_MIN
 (-
SCHAR_MAX
 - 1)

	)

8 
	#UCHAR_MAX
 255

	)

10 #ifde‡
__CHAR_UNSIGNED__


11 
	#CHAR_MIN
 0

	)

12 
	#CHAR_MAX
 
UCHAR_MAX


	)

14 
	#CHAR_MIN
 
SCHAR_MIN


	)

15 
	#CHAR_MAX
 
SCHAR_MAX


	)

18 
	#SHRT_MAX
 32767

	)

19 
	#SHRT_MIN
 (-
SHRT_MAX
 - 1)

	)

20 
	#USHRT_MAX
 65535

	)

22 
	#INT_MAX
 2147483647

	)

23 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

24 
	#UINT_MAX
 4294967295U

	)

26 
	#LONG_MAX
 2147483647L

	)

27 
	#LONG_MIN
 (-
LONG_MAX
 - 1)

	)

28 
	#ULONG_MAX
 4294967295UL

	)

30 
	#LLONG_MAX
 9223372036854775807LL

	)

31 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1)

	)

32 
	#ULLONG_MAX
 18446744073709551615ULL

	)

	@include/list.h

1 #i‚de‡
__LIST_H__


2 
	#__LIST_H__


	)

85 
	~<ssulib.h
>

86 
	~<ty≥.h
>

89 
	sli°_ñem


91 
li°_ñem
 *
	m¥ev
;

92 
li°_ñem
 *
	m√xt
;

96 
	sli°


98 
li°_ñem
 
	mhód
;

99 
li°_ñem
 
	mèû
;

107 
	#li°_íåy
(
LIST_ELEM
, 
STRUCT
, 
MEMBER
) \

108 ((
STRUCT
 *Ë((
uöt8_t
 *Ë&(
LIST_ELEM
)->
√xt
 \

109 - 
	`off£tof
 (
STRUCT
, 
MEMBER
.
√xt
)))

	)

121 
	#LIST_INITIALIZER
(
NAME
Ë{ { 
NULL
, &(NAME).
èû
 }, \

122 { &(
NAME
).
hód
, 
NULL
 } }

	)

124 
li°_öô
 (
li°
 *);

127 
li°_ñem
 *
li°_begö
 (
li°
 *);

128 
li°_ñem
 *
li°_√xt
 (list_elem *);

129 
li°_ñem
 *
li°_íd
 (
li°
 *);

131 
li°_ñem
 *
li°_rbegö
 (
li°
 *);

132 
li°_ñem
 *
li°_¥ev
 (list_elem *);

133 
li°_ñem
 *
li°_ªnd
 (
li°
 *);

135 
li°_ñem
 *
li°_hód
 (
li°
 *);

136 
li°_ñem
 *
li°_èû
 (
li°
 *);

139 
li°_ö£π
 (
li°_ñem
 *, list_elem *);

140 
li°_•li˚
 (
li°_ñem
 *
bef‹e
,

141 
li°_ñem
 *
fú°
, li°_ñem *
œ°
);

142 
li°_push_‰⁄t
 (
li°
 *, 
li°_ñem
 *);

143 
li°_push_back
 (
li°
 *, 
li°_ñem
 *);

146 
li°_ñem
 *
li°_ªmove
 (list_elem *);

147 
li°_ñem
 *
li°_p›_‰⁄t
 (
li°
 *);

148 
li°_ñem
 *
li°_p›_back
 (
li°
 *);

151 
li°_ñem
 *
li°_‰⁄t
 (
li°
 *);

152 
li°_ñem
 *
li°_back
 (
li°
 *);

155 
size_t
 
li°_size
 (
li°
 *);

156 
boﬁ
 
li°_em±y
 (
li°
 *);

159 
li°_ªvî£
 (
li°
 *);

164 
boﬁ
 
	tli°_Àss_func
 (c⁄° 
	tli°_ñem
 *
	ta
,

165 c⁄° 
	tli°_ñem
 *
	tb
,

166 *
	taux
);

169 
li°_s‹t
 (
li°
 *,

170 
li°_Àss_func
 *, *
aux
);

171 
li°_ö£π_‹dîed
 (
li°
 *, 
li°_ñem
 *,

172 
li°_Àss_func
 *, *
aux
);

173 
li°_unique
 (
li°
 *, li° *
du∂iˇãs
,

174 
li°_Àss_func
 *, *
aux
);

177 
li°_ñem
 *
li°_max
 (
li°
 *, 
li°_Àss_func
 *, *
aux
);

178 
li°_ñem
 *
li°_mö
 (
li°
 *, 
li°_Àss_func
 *, *
aux
);

	@include/loader.h

1 #i‚de‡
THREADS_LOADER_H


2 
	#THREADS_LOADER_H


	)

5 
	#LOADER_BASE
 0x7c00

	)

6 
	#LOADER_END
 0x7e00

	)

9 
	#LOADER_KERN_BASE
 0x20000

	)

13 
	#LOADER_PHYS_BASE
 0xc0000000

	)

16 
	#LOADER_SIG
 (
LOADER_END
 - 
LOADER_SIG_LEN
Ë

	)

17 
	#LOADER_PARTS
 (
LOADER_SIG
 - 
LOADER_PARTS_LEN
Ë

	)

18 
	#LOADER_ARGS
 (
LOADER_PARTS
 - 
LOADER_ARGS_LEN
Ë

	)

19 
	#LOADER_ARG_CNT
 (
LOADER_ARGS
 - 
LOADER_ARG_CNT_LEN
Ë

	)

22 
	#LOADER_SIG_LEN
 2

	)

23 
	#LOADER_PARTS_LEN
 64

	)

24 
	#LOADER_ARGS_LEN
 128

	)

25 
	#LOADER_ARG_CNT_LEN
 4

	)

29 
	#SEL_NULL
 0x00

	)

30 
	#SEL_KCSEG
 0x08

	)

31 
	#SEL_KDSEG
 0x10

	)

33 #i‚de‡
__ASSEMBLER__


34 
	~<°döt.h
>

37 
uöt32_t
 
öô_øm_∑ges
;

	@include/mem/malloc.h

1 #i‚def 
__MALLOC_H__


2 
	#__MALLOC_H__


	)

	@include/mem/mm.h

1 #i‚def 
__MEM_H__


2 
	#__MEM_H__


	)

4 
mem_size
();

5 
dëe˘_mem
();

6 * 
mem£t
(* 
d°_
, 
vÆue
, 
size
);

	@include/mem/paging.h

1 #i‚de‡
__PAGING_H__


2 
	#__PAGING_H__


	)

4 
	~<ty≥.h
>

5 
	~<¥oc/¥oc.h
>

7 
	#CR0_FLAG_PG
 0x80000000

8 
	#CR0_FLAG_PE
 0x00000001

9 

	)

10 
	#PAGE_FLAG_PRESENT
 0x01

11 
	#PAGE_FLAG_RW
 0x02

12 
	#PAGE_FLAG_USER
 0x04

13 
	#PAGE_FLAG_WRITE
 0x08

14 
	#PAGE_FLAG_CACHE
 0x10

15 
	#PAGE_FLAG_ACCESS
 0x20

16 
	#PAGE_FLAG_AVAIL
 0x40

17 
	#PAGE_FLAG_DIRTY
 0x40

18 
	#PAGE_FLAG_SIZE
 0x80

19 
	#PAGE_FLAG_PTA
 0x80

20 
	#PAGE_FLAG_GLOB
 0x100

21 
	#PAGE_ADDR_AVAIL
 0x200

22 
	#PAGE_ADDR_BASE
 0x1000

23 

	)

24 
	#PAGE_MASK_BASE
 0xFFFFF000

25 
	#PAGE_MASK_PDE
 0xFFC00000

26 
	#PAGE_MASK_PTE
 0x003FF000

27 
	#PAGE_OFFSET_PDE
 22

28 
	#PAGE_OFFSET_PTE
 12

29 

	)

30 
	#PAGE_SIZE
 4096

31 
	#PAGE_TBL_SIZE
 4096

32 
	#PAGE_DIR_SIZE
 4096

33 

	)

34 
	#KERNEL_ADDR
 0x00100000

35 
	#KERNEL_HEAP
 0x00400000

	)

37 
ölöe
 
uöt32_t
 
	$pg_no
(c⁄° 
uöt32_t
 *
∑ge
){

38  (
uöt32_t
)
∑ge
 >> 
PAGE_OFFSET_PTE
;

39 
	}
}

41 
öô_∑gög
();

42 
uöt32_t
* 
pd_¸óã
 (
pid_t
 
pid
);

43 
uöt32_t
 
pde_idx_addr
(uöt32_t* 
addr
);

44 
uöt32_t
 
±e_idx_addr
(uöt32_t* 
addr
);

	@include/mem/palloc.h

1 #i‚de‡
__PALLOC_H__


2 
	#__PALLOC_H__


	)

4 
	~<ssulib.h
>

6 
öô_∑Œoc
 ();

7 
uöt32_t
 *
∑Œoc_gë_∑ge
 ();

8 
uöt32_t
 *
∑Œoc_gë_mu…ùÀ
 (
size_t
 
∑ge_˙t
);

9 
∑Œoc_‰ì_∑ge
 (*);

10 
∑Œoc_‰ì_mu…ùÀ
 (*, 
size_t
 
∑ge_˙t
);

	@include/packed.h

1 #i‚de‡
__LIB_PACKED_H


2 
	#__LIB_PACKED_H


	)

8 
	#PACKED
 
	`__©åibuã__
 ((
∑cked
))

	)

	@include/proc/proc.h

1 #i‚def 
__PROC_H__


2 
	#__PROC_H__


	)

4 
	~<li°.h
>

6 
	tpid_t
;

8 
	ep_°©e
 {

9 
	mPROC_UNUSED
,

10 
	mPROC_RUN
,

11 
	mPROC_STOP
,

12 
	mPROC_ZOMBIE
,

13 
	mPROC_BLOCK
,

16 #¥agm®
∑ck
(
push
, 1)

18 
	s¥oc_›ti⁄


20 
	m¥i‹ôy
;

23 
	s¥o˚ss


25 
pid_t
 
	mpid
;

26 *
	m°ack
;

27 *
	mpd
;

28 
p_°©e
 
	m°©e
;

29 
	mtime_¶ìp
;

31 
	m¥i‹ôy
;

32 
	mtime_¶i˚
;

34 
li°_ñem
 
	mñem_Æl
;

35 
li°_ñem
 
	mñem_°©
;

37 
	mtime_u£d
;

38 
	mtime_sched
;

39 
¥o˚ss
* 
	m∑ª¡
;

40 
	msim∂e_lock
;

41 
	mchûd_pid
;

42 
	mexô_°©us
;

45 #¥agm®
∑ck
(
p›
)

47 
¥o˚ss
 *
cur_¥o˚ss
;

49 
	t¥oc_func
(* 
	taux
);

50 
¥oc_func
 
	g¥öt_pid
;

51 
¥oc_func
 
	gidÀ
;

53 
scheduÀ
();

55 
öô_¥oc
();

56 
¥oc_‰ì
();

58 
pid_t
 
¥oc_¸óã
(
¥oc_func
 
func
, 
¥oc_›ti⁄
 *
¥i‹ôy
, * 
aux
);

59 
¥oc_wake
();

60 
¥oc_¶ìp
(
ticks
);

61 
¥oc_block
();

62 
¥oc_unblock
(
¥o˚ss
* 
¥oc
);

64 
¥oc_¥öt_d©a
();

	@include/proc/sched.h

1 #i‚def 
__SCHED_H__


2 
	#__SCHED_H__


	)

4 
	~<li°.h
>

5 
	~<¥oc/¥oc.h
>

7 
scheduÀ
();

	@include/proc/switch.h

1 #i‚de‡
_SWITCH_H_


2 
	#_SWITCH_H_


	)

4 
	~<¥oc/¥oc.h
>

5 
	~<ty≥.h
>

7 
swôch_¥o˚ss
(
¥o˚ss
 *
cur
, ¥o˚s†*
√xt
);

	@include/round.h

1 #i‚de‡
__LIB_ROUND_H


2 
	#__LIB_ROUND_H


	)

6 
	#ROUND_UP
(
X
, 
STEP
Ë(((XË+ (STEPË- 1Ë/ (STEPË* (STEP))

	)

10 
	#DIV_ROUND_UP
(
X
, 
STEP
Ë(((XË+ (STEPË- 1Ë/ (STEP))

	)

14 
	#ROUND_DOWN
(
X
, 
STEP
Ë((XË/ (STEPË* (STEP))

	)

	@include/ssulib.h

1 #i‚de‡
__SSULIB_H__


2 
	#__SSULIB_H__


	)

4 
	~<ty≥.h
>

5 
	#off£tof
(
TYPE
, 
MEMBER
Ë((
size_t
Ë&((TYPE *Ë0)->MEMBER)

	)

7 
	#BUFSIZ
 512

	)

9 
mem˝y
(* 
‰om
, * 
to
, 
uöt32_t
 
Àn
);

10 
°∫cmp
(* 
b1
, * 
b2
, 
Àn
);

11 
gëch¨
();

12 
gëTokí
(* 
buf
, 
Àn
);

	@include/stdarg.h

1 #i‚de‡
__STDARG_H__


2 
	#__STDARG_H__


	)

4 *
	tva_li°
;

6 
	#_ADDRESSOF
(
v
Ë–&(vË)

	)

7 
	#_INTSIZEOF
(
n
Ë–(“Ë+ (Ë- 1Ë& ~((Ë- 1Ë)

	)

9 
	#va_°¨t
(
≠
,
v
Ë–≠ = (
va_li°
)
	`_ADDRESSOF
(vË+ 
	`_INTSIZEOF
(vË)

	)

10 
	#va_¨g
(
≠
,
t
Ë–*— *)(◊∞+
	`_INTSIZEOF
—)Ë- _INTSIZEOF—)Ë)

	)

11 
	#va_íd
(
≠
Ë–≠ = (
va_li°
)0 )

	)

13 
°æí
(c⁄° *
°rög
);

14 *
numbî
(* 
°r
, 
num
, 
ba£
, 
size
, 
¥ecisi⁄
, 
ty≥
);

15 
skù_©oi
(c⁄° **
s
);

16 
v•rötk
(*
buf
, c⁄° *
fmt
, 
va_li°
 
¨gs
);

	@include/stdbool.h

1 #i‚de‡
__LIB_STDBOOL_H


2 
	#__LIB_STDBOOL_H


	)

5 
	#åue
 1

	)

6 
	#Ál£
 0

	)

7 
	#__boﬁ_åue_Ál£_¨e_deföed
 1

	)

	@include/stddef.h

1 #i‚de‡
__LIB_STDDEF_H


2 
	#__LIB_STDDEF_H


	)

5 
	#off£tof
(
TYPE
, 
MEMBER
Ë((
size_t
Ë&((TYPE *Ë0)->MEMBER)

	)

10 
__PTRDIFF_TYPE__
 
	t±rdiff_t
;

11 
__SIZE_TYPE__
 
	tsize_t
;

	@include/stdint.h

1 #i‚de‡
__LIB_STDINT_H


2 
	#__LIB_STDINT_H


	)

4 sig√d 
	töt8_t
;

5 
	#INT8_MAX
 127

	)

6 
	#INT8_MIN
 (-
INT8_MAX
 - 1)

	)

8 sig√d 
	töt16_t
;

9 
	#INT16_MAX
 32767

	)

10 
	#INT16_MIN
 (-
INT16_MAX
 - 1)

	)

12 sig√d 
	töt32_t
;

13 
	#INT32_MAX
 2147483647

	)

14 
	#INT32_MIN
 (-
INT32_MAX
 - 1)

	)

16 sig√d 
	töt64_t
;

17 
	#INT64_MAX
 9223372036854775807LL

	)

18 
	#INT64_MIN
 (-
INT64_MAX
 - 1)

	)

20 
	tuöt8_t
;

21 
	#UINT8_MAX
 255

	)

23 
	tuöt16_t
;

24 
	#UINT16_MAX
 65535

	)

26 
	tuöt32_t
;

27 
	#UINT32_MAX
 4294967295U

	)

29 
	tuöt64_t
;

30 
	#UINT64_MAX
 18446744073709551615ULL

	)

32 
öt32_t
 
	töçå_t
;

33 
	#INTPTR_MIN
 
INT32_MIN


	)

34 
	#INTPTR_MAX
 
INT32_MAX


	)

36 
uöt32_t
 
	tuöçå_t
;

37 
	#UINTPTR_MAX
 
UINT32_MAX


	)

39 
öt64_t
 
	tötmax_t
;

40 
	#INTMAX_MIN
 
INT64_MIN


	)

41 
	#INTMAX_MAX
 
INT64_MAX


	)

43 
	tuötmax_t
;

44 
	#UINTMAX_MAX
 
UINT64_MAX


	)

46 
	#PTRDIFF_MIN
 
INT32_MIN


	)

47 
	#PTRDIFF_MAX
 
INT32_MAX


	)

49 
	#SIZE_MAX
 
UINT32_MAX


	)

	@include/stdio.h

1 #i‚de‡
__LIB_STDIO_H


2 
	#__LIB_STDIO_H


	)

4 
	~<debug.h
>

5 
	~<°d¨g.h
>

6 
	~<ty≥.h
>

7 
	~<°ddef.h
>

8 
	~<°döt.h
>

15 
	#STDIN_FILENO
 0

	)

16 
	#STDOUT_FILENO
 1

	)

19 
	$¥ötf
 (c⁄° *, ...Ë
	`PRINTF_FORMAT
 (1, 2);

20 
	$¢¥ötf
 (*, 
size_t
, c⁄° *, ...Ë
	`PRINTF_FORMAT
 (3, 4);

21 
	$v¥ötf
 (c⁄° *, 
va_li°
Ë
	`PRINTF_FORMAT
 (1, 0);

22 
	$v¢¥ötf
 (*, 
size_t
, c⁄° *, 
va_li°
Ë
	`PRINTF_FORMAT
 (3, 0);

23 
	`putch¨
 ();

24 
	`puts
 (const *);

27 
	`hex_dump
 (
uöçå_t
 
ofs
, c⁄° *, 
size_t
 
size
, 
boﬁ
 
ascii
);

28 
	`¥öt_hum™_ªadabÀ_size
 (
uöt64_t
 
sz
);

31 
	`__v¥ötf
 (c⁄° *
f‹m©
, 
va_li°
 
¨gs
,

32 (*
ouçut
Ë(, *), *
aux
);

33 
	`__¥ötf
 (c⁄° *
f‹m©
,

34 (*
ouçut
Ë(, *), *
aux
, ...);

37 
	#•rötf
 
d⁄t_u£_•rötf_u£_¢¥ötf


	)

38 
	#v•rötf
 
d⁄t_u£_v•rötf_u£_v¢¥ötf


	)

	@include/stdlib.h

1 #i‚de‡
__LIB_STDLIB_H


2 
	#__LIB_STDLIB_H


	)

4 
	~<°ddef.h
>

7 
©oi
 (const *);

8 
qs‹t
 (*
¨øy
, 
size_t
 
˙t
, size_à
size
,

9 (*
com∑ª
) (const *, const *));

10 *
	`b£¨ch
 (c⁄° *
key
, c⁄° *
¨øy
, 
size_t
 
˙t
,

11 
size_t
 
size
, (*
com∑ª
) (const *, const *));

14 
	`s‹t
 (*
¨øy
, 
size_t
 
˙t
, size_à
size
,

15 (*
com∑ª
Ë(c⁄° *, c⁄° *, *
aux
),

16 *
aux
);

17 *
	`bö¨y_£¨ch
 (c⁄° *
key
, c⁄° *
¨øy
, 
size_t
 
˙t
,

18 
size_t
 
size
,

19 (*
com∑ª
Ë(c⁄° *, c⁄° *, *
aux
),

20 *
aux
);

	@include/string.h

1 #i‚de‡
__LIB_STRING_H


2 
	#__LIB_STRING_H


	)

4 
	~<°ddef.h
>

8 *
memmove
 (*, c⁄° *, 
size_t
);

9 *
°∫ˇt
 (*, c⁄° *, 
size_t
);

10 
memcmp
 (c⁄° *, c⁄° *, 
size_t
);

11 
°rcmp
 (const *, const *);

12 *
memchr
 (c⁄° *, , 
size_t
);

13 *
°rchr
 (const *, );

14 
size_t
 
°rc•n
 (const *, const *);

15 *
°Ωbrk
 (const *, const *);

16 *
°ºchr
 (const *, );

17 
size_t
 
°r•n
 (const *, const *);

18 *
°r°r
 (const *, const *);

19 *
mem£t
 (*, , 
size_t
);

23 
size_t
 
°æ˝y
 (*, const *, size_t);

24 
size_t
 
°æˇt
 (*, const *, size_t);

25 *
°πok_r
 (*, const *, **);

26 
size_t
 
°∫Àn
 (const *, size_t);

29 
	#°r˝y
 
d⁄t_u£_°r˝y_u£_°æ˝y


	)

30 
	#°∫˝y
 
d⁄t_u£_°∫˝y_u£_°æ˝y


	)

31 
	#°rˇt
 
d⁄t_u£_°rˇt_u£_°æˇt


	)

32 
	#°∫ˇt
 
d⁄t_u£_°∫ˇt_u£_°æˇt


	)

33 
	#°πok
 
d⁄t_u£_°πok_u£_°πok_r


	)

	@include/synch.h

1 #i‚de‡
__SYNCH_H__


2 
	#__SYNCH_H__


	)

4 
	~<li°.h
>

5 
	~<ty≥.h
>

9 
	s£m≠h‹e


11 
	mvÆue
;

12 
li°
 
	mwaôîs
;

15 
£ma_öô
 (
£m≠h‹e
 *, 
vÆue
);

16 
£ma_down
 (
£m≠h‹e
 *);

17 
boﬁ
 
£ma_åy_down
 (
£m≠h‹e
 *);

18 
£ma_up
 (
£m≠h‹e
 *);

19 
£ma_£lf_ã°
 ();

22 
	slock


24 
¥o˚ss
 *
	mhﬁdî
;

25 
£m≠h‹e
 
	m£m≠h‹e
;

28 
lock_öô
 (
lock
 *);

29 
lock_acquúe
 (
lock
 *);

30 
boﬁ
 
lock_åy_acquúe
 (
lock
 *);

31 
lock_ªÀa£
 (
lock
 *);

32 
boﬁ
 
lock_hñd_by_cuºít_¥o˚ss
 (c⁄° 
lock
 *);

35 
	sc⁄dôi⁄


37 
li°
 
	mwaôîs
;

40 
c⁄d_öô
 (
c⁄dôi⁄
 *);

41 
c⁄d_waô
 (
c⁄dôi⁄
 *, 
lock
 *);

42 
c⁄d_sig«l
 (
c⁄dôi⁄
 *, 
lock
 *);

43 
c⁄d_brﬂdˇ°
 (
c⁄dôi⁄
 *, 
lock
 *);

50 
	#b¨rõr
(Ë
asm
 vﬁ©ûê("" : : : "mem‹y")

	)

	@include/syscall.h

1 #i‚de‡ 
__SYSCALL_H__


2 
	#__SYSCALL_H__


	)

4 
	eSYS_LIST
 {

5 
	mSYS_FORK
 = 0,

6 
	mSYS_EXIT
,

7 
	mSYS_WAIT
,

8 
	mSYS_SSUREAD
,

9 
	mSYS_SHUTDOWN
,

10 
	mSYS_NUM
,

13 
	~<¥oc/¥oc.h
>

14 
öô_sysˇŒ
();

16 
exô
(
°©us
);

17 
pid_t
 
f‹k
(
¥oc_func
 
func
, * 
aux
);

18 
pid_t
 
waô
(*
°©us
);

19 
ssuªad
();

20 
shutdown
();

22 
sysˇŒ_tbl
[
SYS_NUM
][2];

	@include/type.h

1 #i‚de‡
__TYPE_H__


2 
	#__TYPE_H__


	)

4 
	tBYTE
;

5 #i‚de‡
BOOL


6 
	tBOOL
;

8 
	tboﬁ
;

9 
	tsize_t
;

10 
	tqw‹d
;

12 
	#TRUE
 1

	)

13 
	#FALSE
 0

	)

15 #i‚de‡
NULL


16 
	#NULL
 0

	)

18 #i‚de‡
åue


19 
	#åue
 1

	)

21 #i‚de‡
Ál£


22 
	#Ál£
 0

	)

29 sig√d 
	töt8_t
;

30 
	#INT8_MAX
 127

	)

31 
	#INT8_MIN
 (-
INT8_MAX
 - 1)

	)

33 sig√d 
	töt16_t
;

34 
	#INT16_MAX
 32767

	)

35 
	#INT16_MIN
 (-
INT16_MAX
 - 1)

	)

37 sig√d 
	töt32_t
;

38 
	#INT32_MAX
 2147483647

	)

39 
	#INT32_MIN
 (-
INT32_MAX
 - 1)

	)

41 sig√d 
	töt64_t
;

42 
	#INT64_MAX
 9223372036854775807LL

	)

43 
	#INT64_MIN
 (-
INT64_MAX
 - 1)

	)

45 
	tuöt8_t
;

46 
	#UINT8_MAX
 255

	)

48 
	tuöt16_t
;

49 
	#UINT16_MAX
 65535

	)

51 
	tuöt32_t
;

52 
	#UINT32_MAX
 4294967295U

	)

54 
	tuöt64_t
;

55 
	#UINT64_MAX
 18446744073709551615ULL

	)

57 
öt32_t
 
	töçå_t
;

58 
	#INTPTR_MIN
 
INT32_MIN


	)

59 
	#INTPTR_MAX
 
INT32_MAX


	)

61 
uöt32_t
 
	tuöçå_t
;

62 
	#UINTPTR_MAX
 
UINT32_MAX


	)

64 
öt64_t
 
	tötmax_t
;

65 
	#INTMAX_MIN
 
INT64_MIN


	)

66 
	#INTMAX_MAX
 
INT64_MAX


	)

68 
	tuötmax_t
;

69 
	#UINTMAX_MAX
 
UINT64_MAX


	)

71 
	#PTRDIFF_MIN
 
INT32_MIN


	)

72 
	#PTRDIFF_MAX
 
INT32_MAX


	)

74 
	#SIZE_MAX
 
UINT32_MAX


	)

	@include/vaddr.h

1 #i‚de‡
THREADS_VADDR_H


2 
	#THREADS_VADDR_H


	)

4 
	~<debug.h
>

5 
	~<°döt.h
>

6 
	~<°dboﬁ.h
>

8 
	~<lﬂdî.h
>

15 
	#BITMASK
(
SHIFT
, 
CNT
Ë(((1u»<< (CNT)Ë- 1Ë<< (SHIFT))

	)

18 
	#PGSHIFT
 0

	)

19 
	#PGBITS
 12

	)

20 
	#PGSIZE
 (1 << 
PGBITS
Ë

	)

21 
	#PGMASK
 
	`BITMASK
(
PGSHIFT
, 
PGBITS
Ë

	)

24 
ölöe
 
	$pg_ofs
 (c⁄° *
va
) {

25  (
uöçå_t
Ë
va
 & 
PGMASK
;

26 
	}
}

29 
ölöe
 
uöçå_t
 
	$pg_no
 (c⁄° *
va
) {

30  (
uöçå_t
Ë
va
 >> 
PGBITS
;

31 
	}
}

34 
ölöe
 *
	$pg_round_up
 (c⁄° *
va
) {

35  (*Ë(((
uöçå_t
Ë
va
 + 
PGSIZE
 - 1Ë& ~
PGMASK
);

36 
	}
}

39 
ölöe
 *
	$pg_round_down
 (c⁄° *
va
) {

40  (*Ë((
uöçå_t
Ë
va
 & ~
PGMASK
);

41 
	}
}

53 
	#PHYS_BASE
 ((*Ë
LOADER_PHYS_BASE
)

	)

56 
ölöe
 
boﬁ


57 
	$is_u£r_vaddr
 (c⁄° *
vaddr
)

59  
vaddr
 < 
PHYS_BASE
;

60 
	}
}

63 
ölöe
 
boﬁ


64 
	$is_kî√l_vaddr
 (c⁄° *
vaddr
)

66  
vaddr
 >
PHYS_BASE
;

67 
	}
}

71 
ölöe
 *

72 
	$±ov
 (
uöçå_t
 
∑ddr
)

74 
	`ASSERT
 ((*Ë
∑ddr
 < 
PHYS_BASE
);

76  (*Ë(
∑ddr
 + 
PHYS_BASE
);

77 
	}
}

81 
ölöe
 
uöçå_t


82 
	$vt›
 (c⁄° *
vaddr
)

84 
	`ASSERT
 (
	`is_kî√l_vaddr
 (
vaddr
));

86  (
uöçå_t
Ë
vaddr
 - (uöçå_tË
PHYS_BASE
;

87 
	}
}

	@list.c

1 
	~<li°.h
>

3 #i‚de‡
ASSERT


4 
	#ASSERT
(
COND
Ë;

	)

37 
boﬁ
 
is_s‹ãd
 (
li°_ñem
 *
a
, li°_ñem *
b
,

38 
li°_Àss_func
 *
Àss
, *
aux
);

41 
ölöe
 
boﬁ


42 
	$is_hód
 (
li°_ñem
 *
ñem
)

44  
ñem
 !
NULL
 &&ÉÀm->
¥ev
 =NULL &&ÉÀm->
√xt
 != NULL;

45 
	}
}

49 
ölöe
 
boﬁ


50 
	$is_öãri‹
 (
li°_ñem
 *
ñem
)

52  
ñem
 !
NULL
 &&ÉÀm->
¥ev
 !NULL &&ÉÀm->
√xt
 != NULL;

53 
	}
}

56 
ölöe
 
boﬁ


57 
	$is_èû
 (
li°_ñem
 *
ñem
)

59  
ñem
 !
NULL
 &&ÉÀm->
¥ev
 !NULL &&ÉÀm->
√xt
 == NULL;

60 
	}
}

64 
	$li°_öô
 (
li°
 *list)

66 
	`ASSERT
 (
li°
 !
NULL
);

67 
li°
->
hód
.
¥ev
 = 
NULL
;

68 
li°
->
hód
.
√xt
 = &li°->
èû
;

69 
li°
->
èû
.
¥ev
 = &li°->
hód
;

70 
li°
->
èû
.
√xt
 = 
NULL
;

71 
	}
}

74 
li°_ñem
 *

75 
	$li°_begö
 (
li°
 *list)

77 
	`ASSERT
 (
li°
 !
NULL
);

78  
li°
->
hód
.
√xt
;

79 
	}
}

84 
li°_ñem
 *

85 
	$li°_√xt
 (
li°_ñem
 *
ñem
)

87 
	`ASSERT
 (
	`is_hód
 (
ñem
Ë|| 
	`is_öãri‹
 (elem));

88  
ñem
->
√xt
;

89 
	}
}

96 
li°_ñem
 *

97 
	$li°_íd
 (
li°
 *list)

99 
	`ASSERT
 (
li°
 !
NULL
);

100  &
li°
->
èû
;

101 
	}
}

105 
li°_ñem
 *

106 
	$li°_rbegö
 (
li°
 *list)

108 
	`ASSERT
 (
li°
 !
NULL
);

109  
li°
->
èû
.
¥ev
;

110 
	}
}

115 
li°_ñem
 *

116 
	$li°_¥ev
 (
li°_ñem
 *
ñem
)

118 
	`ASSERT
 (
	`is_öãri‹
 (
ñem
Ë|| 
	`is_èû
 (elem));

119  
ñem
->
¥ev
;

120 
	}
}

135 
li°_ñem
 *

136 
	$li°_ªnd
 (
li°
 *list)

138 
	`ASSERT
 (
li°
 !
NULL
);

139  &
li°
->
hód
;

140 
	}
}

153 
li°_ñem
 *

154 
	$li°_hód
 (
li°
 *list)

156 
	`ASSERT
 (
li°
 !
NULL
);

157  &
li°
->
hód
;

158 
	}
}

161 
li°_ñem
 *

162 
	$li°_èû
 (
li°
 *list)

164 
	`ASSERT
 (
li°
 !
NULL
);

165  &
li°
->
èû
;

166 
	}
}

172 
	$li°_ö£π
 (
li°_ñem
 *
bef‹e
, li°_ñem *
ñem
)

174 
	`ASSERT
 (
	`is_öãri‹
 (
bef‹e
Ë|| 
	`is_èû
 (before));

175 
	`ASSERT
 (
ñem
 !
NULL
);

177 if(
ñem
->
¥ev
 !
NULL
)

178 
ñem
->
¥ev
->
√xt
 =Élem->next;

179 if(
ñem
->
√xt
 !
NULL
)

180 
ñem
->
√xt
->
¥ev
 =Élem->prev;

182 
ñem
->
¥ev
 = 
bef‹e
->prev;

183 
ñem
->
√xt
 = 
bef‹e
;

184 
bef‹e
->
¥ev
->
√xt
 = 
ñem
;

185 
bef‹e
->
¥ev
 = 
ñem
;

186 
	}
}

192 
	$li°_•li˚
 (
li°_ñem
 *
bef‹e
,

193 
li°_ñem
 *
fú°
, li°_ñem *
œ°
)

195 
	`ASSERT
 (
	`is_öãri‹
 (
bef‹e
Ë|| 
	`is_èû
 (before));

196 i‡(
fú°
 =
œ°
)

198 
œ°
 = 
	`li°_¥ev
 (last);

200 
	`ASSERT
 (
	`is_öãri‹
 (
fú°
));

201 
	`ASSERT
 (
	`is_öãri‹
 (
œ°
));

204 
fú°
->
¥ev
->
√xt
 = 
œ°
->next;

205 
œ°
->
√xt
->
¥ev
 = 
fú°
->prev;

208 
fú°
->
¥ev
 = 
bef‹e
->prev;

209 
œ°
->
√xt
 = 
bef‹e
;

210 
bef‹e
->
¥ev
->
√xt
 = 
fú°
;

211 
bef‹e
->
¥ev
 = 
œ°
;

212 
	}
}

217 
	$li°_push_‰⁄t
 (
li°
 *li°, 
li°_ñem
 *
ñem
)

219 
	`li°_ö£π
 (
	`li°_begö
 (
li°
), 
ñem
);

220 
	}
}

225 
	$li°_push_back
 (
li°
 *li°, 
li°_ñem
 *
ñem
)

227 
	`li°_ö£π
 (
	`li°_íd
 (
li°
), 
ñem
);

228 
	}
}

256 
li°_ñem
 *

257 
	$li°_ªmove
 (
li°_ñem
 *
ñem
)

259 
	`ASSERT
 (
	`is_öãri‹
 (
ñem
));

260 
ñem
->
¥ev
->
√xt
 =Élem->next;

261 
ñem
->
√xt
->
¥ev
 =Élem->prev;

262  
ñem
->
√xt
;

263 
	}
}

267 
li°_ñem
 *

268 
	$li°_p›_‰⁄t
 (
li°
 *list)

270 
li°_ñem
 *
‰⁄t
 = 
	`li°_‰⁄t
 (
li°
);

271 
	`li°_ªmove
 (
‰⁄t
);

272  
‰⁄t
;

273 
	}
}

277 
li°_ñem
 *

278 
	$li°_p›_back
 (
li°
 *list)

280 
li°_ñem
 *
back
 = 
	`li°_back
 (
li°
);

281 
	`li°_ªmove
 (
back
);

282  
back
;

283 
	}
}

287 
li°_ñem
 *

288 
	$li°_‰⁄t
 (
li°
 *list)

290 
	`ASSERT
 (!
	`li°_em±y
 (
li°
));

291  
li°
->
hód
.
√xt
;

292 
	}
}

296 
li°_ñem
 *

297 
	$li°_back
 (
li°
 *list)

299 
	`ASSERT
 (!
	`li°_em±y
 (
li°
));

300  
li°
->
èû
.
¥ev
;

301 
	}
}

305 
size_t


306 
	$li°_size
 (
li°
 *list)

308 
li°_ñem
 *
e
;

309 
size_t
 
˙t
 = 0;

311 
e
 = 
	`li°_begö
 (
li°
);É !
	`li°_íd
 (li°);É = 
	`li°_√xt
 (e))

312 
˙t
++;

313  
˙t
;

314 
	}
}

317 
boﬁ


318 
	$li°_em±y
 (
li°
 *list)

320  
	`li°_begö
 (
li°
Ë=
	`li°_íd
 (list);

321 
	}
}

325 
	$sw≠
 (
li°_ñem
 **
a
, li°_ñem **
b
)

327 
li°_ñem
 *
t
 = *
a
;

328 *
a
 = *
b
;

329 *
b
 = 
t
;

330 
	}
}

334 
	$li°_ªvî£
 (
li°
 *list)

336 i‡(!
	`li°_em±y
 (
li°
))

338 
li°_ñem
 *
e
;

340 
e
 = 
	`li°_begö
 (
li°
);É !
	`li°_íd
 (li°);É =É->
¥ev
)

341 
	`sw≠
 (&
e
->
¥ev
, &e->
√xt
);

342 
	`sw≠
 (&
li°
->
hód
.
√xt
, &li°->
èû
.
¥ev
);

343 
	`sw≠
 (&
li°
->
hód
.
√xt
->
¥ev
, &li°->
èû
.prev->next);

345 
	}
}

349 
boﬁ


350 
	$is_s‹ãd
 (
li°_ñem
 *
a
, li°_ñem *
b
,

351 
li°_Àss_func
 *
Àss
, *
aux
)

353 i‡(
a
 !
b
)

354 (
a
 = 
	`li°_√xt
 (a)Ë!
b
)

355 i‡(
	`Àss
 (
a
, 
	`li°_¥ev
 (a), 
aux
))

356  
Ál£
;

357  
åue
;

358 
	}
}

365 
li°_ñem
 *

366 
	$föd_íd_of_run
 (
li°_ñem
 *
a
, li°_ñem *
b
,

367 
li°_Àss_func
 *
Àss
, *
aux
)

369 
	`ASSERT
 (
a
 !
NULL
);

370 
	`ASSERT
 (
b
 !
NULL
);

371 
	`ASSERT
 (
Àss
 !
NULL
);

372 
	`ASSERT
 (
a
 !
b
);

376 
a
 = 
	`li°_√xt
 (a);

378 
a
 !
b
 && !
	`Àss
 (a, 
	`li°_¥ev
 (a), 
aux
));

379  
a
;

380 
	}
}

388 
	$ö∂a˚_mîge
 (
li°_ñem
 *
a0
, li°_ñem *
a1b0
,

389 
li°_ñem
 *
b1
,

390 
li°_Àss_func
 *
Àss
, *
aux
)

392 
	`ASSERT
 (
a0
 !
NULL
);

393 
	`ASSERT
 (
a1b0
 !
NULL
);

394 
	`ASSERT
 (
b1
 !
NULL
);

395 
	`ASSERT
 (
Àss
 !
NULL
);

396 
	`ASSERT
 (
	`is_s‹ãd
 (
a0
, 
a1b0
, 
Àss
, 
aux
));

397 
	`ASSERT
 (
	`is_s‹ãd
 (
a1b0
, 
b1
, 
Àss
, 
aux
));

399 
a0
 !
a1b0
 &&á1b0 !
b1
)

400 i‡(!
	`Àss
 (
a1b0
, 
a0
, 
aux
))

401 
a0
 = 
	`li°_√xt
 (a0);

404 
a1b0
 = 
	`li°_√xt
 (a1b0);

405 
	`li°_•li˚
 (
a0
, 
	`li°_¥ev
 (
a1b0
),á1b0);

407 
	}
}

413 
	$li°_s‹t
 (
li°
 *li°, 
li°_Àss_func
 *
Àss
, *
aux
)

415 
size_t
 
ouçut_run_˙t
;

417 
	`ASSERT
 (
li°
 !
NULL
);

418 
	`ASSERT
 (
Àss
 !
NULL
);

424 
li°_ñem
 *
a0
;

425 
li°_ñem
 *
a1b0
;

426 
li°_ñem
 *
b1
;

428 
ouçut_run_˙t
 = 0;

429 
a0
 = 
	`li°_begö
 (
li°
);á0 !
	`li°_íd
 (li°);á0 = 
b1
)

432 
ouçut_run_˙t
++;

436 
a1b0
 = 
	`föd_íd_of_run
 (
a0
, 
	`li°_íd
 (
li°
), 
Àss
, 
aux
);

437 i‡(
a1b0
 =
	`li°_íd
 (
li°
))

439 
b1
 = 
	`föd_íd_of_run
 (
a1b0
, 
	`li°_íd
 (
li°
), 
Àss
, 
aux
);

442 
	`ö∂a˚_mîge
 (
a0
, 
a1b0
, 
b1
, 
Àss
, 
aux
);

445 
ouçut_run_˙t
 > 1);

447 
	`ASSERT
 (
	`is_s‹ãd
 (
	`li°_begö
 (
li°
), 
	`li°_íd
 (li°), 
Àss
, 
aux
));

448 
	}
}

454 
	$li°_ö£π_‹dîed
 (
li°
 *li°, 
li°_ñem
 *
ñem
,

455 
li°_Àss_func
 *
Àss
, *
aux
)

457 
li°_ñem
 *
e
;

459 
	`ASSERT
 (
li°
 !
NULL
);

460 
	`ASSERT
 (
ñem
 !
NULL
);

461 
	`ASSERT
 (
Àss
 !
NULL
);

463 
e
 = 
	`li°_begö
 (
li°
);É !
	`li°_íd
 (li°);É = 
	`li°_√xt
 (e))

464 i‡(
	`Àss
 (
ñem
, 
e
, 
aux
))

466  
	`li°_ö£π
 (
e
, 
ñem
);

467 
	}
}

474 
	$li°_unique
 (
li°
 *li°, li° *
du∂iˇãs
,

475 
li°_Àss_func
 *
Àss
, *
aux
)

477 
li°_ñem
 *
ñem
, *
√xt
;

479 
	`ASSERT
 (
li°
 !
NULL
);

480 
	`ASSERT
 (
Àss
 !
NULL
);

481 i‡(
	`li°_em±y
 (
li°
))

484 
ñem
 = 
	`li°_begö
 (
li°
);

485 (
√xt
 = 
	`li°_√xt
 (
ñem
)Ë!
	`li°_íd
 (
li°
))

486 i‡(!
	`Àss
 (
ñem
, 
√xt
, 
aux
) && !less (next,Élem,áux))

488 
	`li°_ªmove
 (
√xt
);

489 i‡(
du∂iˇãs
 !
NULL
)

490 
	`li°_push_back
 (
du∂iˇãs
, 
√xt
);

493 
ñem
 = 
√xt
;

494 
	}
}

500 
li°_ñem
 *

501 
	$li°_max
 (
li°
 *li°, 
li°_Àss_func
 *
Àss
, *
aux
)

503 
li°_ñem
 *
max
 = 
	`li°_begö
 (
li°
);

504 i‡(
max
 !
	`li°_íd
 (
li°
))

506 
li°_ñem
 *
e
;

508 
e
 = 
	`li°_√xt
 (
max
);É !
	`li°_íd
 (
li°
);É =Üist_next (e))

509 i‡(
	`Àss
 (
max
, 
e
, 
aux
))

510 
max
 = 
e
;

512  
max
;

513 
	}
}

519 
li°_ñem
 *

520 
	$li°_mö
 (
li°
 *li°, 
li°_Àss_func
 *
Àss
, *
aux
)

522 
li°_ñem
 *
mö
 = 
	`li°_begö
 (
li°
);

523 i‡(
mö
 !
	`li°_íd
 (
li°
))

525 
li°_ñem
 *
e
;

527 
e
 = 
	`li°_√xt
 (
mö
);É !
	`li°_íd
 (
li°
);É =Üist_next (e))

528 i‡(
	`Àss
 (
e
, 
mö
, 
aux
))

529 
mö
 = 
e
;

531  
mö
;

532 
	}
}

	@mem/malloc.c

1 
	~<mem/mÆloc.h
>

2 
	~<debug.h
>

3 
	~<li°.h
>

4 
	~<round.h
>

5 
	~<°döt.h
>

6 
	~<°dio.h
>

7 
	~<°rög.h
>

8 
	~<mem/∑Œoc.h
>

9 
	~<synch.h
>

10 
	~<vaddr.h
>

38 
	sdesc


40 
size_t
 
	mblock_size
;

41 
size_t
 
	mblocks_≥r_¨ía
;

42 
li°
 
	m‰ì_li°
;

43 
lock
 
	mlock
;

47 
	#ARENA_MAGIC
 0x9a548ìd

	)

50 
	s¨ía


52 
	mmagic
;

53 
desc
 *
	mdesc
;

54 
size_t
 
	m‰ì_˙t
;

58 
	sblock


60 
li°_ñem
 
	m‰ì_ñem
;

64 
desc
 
	gdescs
[10];

65 
size_t
 
	gdesc_˙t
;

67 
¨ía
 *
block_to_¨ía
 (
block
 *);

68 
block
 *
¨ía_to_block
 (
¨ía
 *, 
size_t
 
idx
);

72 
	$mÆloc_öô
 ()

74 
size_t
 
block_size
;

76 
block_size
 = 16; block_sizê< 
PGSIZE
 / 2; block_size *= 2)

78 
desc
 *
d
 = &
descs
[
desc_˙t
++];

80 
d
->
block_size
 = block_size;

81 
d
->
blocks_≥r_¨ía
 = (
PGSIZE
 -  (
¨ía
)Ë/ 
block_size
;

82 
	`li°_öô
 (&
d
->
‰ì_li°
);

83 
	`lock_öô
 (&
d
->
lock
);

85 
	}
}

90 
	$mÆloc
 (
size_t
 
size
)

92 
desc
 *
d
;

93 
block
 *
b
;

94 
¨ía
 *
a
;

97 i‡(
size
 == 0)

98  
NULL
;

102 
d
 = 
descs
; d < desc†+ 
desc_˙t
; d++)

103 i‡(
d
->
block_size
 >
size
)

105 i‡(
d
 =
descs
 + 
desc_˙t
)

109 
size_t
 
∑ge_˙t
 = 
	`DIV_ROUND_UP
 (
size
 +  *
a
, 
PGSIZE
);

110 
a
 = 
	`∑Œoc_gë_mu…ùÀ
 (
∑ge_˙t
);

111 i‡(
a
 =
NULL
)

112  
NULL
;

116 
a
->
magic
 = 
ARENA_MAGIC
;

117 
a
->
desc
 = 
NULL
;

118 
a
->
‰ì_˙t
 = 
∑ge_˙t
;

119  
a
 + 1;

122 
	`lock_acquúe
 (&
d
->
lock
);

125 i‡(
	`li°_em±y
 (&
d
->
‰ì_li°
))

127 
size_t
 
i
;

130 
a
 = 
	`∑Œoc_gë_∑ge
 ();

131 i‡(
a
 =
NULL
)

133 
	`lock_ªÀa£
 (&
d
->
lock
);

134  
NULL
;

138 
a
->
magic
 = 
ARENA_MAGIC
;

139 
a
->
desc
 = 
d
;

140 
a
->
‰ì_˙t
 = 
d
->
blocks_≥r_¨ía
;

141 
i
 = 0; i < 
d
->
blocks_≥r_¨ía
; i++)

143 
block
 *
b
 = 
	`¨ía_to_block
 (
a
, 
i
);

144 
	`li°_push_back
 (&
d
->
‰ì_li°
, &
b
->
‰ì_ñem
);

149 
b
 = 
	`li°_íåy
 (
	`li°_p›_‰⁄t
 (&
d
->
‰ì_li°
), 
block
, 
‰ì_ñem
);

150 
a
 = 
	`block_to_¨ía
 (
b
);

151 
a
->
‰ì_˙t
--;

152 
	`lock_ªÀa£
 (&
d
->
lock
);

153  
b
;

154 
	}
}

159 
	$ˇŒoc
 (
size_t
 
a
, size_à
b
)

161 *
p
;

162 
size_t
 
size
;

165 
size
 = 
a
 * 
b
;

166 i‡(
size
 < 
a
 || sizê< 
b
)

167  
NULL
;

170 
p
 = 
	`mÆloc
 (
size
);

171 i‡(
p
 !
NULL
)

172 
	`mem£t
 (
p
, 0, 
size
);

174  
p
;

175 
	}
}

178 
size_t


179 
	$block_size
 (*
block
)

181 
block
 *
b
 = block;

182 
¨ía
 *
a
 = 
	`block_to_¨ía
 (
b
);

183 
desc
 *
d
 = 
a
->desc;

185  
d
 !
NULL
 ? d->
block_size
 : 
PGSIZE
 * 
a
->
‰ì_˙t
 - 
	`pg_ofs
 (
block
);

186 
	}
}

195 
	$ªÆloc
 (*
ﬁd_block
, 
size_t
 
√w_size
)

197 i‡(
√w_size
 == 0)

199 
	`‰ì
 (
ﬁd_block
);

200  
NULL
;

204 *
√w_block
 = 
	`mÆloc
 (
√w_size
);

205 i‡(
ﬁd_block
 !
NULL
 && 
√w_block
 != NULL)

207 
size_t
 
ﬁd_size
 = 
	`block_size
 (
ﬁd_block
);

208 
size_t
 
mö_size
 = 
√w_size
 < 
ﬁd_size
 ?Çew_size : old_size;

209 
	`mem˝y
 (
√w_block
, 
ﬁd_block
, 
mö_size
);

210 
	`‰ì
 (
ﬁd_block
);

212  
√w_block
;

214 
	}
}

219 
	$‰ì
 (*
p
)

221 i‡(
p
 !
NULL
)

223 
block
 *
b
 = 
p
;

224 
¨ía
 *
a
 = 
	`block_to_¨ía
 (
b
);

225 
desc
 *
d
 = 
a
->desc;

227 i‡(
d
 !
NULL
)

231 #i‚de‡
NDEBUG


233 
	`mem£t
 (
b
, 0xcc, 
d
->
block_size
);

236 
	`lock_acquúe
 (&
d
->
lock
);

239 
	`li°_push_‰⁄t
 (&
d
->
‰ì_li°
, &
b
->
‰ì_ñem
);

242 i‡(++
a
->
‰ì_˙t
 >
d
->
blocks_≥r_¨ía
)

244 
size_t
 
i
;

247 
i
 = 0; i < 
d
->
blocks_≥r_¨ía
; i++)

249 
block
 *
b
 = 
	`¨ía_to_block
 (
a
, 
i
);

250 
	`li°_ªmove
 (&
b
->
‰ì_ñem
);

252 
	`∑Œoc_‰ì_∑ge
 (
a
);

255 
	`lock_ªÀa£
 (&
d
->
lock
);

260 
	`∑Œoc_‰ì_mu…ùÀ
 (
a
,á->
‰ì_˙t
);

264 
	}
}

267 
¨ía
 *

268 
	$block_to_¨ía
 (
block
 *
b
)

270 
¨ía
 *
a
 = 
	`pg_round_down
 (
b
);

280  
a
;

281 
	}
}

284 
block
 *

285 
	$¨ía_to_block
 (
¨ía
 *
a
, 
size_t
 
idx
)

290  (
block
 *Ë((
uöt8_t
 *Ë
a


291 +  *
a


292 + 
idx
 * 
a
->
desc
->
block_size
);

293 
	}
}

	@mem/mm.c

1 
	~<mem/mm.h
>

3 
gëMemSize
();

4 
nGëMemSize
();

6 
	gMEM_SIZE
;

8 
	$dëe˘_mem
()

10 
MEM_SIZE
 = 
	`nGëMemSize
();

12 
	}
}

14 
	$nGëMemSize
()

16 *
pAddr
 = (*)0x20000;

17 
tmp
;

19 
pAddr
 += (4*1024*1024);

20 
tmp
 = *
pAddr
;

21 *
pAddr
 = 0x12345678;

22 if(*
pAddr
 != 0x12345678) {

23 
pAddr
 -= (4*1024*1024);

25 
pAddr
 += (4*1024);

26 
tmp
 = *
pAddr
;

27 *
pAddr
 = 0x87654321;

28 if(*
pAddr
 != 0x87654321)

30 *
pAddr
 = 
tmp
;

34 *
pAddr
 = 
tmp
;

37  ()
pAddr
;

38 
	}
}

40 
	$mem_size
()

42  
MEM_SIZE
;

43 
	}
}

	@mem/paging.c

1 
	~<devi˚/io.h
>

2 
	~<mem/mm.h
>

3 
	~<mem/∑gög.h
>

4 
	~<devi˚/c⁄sﬁe.h
>

5 
	~<¥oc/¥oc.h
>

6 
	~<öãºu±.h
>

7 
	~<mem/∑Œoc.h
>

8 
	~<ssulib.h
>

10 
uöt32_t
 *
	gPID0_PAGE_DIR
;

12 
öå_h™dÀr_func
 
	gpf_h™dÀr
;

14 
uöt32_t
 
	$sˇÀ_up
(
uöt32_t
 
ba£
, uöt32_à
size
)

16 
uöt32_t
 
mask
 = ~(
size
-1);

17 if(
ba£
 & 
mask
 != 0)

18 
ba£
 = ba£ & 
mask
 + 
size
;

19  
ba£
;

20 
	}
}

22 
uöt32_t
 
	$sˇÀ_down
(
uöt32_t
 
ba£
, uöt32_à
size
)

24 
uöt32_t
 
mask
 = ~(
size
-1);

25 if(
ba£
 & 
mask
 != 0)

26 
ba£
 = ba£ & 
mask
 - 
size
;

27  
ba£
;

28 
	}
}

30 
	$öô_∑gög
()

32 
uöt32_t
 *
∑ge_dú
 = 
	`∑Œoc_gë_∑ge
();

33 
uöt32_t
 *
∑ge_tbl
 = 
	`∑Œoc_gë_∑ge
();

34 
PID0_PAGE_DIR
 = 
∑ge_dú
;

36 
NUM_PT
, 
NUM_PE
;

37 
uöt32_t
 
¸0_∑gög_£t
;

38 
i
;

41 
NUM_PE
 = 
	`mem_size
(Ë/ 
PAGE_SIZE
;

42 
NUM_PT
 = 
NUM_PE
 / 1024;

44 
	`¥ötk
("-PE=%d, PT=%d\n", 
NUM_PE
, 
NUM_PT
);

45 
	`¥ötk
("-∑gêdú=%xÖagêtbl=%x\n", 
∑ge_dú
, 
∑ge_tbl
);

48 
∑ge_dú
[0] = (
uöt32_t
)
∑ge_tbl
 | 
PAGE_FLAG_RW
 | 
PAGE_FLAG_PRESENT
;

51 
NUM_PE
 = 
KERNEL_HEAP
 / 
PAGE_SIZE
;

53  
i
 = 0; i < 
NUM_PE
; i++ ) {

54 
∑ge_tbl
[
i
] = (
PAGE_SIZE
 * i)

55 | 
PAGE_FLAG_RW


56 | 
PAGE_FLAG_PRESENT
;

61 
¸0_∑gög_£t
 = 
	`ªad_¸0
(Ë| 
CR0_FLAG_PG
;

64 
	`wrôe_¸3
–()
∑ge_dú
 );

65 
	`wrôe_¸0
–
¸0_∑gög_£t
 );

67 
	`ªg_h™dÀr
(14, 
pf_h™dÀr
);

68 
	}
}

70 
	$mem˝y_h¨d
(* 
‰om
, * 
to
, 
uöt32_t
 
Àn
)

72 
	`wrôe_¸0
–
	`ªad_¸0
(Ë& ~
CR0_FLAG_PG
);

74 
	`mem˝y
(
‰om
, 
to
, 
Àn
);

76 
	`wrôe_¸0
–
	`ªad_¸0
(Ë| 
CR0_FLAG_PG
);

77 
	}
}

79 
uöt32_t
* 
	$gë_cur_pd
()

81  (
uöt32_t
*)
	`ªad_¸3
();

82 
	}
}

84 
uöt32_t
 
	$pde_idx_addr
(
uöt32_t
* 
addr
)

86 
uöt32_t
 
ªt
 = ((uöt32_t)
addr
 & 
PAGE_MASK_PDE
Ë>> 
PAGE_OFFSET_PDE
;

87  
ªt
;

88 
	}
}

90 
uöt32_t
 
	$±e_idx_addr
(
uöt32_t
* 
addr
)

92 
uöt32_t
 
ªt
 = ((uöt32_t)
addr
 & 
PAGE_MASK_PTE
Ë>> 
PAGE_OFFSET_PTE
;

93  
ªt
;

94 
	}
}

97 
uöt32_t
* 
	$±_pde
(
uöt32_t
 
pde
)

99 
uöt32_t
 * 
ªt
 = (uöt32_t*)(
pde
 & 
PAGE_MASK_BASE
);

100  
ªt
;

101 
	}
}

104 
uöt32_t
* 
	$±_addr
(
uöt32_t
* 
addr
)

106 
uöt32_t
 
idx
 = 
	`pde_idx_addr
(
addr
);

107 
uöt32_t
* 
pd
 = 
	`gë_cur_pd
();

108  
	`±_pde
(
pd
[
idx
]);

109 
	}
}

112 
uöt32_t
* 
	$pg_addr
(
uöt32_t
* 
addr
)

114 
uöt32_t
 *
±
 = 
	`±_addr
(
addr
);

115 
uöt32_t
 
idx
 = 
	`±e_idx_addr
(
addr
);

116 
uöt32_t
 *
ªt
 = (uöt32_t*)(
±
[
idx
] & 
PAGE_MASK_BASE
);

117  
ªt
;

118 
	}
}

125 
uöt32_t
 
	$±_c›y
(
uöt32_t
 *
pd
, uöt32_à*
de°_pd
, uöt32_à
idx
, uöt32_t* 
°¨t
, uöt32_t* 
íd
, 
boﬁ
 
sh¨e
)

127 
uöt32_t
 *
±
 = 
	`±_pde
(
pd
[
idx
]);

128 
uöt32_t
 *
√w_±
;

129 
uöt32_t
 *
±e_s
 = 
°¨t
;

130 
uöt32_t
 *
±e_e
 = 
íd
;

131 
uöt32_t
 
s
, 
e
, 
i
;

132 
uöt32_t
 
size


133 
PAGE_SIZE
;

135 
√w_±
 = 
	`∑Œoc_gë_∑ge
();

136 
de°_pd
[
idx
] = (
uöt32_t
)
√w_±
 | (
pd
[idx] & ~
PAGE_MASK_BASE
 & ~
PAGE_FLAG_ACCESS
);

138 if(
°¨t
 =
íd
)

141 
±e_s
 = (
uöt32_t
*)
	`sˇÀ_down
((uöt32_tÌã_s, 
size
);

142 
±e_e
 = (
uöt32_t
*)
	`sˇÀ_up
((uöt32_tÌã_e, 
size
);

144 
s
 = 
	`±e_idx_addr
(
±e_s
);

145 
e
 = 
	`±e_idx_addr
(
±e_e
);

147 if(
e
 =0 && 
°¨t
 !
íd
)

148 
e
 = 
PAGE_TBL_SIZE
/(
uöt32_t
);

150 
i
 = 
s
; i<
e
; i++)

152 if(
±
[
i
] & 
PAGE_FLAG_PRESENT
)

154 if(!
sh¨e
)

156 
uöt32_t
* 
pg
 = 
	`∑Œoc_gë_∑ge
();

157 
√w_±
[
i
] = (
uöt32_t
)
pg
 | (
±
[i] & ~
PAGE_MASK_BASE
 & ~
PAGE_FLAG_ACCESS
);

158 
	`mem˝y_h¨d
((*)(
±
[
i
] & 
PAGE_MASK_BASE
), (*)
pg
, 
PAGE_SIZE
);

161 
√w_±
[
i
] = 
±
[i];

164  
de°_pd
[
idx
];

165 
	}
}

173 
	$pd_c›y
(
uöt32_t
* 
‰om
, uöt32_t* 
to
, uöt32_t* 
°¨t
, uöt32_t* 
íd
, 
boﬁ
 
sh¨e
)

175 
uöt32_t
 *
pde_s
 = 
°¨t
;

176 
uöt32_t
 *
pde_e
 = 
íd
;

177 
uöt32_t
 
s
, 
e
, 
i
;

178 
uöt32_t
 
size


179 
PAGE_SIZE


180 * 
PAGE_TBL_SIZE
/(
uöt32_t
);

182 
pde_s
 = (
uöt32_t
*)
	`sˇÀ_down
((uöt32_tÌde_s, 
size
);

183 
pde_e
 = (
uöt32_t
*)
	`sˇÀ_up
((uöt32_tÌde_e, 
size
);

185 
s
 = 
	`pde_idx_addr
(
pde_s
);

186 
e
 = 
	`pde_idx_addr
(
pde_e
);

188 
i
 = 
s
; i<
e
; i++)

190 if(
‰om
[
i
] & 
PAGE_FLAG_PRESENT
)

191 
	`±_c›y
(
‰om
, 
to
, 
i
, 
°¨t
, 
íd
, 
sh¨e
);

193 
	}
}

195 
uöt32_t
* 
	$pd_¸óã
 (
pid_t
 
pid
)

197 
uöt32_t
 *
pd
 = 
	`∑Œoc_gë_∑ge
();

198 
	`pd_c›y
(
PID0_PAGE_DIR
, 
pd
, (
uöt32_t
*)0, (uöt32_t*)
KERNEL_HEAP
, 
åue
);

199  
pd
;

200 
	}
}

202 
	$pf_h™dÀr
(
öå_‰ame
 *
i‰ame
)

204 *
Áu…_addr
;

206 
	`asm
 ("mov»%%¸2, %0" : "Ù" (
Áu…_addr
));

208 
	`¥ötk
("PagêÁu… : %X\n",
Áu…_addr
);

211 
	}
}

	@mem/palloc.c

1 
	~<mem/∑Œoc.h
>

2 
	~<bôm≠.h
>

3 
	~<ty≥.h
>

4 
	~<round.h
>

5 
	~<mem/mm.h
>

6 
	~<synch.h
>

7 
	~<devi˚/c⁄sﬁe.h
>

8 
	~<mem/∑gög.h
>

19 
	spoﬁ


21 
lock
 
	mlock
;

22 
bôm≠
 *
	mu£d_m≠
;

23 
uöt32_t
 *
	mba£
;

26 
poﬁ
 
	gmem_poﬁ
;

28 
öô_poﬁ
 (
poﬁ
 *, *
ba£
, 
size_t
 
∑ge_˙t
,

29 c⁄° *
«me
);

33 
	$öô_∑Œoc
 ()

36 
uöt32_t
 *
‰ì_°¨t
 = (uöt32_t*)
KERNEL_ADDR
;

37 
uöt32_t
 *
‰ì_íd
 = (uöt32_t*)
	`mem_size
();

38 
size_t
 
‰ì_∑ges
 = (()
‰ì_íd
 - ()
‰ì_°¨t
Ë/ 
PAGE_SIZE
;

40 
	`öô_poﬁ
 (&
mem_poﬁ
, 
‰ì_°¨t
, 
‰ì_∑ges
, "memoryÖool");

41 
	}
}

45 
uöt32_t
 *

46 
	$∑Œoc_gë_mu…ùÀ
 (
size_t
 
∑ge_˙t
)

48 
poﬁ
 *poﬁ = &
mem_poﬁ
;

49 *
∑ges
;

50 
size_t
 
∑ge_idx
;

52 i‡(
∑ge_˙t
 == 0)

53  
NULL
;

55 
	`lock_acquúe
 (&
poﬁ
->
lock
);

56 
∑ge_idx
 = 
	`bôm≠_sˇn_™d_Êù
 (
poﬁ
->
u£d_m≠
, 0, 
∑ge_˙t
, 
Ál£
);

57 
	`lock_ªÀa£
 (&
poﬁ
->
lock
);

59 i‡(
∑ge_idx
 !
BITMAP_ERROR
)

60 
∑ges
 = 
poﬁ
->
ba£
 + 
PAGE_SIZE
 * 
∑ge_idx
/(
uöt32_t
);

62 
∑ges
 = 
NULL
;

64 i‡(
∑ges
 !
NULL
)

66 
	`mem£t
 (
∑ges
, 0, 
PAGE_SIZE
 * 
∑ge_˙t
);

69  (
uöt32_t
*)
∑ges
;

70 
	}
}

74 
uöt32_t
 *

75 
	$∑Œoc_gë_∑ge
 ()

77  
	`∑Œoc_gë_mu…ùÀ
 (1);

78 
	}
}

82 
	$∑Œoc_‰ì_mu…ùÀ
 (*
∑ges
, 
size_t
 
∑ge_˙t
)

84 
poﬁ
 *pool;

85 
size_t
 
∑ge_idx
;

87 i‡(
∑ges
 =
NULL
 || 
∑ge_˙t
 == 0)

90 
poﬁ
 = &
mem_poﬁ
;

92 
∑ge_idx
 = 
	`pg_no
 (
∑ges
Ë-Ög_nÿ(
poﬁ
->
ba£
);

94 
	`bôm≠_£t_mu…ùÀ
 (
poﬁ
->
u£d_m≠
, 
∑ge_idx
, 
∑ge_˙t
, 
Ál£
);

95 
	}
}

99 
	$∑Œoc_‰ì_∑ge
 (*
∑ge
)

101 
	`∑Œoc_‰ì_mu…ùÀ
 (
∑ge
, 1);

102 
	}
}

107 
	$öô_poﬁ
 (
poﬁ
 *
p
, *
ba£
, 
size_t
 
∑ge_˙t
, c⁄° *
«me
)

112 
size_t
 
bm_∑ges
 = 
	`DIV_ROUND_UP
 (
	`bôm≠_buf_size
 (
∑ge_˙t
), 
PAGE_SIZE
);

113 i‡(
bm_∑ges
 > 
∑ge_˙t
)

114 
	`¥ötk
("NŸÉnough mem‹y i¿%†f‹ bôm≠.", 
«me
);

115 
∑ge_˙t
 -
bm_∑ges
;

117 
	`¥ötk
 ("%uÖage†avaûabÀ i¿%s.\n", 
∑ge_˙t
, 
«me
);

120 
	`lock_öô
 (&
p
->
lock
);

121 
p
->
u£d_m≠
 = 
	`bôm≠_¸óã_ö_buf
 (
∑ge_˙t
, 
ba£
, 
bm_∑ges
 * 
PAGE_SIZE
);

122 
p
->
ba£
 = ba£ + 
bm_∑ges
 * 
PAGE_SIZE
;

123 
	}
}

	@proc/proc.c

1 
	~<li°.h
>

2 
	~<¥oc/sched.h
>

3 
	~<mem/mÆloc.h
>

4 
	~<¥oc/¥oc.h
>

5 
	~<ssulib.h
>

6 
	~<öãºu±.h
>

7 
	~<¥oc/sched.h
>

8 
	~<devi˚/c⁄sﬁe.h
>

9 
	~<devi˚/io.h
>

10 
	~<sysˇŒ.h
>

11 
	~<mem/∑gög.h
>

12 
	~<mem/∑Œoc.h
>

14 
	#STACK_SIZE
 512

	)

15 
	#PROC_NUM_MAX
 16

	)

17 
li°
 
	gp_li°
;

18 
li°
 
	gr_li°
;

19 
li°
 
	gs_li°
;

20 
li°
 
	gd_li°
;

22 
¥o˚ss
 
	g¥ocs
[
PROC_NUM_MAX
];

23 
¥o˚ss
 *
	gcur_¥o˚ss
;

24 
	gpid_num_max
;

26 
uöt32_t
 
	g¥o˚ss_°ack_ofs
;

29 
	glock_pid_sim∂e
;

30 
	gœãly_pid
;

32 
boﬁ
 
m‹e_¥io
(c⁄° 
li°_ñem
 *
a
, c⁄° li°_ñem *
b
,*
aux
);

33 
boﬁ
 
Àss_time_¶ìp
(c⁄° 
li°_ñem
 *
a
, c⁄° li°_ñem *
b
,*
aux
);

34 
pid_t
 
gëVÆidPid
(*
idx
);

36 
¥oc_°¨t
();

37 
¥oc_íd
();

39 
	$öô_¥oc
()

41 
¥o˚ss_°ack_ofs
 = 
	`off£tof
 (
¥o˚ss
, 
°ack
);

43 
lock_pid_sim∂e
 = 0;

44 
œãly_pid
 = -1;

46 
	`li°_öô
(&
p_li°
);

47 
	`li°_öô
(&
r_li°
);

48 
	`li°_öô
(&
s_li°
);

49 
	`li°_öô
(&
d_li°
);

51 
i
;

52 
i
 = 0; i < 
PROC_NUM_MAX
; i++)

54 
¥ocs
[
i
].
pid
 = i;

55 
¥ocs
[
i
].
°©e
 = 
PROC_UNUSED
;

56 
¥ocs
[
i
].
∑ª¡
 = 
NULL
;

59 
pid_t
 
pid
 = 
	`gëVÆidPid
(&
i
);

60 
cur_¥o˚ss
 = &
¥ocs
[
i
];

62 
cur_¥o˚ss
->
pid
 =Öid;

63 
cur_¥o˚ss
->
∑ª¡
 = 
NULL
;

64 
cur_¥o˚ss
->
°©e
 = 
PROC_RUN
;

65 
cur_¥o˚ss
->
¥i‹ôy
 = 0;

66 
cur_¥o˚ss
->
°ack
 = 0;

67 
cur_¥o˚ss
->
pd
 = (*)
	`ªad_¸3
();

69 
	`li°_push_back
(&
p_li°
, &
cur_¥o˚ss
->
ñem_Æl
);

70 
	`li°_push_back
(&
r_li°
, &
cur_¥o˚ss
->
ñem_°©
);

71 
	}
}

73 
pid_t
 
	$gëVÆidPid
(*
idx
) {

75 
pid_t
 
pid
 = -1;

76 
i
;

78 
lock_pid_sim∂e
)

81 
lock_pid_sim∂e
++;

84 
i
 = 0; i < 
PROC_NUM_MAX
; i++)

86 
tmp
 = 
i
 + 
œãly_pid
 + 1;

87 if(
¥ocs
[
tmp
 % 
PROC_NUM_MAX
].
°©e
 =
PROC_UNUSED
) {

88 
pid
 = 
œãly_pid
 + 1;

89 *
idx
 = 
tmp
 % 
PROC_NUM_MAX
;

94 if(
pid
 != -1)

96 
œãly_pid
 = 
pid
;

99 
lock_pid_sim∂e
 = 0;

101  
pid
;

102 
	}
}

104 
pid_t
 
	$¥oc_¸óã
(
¥oc_func
 
func
, 
¥oc_›ti⁄
 *
›t
, * 
aux
)

106 
¥o˚ss
 *
p
;

107 
idx
;

109 
öå_Àvñ
 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
();

111 
pid_t
 
pid
 = 
	`gëVÆidPid
(&
idx
);

112 
p
 = &
¥ocs
[
idx
];

114 
p
->
pid
 =Öid;

115 
p
->
°©e
 = 
PROC_RUN
;

117 if(
›t
 !
NULL
)

118 
p
->
¥i‹ôy
 = 
›t
->priority;

120 
p
->
¥i‹ôy
 = ()0;

122 
p
->
time_u£d
 = 0;

123 
p
->
time_sched
= 0;

124 
p
->
∑ª¡
 = 
cur_¥o˚ss
;

125 
p
->
sim∂e_lock
 = 0;

126 
p
->
chûd_pid
 = -1;

127 
p
->
pd
 = 
	`pd_¸óã
(
pid
);

130 *
t›
 = (*)
	`∑Œoc_gë_∑ge
();

131 
°ack
 = ()
t›
;

132 
t›
 = (*)
°ack
 + 
STACK_SIZE
 - 1;

134 *(--
t›
Ë()
aux
;

135 *(--
t›
Ë()
¥oc_íd
;

136 *(--
t›
Ë()
func
;

137 *(--
t›
Ë()
¥oc_°¨t
;

142 *(--
t›
Ë()((*)
°ack
 + 
STACK_SIZE
 - 1);

143 *(--
t›
) = 1;

144 *(--
t›
) = 2;

145 *(--
t›
) = 3;

146 *(--
t›
) = 4;

147 *(--
t›
) = 5;

148 *(--
t›
) = 6;

150 
p
->
°ack
 = 
t›
;

152 
	`li°_push_back
(&
p_li°
, &
p
->
ñem_Æl
);

153 
	`li°_push_back
(&
r_li°
, &
p
->
ñem_°©
);

155 
	`öå_£t_Àvñ
 (
ﬁd_Àvñ
);

156  
p
->
pid
;

157 
	}
}

159 * 
	$gëEIP
()

161  
	`__buûtö_ªtu∫_addªss
(0);

162 
	}
}

164 
	$¥oc_°¨t
()

166 
	`öå_íabÀ
 ();

168 
	}
}

170 
	$¥oc_‰ì
()

172 
uöt32_t
 
±
 = *(uöt32_t*)
cur_¥o˚ss
->
pd
;

173 
cur_¥o˚ss
->
∑ª¡
->
chûd_pid
 = cur_¥o˚ss->
pid
;

174 
cur_¥o˚ss
->
∑ª¡
->
sim∂e_lock
 = 0;

176 
	`li°_ªmove
(&
cur_¥o˚ss
->
ñem_°©
);

178 
cur_¥o˚ss
->
°©e
 = 
PROC_ZOMBIE
;

179 
	`li°_push_back
(&
d_li°
, &
cur_¥o˚ss
->
ñem_°©
);

182 
	`∑Œoc_‰ì_∑ge
(
cur_¥o˚ss
->
°ack
);

183 
	`∑Œoc_‰ì_∑ge
((*)
±
);

184 
	`∑Œoc_‰ì_∑ge
(
cur_¥o˚ss
->
pd
);

185 
	}
}

187 
	$¥oc_íd
()

189 
	`¥oc_‰ì
();

190 
	`scheduÀ
();

191 
	`¥ötk
("neverÑeach\n");

193 
	}
}

195 
	$¥oc_wake
()

197 
¥o˚ss
* 
p
;

198 
t
 = 
	`gë_ticks
();

200 !
	`li°_em±y
(&
s_li°
))

202 
p
 = 
	`li°_íåy
(
	`li°_‰⁄t
(&
s_li°
), 
¥o˚ss
, 
ñem_°©
);

203 if(
p
->
time_¶ìp
 > 
t
)

206 
p
->
°©e
 = 
PROC_RUN
;

207 
	`li°_ªmove
(&
p
->
ñem_°©
);

209 
	}
}

211 
	$¥oc_¶ìp
(
ticks
)

213 
cur_ticks
 = 
	`gë_ticks
();

214 
cur_¥o˚ss
->
time_¶ìp
 = 
ticks
 + 
cur_ticks
;

215 
cur_¥o˚ss
->
°©e
 = 
PROC_STOP
;

216 
	`li°_ö£π_‹dîed
(&
s_li°
, &
cur_¥o˚ss
->
ñem_°©
,

217 
Àss_time_¶ìp
, 
NULL
);

218 
	`scheduÀ
();

219 
	}
}

221 
	$¥oc_block
()

223 
cur_¥o˚ss
->
°©e
 = 
PROC_BLOCK
;

224 
	`scheduÀ
();

225 
	}
}

227 
	$¥oc_unblock
(
¥o˚ss
* 
¥oc
)

229 
öå_Àvñ
 
ﬁd_Àvñ
;

231 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
();

233 
	`li°_push_back
(&
r_li°
, &
¥oc
->
ñem_°©
);

234 
¥oc
->
°©e
 = 
PROC_RUN
;

236 
	`öå_£t_Àvñ
(
ﬁd_Àvñ
);

237 
	}
}

239 
boﬁ
 
	$Àss_time_¶ìp
(c⁄° 
li°_ñem
 *
a
, c⁄° li°_ñem *
b
,*
aux
)

241 
¥o˚ss
 *
p1
 = 
	`li°_íåy
(
a
, ¥o˚ss, 
ñem_°©
);

242 
¥o˚ss
 *
p2
 = 
	`li°_íåy
(
b
, ¥o˚ss, 
ñem_°©
);

244  
p1
->
time_¶ìp
 < 
p2
->time_sleep;

245 
	}
}

247 
boﬁ
 
	$m‹e_¥io
(c⁄° 
li°_ñem
 *
a
, c⁄° li°_ñem *
b
,*
aux
)

249 
¥o˚ss
 *
p1
 = 
	`li°_íåy
(
a
, ¥o˚ss, 
ñem_°©
);

250 
¥o˚ss
 *
p2
 = 
	`li°_íåy
(
b
, ¥o˚ss, 
ñem_°©
);

251  
p1
->
¥i‹ôy
 > 
p2
->priority;

252 
	}
}

255 
	$kî√l1_¥oc
(* 
aux
)

257 
cur_¥o˚ss
 -> 
¥i‹ôy
 = 200;

260 
	`scheduÀ
();

262 
	}
}

264 
	$kî√l2_¥oc
(* 
aux
)

266 
cur_¥o˚ss
 -> 
¥i‹ôy
 = 200;

269 
	`scheduÀ
();

271 
	}
}

273 
	$ps_¥oc
(* 
aux
)

275 
i
;

276 
i
 = 0; i<
PROC_NUM_MAX
; i++)

278 
¥o˚ss
 *
p
 = &
¥ocs
[
i
];

280 if(
p
->
°©e
 =
PROC_UNUSED
)

283 
	`¥ötk
("pid %dÖpid ", 
p
->
pid
);

285 if(
p
->
∑ª¡
 !
NULL
)

286 
	`¥ötk
("%d", 
p
->
∑ª¡
->
pid
);

288 
	`¥ötk
("non");

290 
	`¥ötk
(" state %dÖrio %d usingÅime %d schedÅime %d\n",

291 
p
->
°©e
,Ö->
¥i‹ôy
,Ö->
time_u£d
,Ö->
time_sched
);

294 
	`exô
(1);

295 
	}
}

297 c⁄° * 
VERSION
;

298 c⁄° * 
AUTHOR
;

299 c⁄° * 
MODIFIER
;

300 
	$u«me_¥oc
(* 
aux
)

302 
	`¥ötk
("SSUOS %s\nmadêby %s\nmodefõd by %s\n", 
VERSION
, 
AUTHOR
, 
MODIFIER
);

304 
	}
}

306 
	$¥öt_pid
(* 
aux
) {

309 
	`¥ötk
("pid = %d ", 
cur_¥o˚ss
->
pid
);

310 
	`¥ötk
("¥iÿ%d ", 
cur_¥o˚ss
->
¥i‹ôy
);

311 
	`¥ötk
("timê%d ", 
cur_¥o˚ss
->
time_¶i˚
);

312 
	`¥ötk
("tick†%d ", 
	`gë_ticks
());

313 
	`¥ötk
("ö %s\n", 
aux
);

315 
	#SLEEP_FREQ
 100

	)

316 
	`¥oc_¶ìp
(
cur_¥o˚ss
->
pid
 * cur_¥o˚ss->pid * 
SLEEP_FREQ
);

318 
	}
}

322 * 
	mcmd
;

323 
	mty≥
;

324 * 
	mfunc
;

325 } 
	tCmdLi°
;

327 
	$shñl_¥oc
(* 
aux
)

329 
CmdLi°
 
cmdli°
[] = {

330 {"shutdown", 0, 
shutdown
},

331 {"ps", 1, 
ps_¥oc
},

332 {"u«me", 1, 
u«me_¥oc
},

334 
	#CMDNUM
 3

	)

336 
buf
[
BUFSIZ
];

338 
cur_¥o˚ss
 -> 
¥i‹ôy
 = 100;

343 
¥oc_func
 *
func
;

344 
i
, 
Àn
;

346 
	`¥ötk
("> ");

349 if–(
Àn
 = 
	`gëTokí
(
buf
, 
BUFSIZ
)) < 0 )

352 if–
	`°∫cmp
(
buf
, "li°", 
BUFSIZ
) == 0)

354 
i
 = 0; i < 
CMDNUM
; i++)

355 
	`¥ötk
("%s\n", 
cmdli°
[
i
].
cmd
);

360 
i
 = 0; i < 
CMDNUM
; i++)

362 if–
	`°∫cmp
(
cmdli°
[
i
].
cmd
, 
buf
, 
BUFSIZ
) == 0)

367 if(
i
 =
CMDNUM
)

369 
	`¥ötk
("Unknow¿comm™d %s\n", 
buf
);

373 if(
cmdli°
[
i
].
ty≥
 == 0)

375 (*
func
)();

376 
func
 = 
cmdli°
[
i
].func;

377 
	`func
();

379 if(
cmdli°
[
i
].
ty≥
 == 1)

381 
cur_¥o˚ss
->
sim∂e_lock
 = 1;

382 
pid
 = 
	`f‹k
(
cmdli°
[
i
].
func
, (*)0x999);

384 
cur_¥o˚ss
->
sim∂e_lock
)

389 
	`¥ötk
("UnknownÅype\n");

393 
	}
}

395 
	$idÀ
(* 
aux
)

398 
	`¥oc_¸óã
(
kî√l1_¥oc
, 
NULL
, NULL);

399 
	`¥oc_¸óã
(
kî√l2_¥oc
, 
NULL
, NULL);

400 
	`¥oc_¸óã
(
shñl_¥oc
, 
NULL
, NULL);

403 if(
cur_¥o˚ss
->
pid
 != 0) {

404 
	`¥ötk
("îr‹ : idÀÖro˚ss'†pid !0\n", 
cur_¥o˚ss
->
pid
);

408  !
	`li°_em±y
(&
d_li°
) )

410 
li°_ñem
 *
e
 = 
	`li°_p›_‰⁄t
(&
d_li°
);

411 
¥o˚ss
 *
p
 = 
	`li°_íåy
(
e
, ¥o˚ss, 
ñem_°©
);

412 
p
->
°©e
 = 
PROC_UNUSED
;

413 
	`li°_ªmove
–&
p
->
ñem_Æl
);

416 
	`scheduÀ
();

418 
	}
}

420 
	$¥oc_¥öt_d©a
()

422 
a
, 
b
, 
c
, 
d
, 
bp
, 
si
, 
di
, 
•
;

425 
__asm__
 
	`__vﬁ©ûe
("mov %%óx ,%0": "=m"(
a
));

427 
__asm__
 
	`__vﬁ©ûe
("mov %ebx ,%eax");

428 
__asm__
 
	`__vﬁ©ûe
("mov %%óx ,%0": "=m"(
b
));

430 
__asm__
 
	`__vﬁ©ûe
("mov %ecx ,%eax");

431 
__asm__
 
	`__vﬁ©ûe
("mov %%óx ,%0": "=m"(
c
));

433 
__asm__
 
	`__vﬁ©ûe
("mov %edx ,%eax");

434 
__asm__
 
	`__vﬁ©ûe
("mov %%óx ,%0": "=m"(
d
));

437 
__asm__
 
	`__vﬁ©ûe
("mov %ebp ,%eax");

438 
__asm__
 
	`__vﬁ©ûe
("mov %%óx ,%0": "=m"(
bp
));

440 
__asm__
 
	`__vﬁ©ûe
("mov %esi ,%eax");

441 
__asm__
 
	`__vﬁ©ûe
("mov %%óx ,%0": "=m"(
si
));

443 
__asm__
 
	`__vﬁ©ûe
("mov %edi ,%eax");

444 
__asm__
 
	`__vﬁ©ûe
("mov %%óx ,%0": "=m"(
di
));

446 
__asm__
 
	`__vﬁ©ûe
("mov %esp ,%eax");

447 
__asm__
 
	`__vﬁ©ûe
("mov %%óx ,%0": "=m"(
•
));

449 
	`¥ötk
( "\neax %oÉbx %oÉcx %oÉdx %o"\

451 , 
a
, 
b
, 
c
, 
d
, 
bp
, 
si
, 
di
, 
•
);

452 
	}
}

454 
	$hexDump
 (*
addr
, 
Àn
) {

455 
i
;

456 
buff
[17];

457 *
pc
 = (*)
addr
;

459 i‡(
Àn
 == 0) {

460 
	`¥ötk
(" ZERO LENGTH\n");

463 i‡(
Àn
 < 0) {

464 
	`¥ötk
(" NEGATIVE LENGTH: %i\n",
Àn
);

469 
i
 = 0; i < 
Àn
; i++) {

472 i‡((
i
 % 16) == 0) {

474 i‡(
i
 != 0)

475 
	`¥ötk
 (" %s\n", 
buff
);

478 
	`¥ötk
 (" %04x ", 
i
);

482 
	`¥ötk
 (" %02x", 
pc
[
i
]);

485 i‡((
pc
[
i
] < 0x20) || (pc[i] > 0x7e))

486 
buff
[
i
 % 16] = '.';

488 
buff
[
i
 % 16] = 
pc
[i];

489 
buff
[(
i
 % 16) + 1] = '\0';

493 (
i
 % 16) != 0) {

494 
	`¥ötk
 (" ");

495 
i
++;

499 
	`¥ötk
 (" %s\n", 
buff
);

500 
	}
}

	@proc/sched.c

1 
	~<li°.h
>

2 
	~<¥oc/sched.h
>

3 
	~<mem/mÆloc.h
>

4 
	~<¥oc/¥oc.h
>

5 
	~<¥oc/swôch.h
>

7 
li°
 
r_li°
;

9 
boﬁ
 
m‹e_¥io
(c⁄° 
li°_ñem
 *
a
, c⁄° li°_ñem *
b
,*
aux
);

11 
¥o˚ss
* 
	$gë_√xt_¥oc
() {

13 
li°_ñem
 *
e
;

15 if(
cur_¥o˚ss
->
°©e
 =
PROC_RUN
)

17 
	`li°_ªmove
(&
cur_¥o˚ss
->
ñem_°©
);

18 
	`li°_push_back
(&
r_li°
, &
cur_¥o˚ss
->
ñem_°©
);

21 
e
 = 
	`li°_begö
 (&
r_li°
);É !
	`li°_íd
 (&r_list);

22 
e
 = 
	`li°_√xt
 (e))

24 
¥o˚ss
* 
p
 = 
	`li°_íåy
(
	`li°_‰⁄t
(&
r_li°
), ¥o˚ss, 
ñem_°©
);

25 if(
p
->
°©e
 =
PROC_RUN
)

26  
p
;

28  
cur_¥o˚ss
;

29 
	}
}

31 
	$scheduÀ
()

33 
¥o˚ss
 *
cur
;

34 
¥o˚ss
 *
√xt
;

36 
	`¥oc_wake
();

38 
√xt
 = 
	`gë_√xt_¥oc
();

39 
cur
 = 
cur_¥o˚ss
;

40 
cur_¥o˚ss
 = 
√xt
;

41 
cur_¥o˚ss
->
time_sched
++;

42 
cur_¥o˚ss
->
time_¶i˚
 = 0;

44 
	`swôch_¥o˚ss
(
cur
, 
√xt
);

45 
	}
}

	@ssulib.c

1 
	~<ssulib.h
>

2 
	~<devi˚/io.h
>

3 
	~<sysˇŒ.h
>

26 
	$°∫cmp
(* 
b1
, * 
b2
, 
Àn
)

28 
i
;

30 
i
 = 0; i < 
Àn
; i++)

32 
c
 = 
b1
[
i
] - 
b2
[i];

33 if(
c
)

34  
c
;

35 if(
b1
[
i
] == 0)

39 
	}
}

41 
	$gëch¨
()

43  
	`ssuªad
();

44 
	}
}

46 
	$gëTokí
(* 
buf
, 
Àn
)

48 * 
°›≥r
 = " \t\n";

49 
off
 = 0;

52 
c
 = -1;

53 *
p
;

54 
c
 == -1)

56 
c
 = 
	`ssuªad
();

60 
p
 = 
°›≥r
;

61 *
p
 != 0)

63 if(*
p
 =
c
)

65 
buf
[
off
++] = 0;

66  
off
;

68 
p
++;

71 
buf
[
off
++] = 
c
;

72 if(
off
 >
Àn
)

74  
off
;

77 
	}
}

	@stdio.c

1 
	~<°dio.h
>

2 
	~<˘y≥.h
>

3 
	~<öây≥s.h
>

4 
	~<round.h
>

5 
	~<°döt.h
>

6 
	~<°rög.h
>

9 
	sv¢¥ötf_aux


11 *
	mp
;

12 
	mÀngth
;

13 
	mmax_Àngth
;

16 
v¢¥ötf_hñ≥r
 (, *);

26 
	$v¢¥ötf
 (*
buf„r
, 
size_t
 
buf_size
, c⁄° *
f‹m©
, 
va_li°
 
¨gs
)

29 
v¢¥ötf_aux
 
aux
;

30 
aux
.
p
 = 
buf„r
;

31 
aux
.
Àngth
 = 0;

32 
aux
.
max_Àngth
 = 
buf_size
 > 0 ? buf_size - 1 : 0;

35 
	`__v¥ötf
 (
f‹m©
, 
¨gs
, 
v¢¥ötf_hñ≥r
, &
aux
);

38 i‡(
buf_size
 > 0)

39 *
aux
.
p
 = '\0';

41  
aux
.
Àngth
;

42 
	}
}

46 
	$v¢¥ötf_hñ≥r
 (
ch
, *
aux_
)

48 
v¢¥ötf_aux
 *
aux
 = 
aux_
;

50 i‡(
aux
->
Àngth
++ <áux->
max_Àngth
)

51 *
aux
->
p
++ = 
ch
;

52 
	}
}

62 
	$¢¥ötf
 (*
buf„r
, 
size_t
 
buf_size
, c⁄° *
f‹m©
, ...)

64 
va_li°
 
¨gs
;

65 
ªtvÆ
;

67 
	`va_°¨t
 (
¨gs
, 
f‹m©
);

68 
ªtvÆ
 = 
	`v¢¥ötf
 (
buf„r
, 
buf_size
, 
f‹m©
, 
¨gs
);

69 
	`va_íd
 (
¨gs
);

71  
ªtvÆ
;

72 
	}
}

79 
	$¥ötf
 (c⁄° *
f‹m©
, ...)

82 
ªtvÆ
;

88  
ªtvÆ
;

89 
	}
}

94 
	s¥ötf_c⁄vîsi⁄


99 
	mMINUS
 = 1 << 0,

100 
	mPLUS
 = 1 << 1,

101 
	mSPACE
 = 1 << 2,

102 
	mPOUND
 = 1 << 3,

103 
	mZERO
 = 1 << 4,

104 
	mGROUP
 = 1 << 5

106 
	mÊags
;

109 
	mwidth
;

113 
	m¥ecisi⁄
;

118 
	mCHAR
 = 1,

119 
	mSHORT
 = 2,

120 
	mINT
 = 3,

121 
	mINTMAX
 = 4,

122 
	mLONG
 = 5,

123 
	mLONGLONG
 = 6,

124 
	mPTRDIFFT
 = 7,

125 
	mSIZET
 = 8

127 
	mty≥
;

130 
	söãgî_ba£


132 
	mba£
;

133 c⁄° *
	mdigôs
;

134 
	mx
;

135 
	mgroup
;

138 c⁄° 
öãgî_ba£
 
	gba£_d
 = {10, "0123456789", 0, 3};

139 c⁄° 
öãgî_ba£
 
	gba£_o
 = {8, "01234567", 0, 3};

140 c⁄° 
öãgî_ba£
 
	gba£_x
 = {16, "0123456789abcdef", 'x', 4};

141 c⁄° 
öãgî_ba£
 
	gba£_X
 = {16, "0123456789ABCDEF", 'X', 4};

143 c⁄° *
∑r£_c⁄vîsi⁄
 (c⁄° *
f‹m©
,

144 
¥ötf_c⁄vîsi⁄
 *,

145 
va_li°
 *);

146 
f‹m©_öãgî
 (
vÆue
, 
boﬁ
 
is_sig√d
, boﬁ 
√g©ive
,

147 c⁄° 
öãgî_ba£
 *,

148 c⁄° 
¥ötf_c⁄vîsi⁄
 *,

149 (*
ouçut
Ë(, *), *
aux
);

150 
	`ouçut_dup
 (
ch
, 
size_t
 
˙t
,

151 (*
ouçut
Ë(, *), *
aux
);

152 
	`f‹m©_°rög
 (c⁄° *
°rög
, 
Àngth
,

153 
¥ötf_c⁄vîsi⁄
 *,

154 (*
ouçut
Ë(, *), *
aux
);

157 
	`__v¥ötf
 (c⁄° *
f‹m©
, 
va_li°
 
¨gs
,

158 (*
ouçut
Ë(, *), *
aux
)

160 ; *
f‹m©
 != '\0'; format++)

162 
¥ötf_c⁄vîsi⁄
 
c
;

165 i‡(*
f‹m©
 != '%')

167 
	`ouçut
 (*
f‹m©
, 
aux
);

170 
f‹m©
++;

173 i‡(*
f‹m©
 == '%')

175 
	`ouçut
 ('%', 
aux
);

180 
f‹m©
 = 
	`∑r£_c⁄vîsi⁄
 (f‹m©, &
c
, &
¨gs
);

183 *
f‹m©
)

189 
ötmax_t
 
vÆue
;

191 
c
.
ty≥
)

193 
CHAR
:

194 
vÆue
 = (sig√d Ë
	`va_¨g
 (
¨gs
, );

196 
SHORT
:

197 
vÆue
 = (Ë
	`va_¨g
 (
¨gs
, );

199 
INT
:

200 
vÆue
 = 
	`va_¨g
 (
¨gs
, );

202 
INTMAX
:

203 
vÆue
 = 
	`va_¨g
 (
¨gs
, 
ötmax_t
);

205 
LONG
:

206 
vÆue
 = 
	`va_¨g
 (
¨gs
, );

208 
LONGLONG
:

209 
vÆue
 = 
	`va_¨g
 (
¨gs
, );

211 
PTRDIFFT
:

212 
vÆue
 = 
	`va_¨g
 (
¨gs
, 
±rdiff_t
);

214 
SIZET
:

215 
vÆue
 = 
	`va_¨g
 (
¨gs
, 
size_t
);

216 i‡(
vÆue
 > 
SIZE_MAX
 / 2)

217 
vÆue
 = vÆuê- 
SIZE_MAX
 - 1;

223 
	`f‹m©_öãgî
 (
vÆue
 < 0 ? -value : value,

224 
åue
, 
vÆue
 < 0, &
ba£_d
, &
c
, 
ouçut
, 
aux
);

234 
uötmax_t
 
vÆue
;

235 c⁄° 
öãgî_ba£
 *
b
;

237 
c
.
ty≥
)

239 
CHAR
:

240 
vÆue
 = (Ë
	`va_¨g
 (
¨gs
, );

242 
SHORT
:

243 
vÆue
 = (Ë
	`va_¨g
 (
¨gs
, );

245 
INT
:

246 
vÆue
 = 
	`va_¨g
 (
¨gs
, );

248 
INTMAX
:

249 
vÆue
 = 
	`va_¨g
 (
¨gs
, 
uötmax_t
);

251 
LONG
:

252 
vÆue
 = 
	`va_¨g
 (
¨gs
, );

254 
LONGLONG
:

255 
vÆue
 = 
	`va_¨g
 (
¨gs
, );

257 
PTRDIFFT
:

258 
vÆue
 = 
	`va_¨g
 (
¨gs
, 
±rdiff_t
);

259 #i‡
UINTMAX_MAX
 !
PTRDIFF_MAX


260 
vÆue
 &((
uötmax_t
Ë
PTRDIFF_MAX
 << 1) | 1;

263 
SIZET
:

264 
vÆue
 = 
	`va_¨g
 (
¨gs
, 
size_t
);

270 *
f‹m©
)

272 'o': 
b
 = &
ba£_o
; ;

273 'u': 
b
 = &
ba£_d
; ;

274 'x': 
b
 = &
ba£_x
; ;

275 'X': 
b
 = &
ba£_X
; ;

280 
	`f‹m©_öãgî
 (
vÆue
, 
Ál£
, fÆ£, 
b
, &
c
, 
ouçut
, 
aux
);

287 
ch
 = 
	`va_¨g
 (
¨gs
, );

288 
	`f‹m©_°rög
 (&
ch
, 1, &
c
, 
ouçut
, 
aux
);

295 c⁄° *
s
 = 
	`va_¨g
 (
¨gs
, *);

296 i‡(
s
 =
NULL
)

297 
s
 = "(null)";

302 
	`f‹m©_°rög
 (
s
, 
	`°∫Àn
 (s, 
c
.
¥ecisi⁄
), &c, 
ouçut
, 
aux
);

310 *
p
 = 
	`va_¨g
 (
¨gs
, *);

312 
c
.
Êags
 = 
POUND
;

313 
	`f‹m©_öãgî
 ((
uöçå_t
Ë
p
, 
Ál£
, false,

314 &
ba£_x
, &
c
, 
ouçut
, 
aux
);

326 
	`__¥ötf
 ("<<nÿ%%%¯ö kî√l>>", 
ouçut
, 
aux
, *
f‹m©
);

330 
	`__¥ötf
 ("<<nÿ%%%¯c⁄vîsi⁄>>", 
ouçut
, 
aux
, *
f‹m©
);

334 
	}
}

341 
	$∑r£_c⁄vîsi⁄
 (c⁄° *
f‹m©
, 
¥ötf_c⁄vîsi⁄
 *
c
,

342 
va_li°
 *
¨gs
)

345 
c
->
Êags
 = 0;

348 *
f‹m©
++)

351 
c
->
Êags
 |
MINUS
;

354 
c
->
Êags
 |
PLUS
;

357 
c
->
Êags
 |
SPACE
;

360 
c
->
Êags
 |
POUND
;

363 
c
->
Êags
 |
ZERO
;

366 
c
->
Êags
 |
GROUP
;

369 
f‹m©
--;

370 
nŸ_a_Êag
;

373 
nŸ_a_Êag
:

374 i‡(
c
->
Êags
 & 
MINUS
)

375 
c
->
Êags
 &~
ZERO
;

376 i‡(
c
->
Êags
 & 
PLUS
)

377 
c
->
Êags
 &~
SPACE
;

380 
c
->
width
 = 0;

381 i‡(*
f‹m©
 == '*')

383 
f‹m©
++;

384 
c
->
width
 = 
	`va_¨g
 (*
¨gs
, );

388 ; 
	`isdigô
 (*
f‹m©
); format++)

389 
c
->
width
 = c->width * 10 + *
f‹m©
 - '0';

391 i‡(
c
->
width
 < 0)

393 
c
->
width
 = -c->width;

394 
c
->
Êags
 |
MINUS
;

398 
c
->
¥ecisi⁄
 = -1;

399 i‡(*
f‹m©
 == '.')

401 
f‹m©
++;

402 i‡(*
f‹m©
 == '*')

404 
f‹m©
++;

405 
c
->
¥ecisi⁄
 = 
	`va_¨g
 (*
¨gs
, );

409 
c
->
¥ecisi⁄
 = 0;

410 ; 
	`isdigô
 (*
f‹m©
); format++)

411 
c
->
¥ecisi⁄
 = c->¥ecisi⁄ * 10 + *
f‹m©
 - '0';

413 i‡(
c
->
¥ecisi⁄
 < 0)

414 
c
->
¥ecisi⁄
 = -1;

416 i‡(
c
->
¥ecisi⁄
 >= 0)

417 
c
->
Êags
 &~
ZERO
;

420 
c
->
ty≥
 = 
INT
;

421 *
f‹m©
++)

424 i‡(*
f‹m©
 == 'h')

426 
f‹m©
++;

427 
c
->
ty≥
 = 
CHAR
;

430 
c
->
ty≥
 = 
SHORT
;

434 
c
->
ty≥
 = 
INTMAX
;

438 i‡(*
f‹m©
 == 'l')

440 
f‹m©
++;

441 
c
->
ty≥
 = 
LONGLONG
;

444 
c
->
ty≥
 = 
LONG
;

448 
c
->
ty≥
 = 
PTRDIFFT
;

452 
c
->
ty≥
 = 
SIZET
;

456 
f‹m©
--;

460  
f‹m©
;

461 
	}
}

471 
f‹m©_öãgî
 (
vÆue
, 
boﬁ
 
is_sig√d
, boﬁ 
√g©ive
,

472 c⁄° 
öãgî_ba£
 *
b
,

473 c⁄° 
¥ötf_c⁄vîsi⁄
 *
c
,

474 (*
ouçut
Ë(, *), *
aux
)

476 
buf
[64], *
˝
;

477 
x
;

478 
sign
;

479 
¥ecisi⁄
;

480 
∑d_˙t
;

481 
digô_˙t
;

486 
sign
 = 0;

487 i‡(
is_sig√d
)

489 i‡(
c
->
Êags
 & 
PLUS
)

490 
sign
 = 
√g©ive
 ? '-' : '+';

491 i‡(
c
->
Êags
 & 
SPACE
)

492 
sign
 = 
√g©ive
 ? '-' : ' ';

493 i‡(
√g©ive
)

494 
sign
 = '-';

500 
x
 = (
c
->
Êags
 & 
POUND
Ë&& 
vÆue
 ? 
b
->x : 0;

505 
˝
 = 
buf
;

506 
digô_˙t
 = 0;

507 
vÆue
 > 0)

509 i‡((
c
->
Êags
 & 
GROUP
Ë&& 
digô_˙t
 > 0 && digô_˙à% 
b
->
group
 == 0)

510 *
˝
++ = ',';

511 *
˝
++ = 
b
->
digôs
[
vÆue
 % b->
ba£
];

512 
vÆue
 /
b
->
ba£
;

513 
digô_˙t
++;

521 
¥ecisi⁄
 = 
c
->precision < 0 ? 1 : c->precision;

522 
˝
 - 
buf
 < 
¥ecisi⁄
 && cp < buf +  buf - 1)

523 *
˝
++ = '0';

524 i‡((
c
->
Êags
 & 
POUND
Ë&& 
b
->
ba£
 =8 && (
˝
 =
buf
 || cp[-1] != '0'))

525 *
˝
++ = '0';

528 
∑d_˙t
 = 
c
->
width
 - (
˝
 - 
buf
Ë- (
x
 ? 2 : 0Ë- (
sign
 != 0);

529 i‡(
∑d_˙t
 < 0)

530 
∑d_˙t
 = 0;

533 i‡((
c
->
Êags
 & (
MINUS
 | 
ZERO
)) == 0)

534 
	`ouçut_dup
 (' ', 
∑d_˙t
, 
ouçut
, 
aux
);

535 i‡(
sign
)

536 
	`ouçut
 (
sign
, 
aux
);

537 i‡(
x
)

539 
	`ouçut
 ('0', 
aux
);

540 
	`ouçut
 (
x
, 
aux
);

542 i‡(
c
->
Êags
 & 
ZERO
)

543 
	`ouçut_dup
 ('0', 
∑d_˙t
, 
ouçut
, 
aux
);

544 
˝
 > 
buf
)

545 
	`ouçut
 (*--
˝
, 
aux
);

546 i‡(
c
->
Êags
 & 
MINUS
)

547 
	`ouçut_dup
 (' ', 
∑d_˙t
, 
ouçut
, 
aux
);

548 
	}
}

552 
ouçut_dup
 (
ch
, 
size_t
 
˙t
, (*
ouçut
Ë(, *), *
aux
)

554 
˙t
-- > 0)

555 
	`ouçut
 (
ch
, 
aux
);

556 
	}
}

562 
f‹m©_°rög
 (c⁄° *
°rög
, 
Àngth
,

563 
¥ötf_c⁄vîsi⁄
 *
c
,

564 (*
ouçut
Ë(, *), *
aux
)

566 
i
;

567 i‡(
c
->
width
 > 
Àngth
 && (c->
Êags
 & 
MINUS
) == 0)

568 
	`ouçut_dup
 (' ', 
c
->
width
 - 
Àngth
, 
ouçut
, 
aux
);

569 
i
 = 0; i < 
Àngth
; i++)

570 
	`ouçut
 (
°rög
[
i
], 
aux
);

571 i‡(
c
->
width
 > 
Àngth
 && (c->
Êags
 & 
MINUS
) != 0)

572 
	`ouçut_dup
 (' ', 
c
->
width
 - 
Àngth
, 
ouçut
, 
aux
);

573 
	}
}

578 
__¥ötf
 (c⁄° *
f‹m©
,

579 (*
ouçut
Ë(, *), *
aux
, ...)

581 
va_li°
 
¨gs
;

583 
	`va_°¨t
 (
¨gs
, 
aux
);

584 
	`__v¥ötf
 (
f‹m©
, 
¨gs
, 
ouçut
, 
aux
);

585 
	`va_íd
 (
¨gs
);

586 
	}
}

594 
	$hex_dump
 (
uöçå_t
 
ofs
, c⁄° *
buf_
, 
size_t
 
size
, 
boﬁ
 
ascii
)

596 c⁄° 
uöt8_t
 *
buf
 = 
buf_
;

597 c⁄° 
size_t
 
≥r_löe
 = 16;

599 
size
 > 0)

601 
size_t
 
°¨t
, 
íd
, 
n
;

602 
size_t
 
i
;

605 
°¨t
 = 
ofs
 % 
≥r_löe
;

606 
íd
 = 
≥r_löe
;

607 i‡(
íd
 - 
°¨t
 > 
size
)

608 
íd
 = 
°¨t
 + 
size
;

609 
n
 = 
íd
 - 
°¨t
;

612 
	`¥ötf
 ("%08jx ", (
uötmax_t
Ë
	`ROUND_DOWN
 (
ofs
, 
≥r_löe
));

613 
i
 = 0; i < 
°¨t
; i++)

614 
	`¥ötf
 (" ");

615 ; 
i
 < 
íd
; i++)

616 
	`¥ötf
 ("%02hhx%c",

617 
buf
[
i
 - 
°¨t
], i =
≥r_löe
 / 2 - 1? '-' : ' ');

618 i‡(
ascii
)

620 ; 
i
 < 
≥r_löe
; i++)

621 
	`¥ötf
 (" ");

622 
	`¥ötf
 ("|");

623 
i
 = 0; i < 
°¨t
; i++)

624 
	`¥ötf
 (" ");

625 ; 
i
 < 
íd
; i++)

626 
	`¥ötf
 ("%c",

627 
	`i•röt
 (
buf
[
i
 - 
°¨t
]) ? buf[i - start] : '.');

628 ; 
i
 < 
≥r_löe
; i++)

629 
	`¥ötf
 (" ");

630 
	`¥ötf
 ("|");

632 
	`¥ötf
 ("\n");

634 
ofs
 +
n
;

635 
buf
 +
n
;

636 
size
 -
n
;

638 
	}
}

643 
	$¥öt_hum™_ªadabÀ_size
 (
uöt64_t
 
size
)

645 i‡(
size
 == 1)

646 
	`¥ötf
 ("1 byte");

649 c⁄° *
Á˘‹s
[] = {"byãs", "kB", "MB", "GB", "TB", 
NULL
};

650 c⁄° **
Â
;

652 
Â
 = 
Á˘‹s
; 
size
 >1024 && fp[1] !
NULL
; fp++)

653 
size
 /= 1024;

654 
	`¥ötf
 ("%"
PRIu64
" %s", 
size
, *
Â
);

656 
	}
}

	@string.c

1 
	~<°rög.h
>

2 
	~<debug.h
>

3 
	~<ty≥.h
>

7 
	$mem˝y
 (*
d°_
, c⁄° *
§c_
, 
size_t
 
size
)

9 *
d°
 = 
d°_
;

10 c⁄° *
§c
 = 
§c_
;

15 
size
-- > 0)

16 *
d°
++ = *
§c
++;

18  
d°_
;

19 
	}
}

24 
	$memmove
 (*
d°_
, c⁄° *
§c_
, 
size_t
 
size
)

26 *
d°
 = 
d°_
;

27 c⁄° *
§c
 = 
§c_
;

32 i‡(
d°
 < 
§c
)

34 
size
-- > 0)

35 *
d°
++ = *
§c
++;

39 
d°
 +
size
;

40 
§c
 +
size
;

41 
size
-- > 0)

42 *--
d°
 = *--
§c
;

45  
d°
;

46 
	}
}

53 
	$memcmp
 (c⁄° *
a_
, c⁄° *
b_
, 
size_t
 
size
)

55 c⁄° *
a
 = 
a_
;

56 c⁄° *
b
 = 
b_
;

61 ; 
size
-- > 0; 
a
++, 
b
++)

62 i‡(*
a
 !*
b
)

63  *
a
 > *
b
 ? +1 : -1;

65 
	}
}

73 
	$°rcmp
 (c⁄° *
a_
, c⁄° *
b_
)

75 c⁄° *
a
 = (c⁄° *Ë
a_
;

76 c⁄° *
b
 = (c⁄° *Ë
b_
;

81 *
a
 !'\0' && *®=*
b
)

83 
a
++;

84 
b
++;

87  *
a
 < *
b
 ? -1 : *a > *b;

88 
	}
}

94 
	$memchr
 (c⁄° *
block_
, 
ch_
, 
size_t
 
size
)

96 c⁄° *
block
 = 
block_
;

97 
ch
 = 
ch_
;

101 ; 
size
-- > 0; 
block
++)

102 i‡(*
block
 =
ch
)

103  (*Ë
block
;

105  
NULL
;

106 
	}
}

113 
	$°rchr
 (c⁄° *
°rög
, 
c_
)

115 
c
 = 
c_
;

120 i‡(*
°rög
 =
c
)

121  (*Ë
°rög
;

122 i‡(*
°rög
 == '\0')

123  
NULL
;

125 
°rög
++;

126 
	}
}

130 
size_t


131 
	$°rc•n
 (c⁄° *
°rög
, c⁄° *
°›
)

133 
size_t
 
Àngth
;

135 
Àngth
 = 0; 
°rög
[length] != '\0';Üength++)

136 i‡(
	`°rchr
 (
°›
, 
°rög
[
Àngth
]Ë!
NULL
)

138  
Àngth
;

139 
	}
}

145 
	$°Ωbrk
 (c⁄° *
°rög
, c⁄° *
°›
)

147 ; *
°rög
 != '\0'; string++)

148 i‡(
	`°rchr
 (
°›
, *
°rög
Ë!
NULL
)

149  (*Ë
°rög
;

150  
NULL
;

151 
	}
}

156 
	$°ºchr
 (c⁄° *
°rög
, 
c_
)

158 
c
 = 
c_
;

159 c⁄° *
p
 = 
NULL
;

161 ; *
°rög
 != '\0'; string++)

162 i‡(*
°rög
 =
c
)

163 
p
 = 
°rög
;

164  (*Ë
p
;

165 
	}
}

169 
size_t


170 
	$°r•n
 (c⁄° *
°rög
, c⁄° *
skù
)

172 
size_t
 
Àngth
;

174 
Àngth
 = 0; 
°rög
[length] != '\0';Üength++)

175 i‡(
	`°rchr
 (
skù
, 
°rög
[
Àngth
]Ë=
NULL
)

177  
Àngth
;

178 
	}
}

184 
	$°r°r
 (c⁄° *
hay°ack
, c⁄° *
√edÀ
)

186 
size_t
 
hay°ack_Àn
 = 
	`°æí
 (
hay°ack
);

187 
size_t
 
√edÀ_Àn
 = 
	`°æí
 (
√edÀ
);

189 i‡(
hay°ack_Àn
 >
√edÀ_Àn
)

191 
size_t
 
i
;

193 
i
 = 0; i <
hay°ack_Àn
 - 
√edÀ_Àn
; i++)

194 i‡(!
	`memcmp
 (
hay°ack
 + 
i
, 
√edÀ
, 
√edÀ_Àn
))

195  (*Ë
hay°ack
 + 
i
;

198  
NULL
;

199 
	}
}

235 
	$°πok_r
 (*
s
, c⁄° *
dñimôîs
, **
ßve_±r
)

237 *
tokí
;

244 i‡(
s
 =
NULL
)

245 
s
 = *
ßve_±r
;

249 
	`°rchr
 (
dñimôîs
, *
s
Ë!
NULL
)

254 i‡(*
s
 == '\0')

256 *
ßve_±r
 = 
s
;

257  
NULL
;

260 
s
++;

264 
tokí
 = 
s
;

265 
	`°rchr
 (
dñimôîs
, *
s
Ë=
NULL
)

266 
s
++;

267 i‡(*
s
 != '\0')

269 *
s
 = '\0';

270 *
ßve_±r
 = 
s
 + 1;

273 *
ßve_±r
 = 
s
;

274  
tokí
;

275 
	}
}

279 
	$mem£t
 (*
d°_
, 
vÆue
, 
size_t
 
size
)

281 *
d°
 = 
d°_
;

285 
size
-- > 0)

286 *
d°
++ = 
vÆue
;

288  
d°_
;

289 
	}
}

306 
size_t


307 
	$°∫Àn
 (c⁄° *
°rög
, 
size_t
 
maxÀn
)

309 
size_t
 
Àngth
;

311 
Àngth
 = 0; 
°rög
[Àngth] !'\0' &&Üígth < 
maxÀn
;Üength++)

313  
Àngth
;

314 
	}
}

325 
size_t


326 
	$°æ˝y
 (*
d°
, c⁄° *
§c
, 
size_t
 
size
)

328 
size_t
 
§c_Àn
;

333 
§c_Àn
 = 
	`°æí
 (
§c
);

334 i‡(
size
 > 0)

336 
size_t
 
d°_Àn
 = 
size
 - 1;

337 i‡(
§c_Àn
 < 
d°_Àn
)

338 
d°_Àn
 = 
§c_Àn
;

339 
	`mem˝y
 (
d°
, 
§c
, 
d°_Àn
);

340 
d°
[
d°_Àn
] = '\0';

342  
§c_Àn
;

343 
	}
}

355 
size_t


356 
	$°æˇt
 (*
d°
, c⁄° *
§c
, 
size_t
 
size
)

358 
size_t
 
§c_Àn
, 
d°_Àn
;

363 
§c_Àn
 = 
	`°æí
 (
§c
);

364 
d°_Àn
 = 
	`°æí
 (
d°
);

365 i‡(
size
 > 0 && 
d°_Àn
 < size)

367 
size_t
 
c›y_˙t
 = 
size
 - 
d°_Àn
 - 1;

368 i‡(
§c_Àn
 < 
c›y_˙t
)

369 
c›y_˙t
 = 
§c_Àn
;

370 
	`mem˝y
 (
d°
 + 
d°_Àn
, 
§c
, 
c›y_˙t
);

371 
d°
[
d°_Àn
 + 
c›y_˙t
] = '\0';

373  
§c_Àn
 + 
d°_Àn
;

374 
	}
}

	@synch.c

1 
	~<synch.h
>

2 
	~<öãºu±.h
>

3 
	~<¥oc/¥oc.h
>

4 
	~<devi˚/c⁄sﬁe.h
>

6 #i‚de‡
ASSERT


7 
	#ASSERT
(
COND
Ë;

	)

21 
	$£ma_öô
(
£m≠h‹e
 *
£ma
, 
vÆue
)

23 
	`ASSERT
 (
£ma
 !
NULL
);

25 
£ma
->
vÆue
 = value;

26 
	`li°_öô
(&
£ma
->
waôîs
);

27 
	}
}

38 
	$£ma_down
 (
£m≠h‹e
 *
£ma
)

40 
öå_Àvñ
 
ﬁd_Àvñ
;

42 
	`ASSERT
 (
£ma
 !
NULL
);

43 
	`ASSERT
 (!
	`öå_c⁄ãxt
 ());

45 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
 ();

46 
£ma
->
vÆue
 == 0)

49 
	`li°_push_back
 (&
£ma
->
waôîs
, &
cur_¥o˚ss
->
ñem_°©
);

50 
	`¥oc_block
 ();

52 
£ma
->
vÆue
--;

53 
	`öå_£t_Àvñ
 (
ﬁd_Àvñ
);

54 
	}
}

61 
boﬁ


62 
	$£ma_åy_down
 (
£m≠h‹e
 *
£ma
)

64 
öå_Àvñ
 
ﬁd_Àvñ
;

66 
boﬁ
 
suc˚ss
;

68 
	`ASSERT
 (
£ma
 !
NULL
);

70 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
 ();

71 i‡(
£ma
->
vÆue
 > 0)

73 
£ma
->
vÆue
--;

74 
suc˚ss
 = 
åue
;

77 
suc˚ss
 = 
Ál£
;

78 
	`öå_£t_Àvñ
 (
ﬁd_Àvñ
);

80  
suc˚ss
;

81 
	}
}

88 
	$£ma_up
 (
£m≠h‹e
 *
£ma
)

90 
öå_Àvñ
 
ﬁd_Àvñ
;

92 
	`ASSERT
 (
£ma
 !
NULL
);

94 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
 ();

95 i‡(!
	`li°_em±y
 (&
£ma
->
waôîs
))

96 
	`¥oc_unblock
 (
	`li°_íåy
 (
	`li°_p›_‰⁄t
 (&
£ma
->
waôîs
),

97 
¥o˚ss
, 
ñem_°©
));

98 
£ma
->
vÆue
++;

99 
	`öå_£t_Àvñ
 (
ﬁd_Àvñ
);

100 
	}
}

101 
£ma_ã°_hñ≥r
 (*
£ma_
);

107 
	$£ma_£lf_ã°
 ()

109 
£m≠h‹e
 
£ma
[2];

110 
i
;

112 
	`¥ötk
 ("Testing semaphores...");

113 
	`£ma_öô
 (&
£ma
[0], 0);

114 
	`£ma_öô
 (&
£ma
[1], 0);

115 
	`¥oc_¸óã
 (
£ma_ã°_hñ≥r
, 
NULL
, &
£ma
);

116 
i
 = 0; i < 10; i++)

118 
	`£ma_up
 (&
£ma
[0]);

119 
	`£ma_down
 (&
£ma
[1]);

121 
	`¥ötk
 ("done.\n");

122 
	}
}

126 
	$£ma_ã°_hñ≥r
 (*
£ma_
)

128 
£m≠h‹e
 *
£ma
 = 
£ma_
;

129 
i
;

130 
cur_¥o˚ss
 -> 
¥i‹ôy
 = 100;

132 
i
 = 0; i < 10; i++)

134 
	`£ma_down
 (&
£ma
[0]);

135 
	`£ma_up
 (&
£ma
[1]);

137 
	}
}

156 
	$lock_öô
 (
lock
 *lock)

158 
	`ASSERT
 (
lock
 !
NULL
);

160 
lock
->
hﬁdî
 = 
NULL
;

161 
	`£ma_öô
 (&
lock
->
£m≠h‹e
, 1);

162 
	}
}

173 
	$lock_acquúe
 (
lock
 *lock)

175 
	`ASSERT
 (
lock
 !
NULL
);

176 
	`ASSERT
 (!
	`öå_c⁄ãxt
 ());

177 
	`ASSERT
 (!
	`lock_hñd_by_cuºít_thªad
 (
lock
));

179 
	`£ma_down
 (&
lock
->
£m≠h‹e
);

180 
lock
->
hﬁdî
 = 
cur_¥o˚ss
;

181 
	}
}

189 
boﬁ


190 
	$lock_åy_acquúe
 (
lock
 *lock)

192 
boﬁ
 
suc˚ss
;

194 
	`ASSERT
 (
lock
 !
NULL
);

195 
	`ASSERT
 (!
	`lock_hñd_by_cuºít_thªad
 (
lock
));

197 
suc˚ss
 = 
	`£ma_åy_down
 (&
lock
->
£m≠h‹e
);

198 i‡(
suc˚ss
)

199 
lock
->
hﬁdî
 = 
cur_¥o˚ss
;

200  
suc˚ss
;

201 
	}
}

209 
	$lock_ªÀa£
 (
lock
 *lock)

211 
	`ASSERT
 (
lock
 !
NULL
);

212 
	`ASSERT
 (
	`lock_hñd_by_cuºít_thªad
 (
lock
));

214 
lock
->
hﬁdî
 = 
NULL
;

215 
	`£ma_up
 (&
lock
->
£m≠h‹e
);

216 
	}
}

221 
boﬁ


222 
	$lock_hñd_by_cuºít_thªad
 (c⁄° 
lock
 *lock)

224 
	`ASSERT
 (
lock
 !
NULL
);

226  
lock
->
hﬁdî
 =
cur_¥o˚ss
;

227 
	}
}

	@vsprintk.c

1 
	~<°d¨g.h
>

3 
	#ZEROPAD
 1

	)

4 
	#SIGN
 2

	)

5 
	#PLUS
 4

	)

6 
	#SPACE
 8

	)

7 
	#LEFT
 16

	)

8 
	#SPECIAL
 32

	)

9 
	#SMALL
 64

	)

11 
	#is_digô
(
c
Ë–(cË> '0' && (cË< '9' )

	)

13 
	#do_div
(
n
,
ba£
) \

15 
__ªs
; \

16 
__ªs
 = (()
n
Ë% ()
ba£
; \

17 
n
 = ((ÍË/ ()
ba£
; \

18 
__ªs
; \

19 })

	)

21 
	$°æí
(c⁄° *
°rög
)

23 c⁄° *
ªt
 = 
°rög
;

25 *
°rög
++);

27  
°rög
 - 1 - 
ªt
;

28 
	}
}

30 *
	$numbî
(* 
°r
, 
num
, 
ba£
, 
size
, 
¥ecisi⁄
, 
ty≥
)

32 
c
,
sign
,
tmp
[36];

33 c⁄° *
digôs
="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";

34 
i
;

36 i‡(
ty≥
&
SMALL
Ë
digôs
="0123456789abcdefghijklmnopqrstuvwxyz";

37 i‡(
ty≥
&
LEFT
Ëty≥ &~
ZEROPAD
;

38 i‡(
ba£
<2 || base>36)

40 
c
 = (
ty≥
 & 
ZEROPAD
) ? '0' : ' ' ;

41 i‡(
ty≥
&
SIGN
 && 
num
<0) {

42 
sign
='-';

43 
num
 = -num;

45 
sign
=(
ty≥
&
PLUS
Ë? '+' : (—y≥&
SPACE
) ? ' ' : 0);

46 i‡(
sign
Ë
size
--;

47 i‡(
ty≥
&
SPECIAL
)

48 i‡(
ba£
==16Ë
size
 -= 2;

49 i‡(
ba£
==8Ë
size
--;

50 
i
=0;

51 i‡(
num
==0)

52 
tmp
[
i
++]='0';

53 
num
!=0)

54 
tmp
[
i
++]=
digôs
[
	`do_div
(
num
,
ba£
)];

55 i‡(
i
>
¥ecisi⁄
)Örecision=i;

56 
size
 -
¥ecisi⁄
;

57 i‡(!(
ty≥
&(
ZEROPAD
+
LEFT
)))

58 
size
-->0)

59 *
°r
++ = ' ';

60 i‡(
sign
)

61 *
°r
++ = 
sign
;

62 i‡(
ty≥
&
SPECIAL
)

63 i‡(
ba£
==8)

64 *
°r
++ = '0';

65 i‡(
ba£
==16) {

66 *
°r
++ = '0';

67 *
°r
++ = 
digôs
[33];

69 i‡(!(
ty≥
&
LEFT
))

70 
size
-->0)

71 *
°r
++ = 
c
;

72 
i
<
¥ecisi⁄
--)

73 *
°r
++ = '0';

74 
i
-->0)

75 *
°r
++ = 
tmp
[
i
];

76 
size
-->0)

77 *
°r
++ = ' ';

78  
°r
;

79 
	}
}

81 
	$skù_©oi
(c⁄° **
s
)

83 
i
=0;

85 
	`is_digô
(**
s
))

87 
i
 = i*10 + *((*
s
)++) - '0';

89  
i
;

90 
	}
}

92 
	$v•rötk
(*
buf
, c⁄° *
fmt
, 
va_li°
 
¨gs
)

94 
Àn
;

95 
i
;

97 
quÆifõr
;

98 
¥ecisi⁄
;

99 
fõld_width
;

101 *
°r
;

102 *
s
;

103 *
ù
;

105 
Êags
;

107 
°r
 = 
buf
 ; *
fmt
 ; ++fmt)

109 if(*
fmt
 != '%')

111 *
°r
++ = *
fmt
;

115 
Êags
 = 0;

116 
ª≥©
:

117 ++
fmt
;

118 *
fmt
)

120 '-': 
Êags
 |
LEFT
; 
ª≥©
;

121 '+': 
Êags
 |
PLUS
; 
ª≥©
;

122 ' ': 
Êags
 |
SPACE
; 
ª≥©
;

123 '#': 
Êags
 |
SPECIAL
 ; 
ª≥©
;

124 '0': 
Êags
 |
ZEROPAD
; 
ª≥©
;

127 
fõld_width
 = -1;

129 if(
	`is_digô
(*
fmt
))

131 
fõld_width
 = 
	`skù_©oi
(&
fmt
);

133 if(*
fmt
 == '*')

135 
fõld_width
 = 
	`va_¨g
(
¨gs
, );

136 if(
fõld_width
 < 0)

138 
fõld_width
 = -field_width;

139 
Êags
 |
LEFT
;

143 
¥ecisi⁄
 = -1;

145 if(*
fmt
 == '.')

147 ++
fmt
;

148 if(
	`is_digô
(*
fmt
))

150 
¥ecisi⁄
 = 
	`skù_©oi
(&
fmt
);

152 if(*
fmt
 == '*')

154 
¥ecisi⁄
 = 
	`va_¨g
(
¨gs
, );

156 if(
¥ecisi⁄
 < 0)

158 
¥ecisi⁄
 = 0;

162 
quÆifõr
 = -1;

164 if(*
fmt
 == 'h' || *fmt == 'l' || *fmt == 'L')

166 
quÆifõr
 = *
fmt
;

167 ++
fmt
;

170 *
fmt
)

174 if(!(
Êags
 & 
LEFT
))

176 --
fõld_width
 > 0)

178 *
°r
++ = ' ';

181 *
°r
++ = ()
	`va_¨g
(
¨gs
, );

182 --
fõld_width
 > 0)

184 *
°r
++ = ' ';

190 
s
 = 
	`va_¨g
(
¨gs
, *);

191 
Àn
 = 
	`°æí
(
s
);

192 if(
¥ecisi⁄
 < 0)

194 
¥ecisi⁄
 = 
Àn
;

196 if(
Àn
 > 
¥ecisi⁄
)

198 
Àn
 = 
¥ecisi⁄
;

201 if(!(
Êags
 & 
LEFT
))

203 
Àn
 < 
fõld_width
--)

205 *
°r
++ = ' ';

208 
i
 = 0 ; i < 
Àn
 ; ++i)

210 *
°r
++ = *
s
++;

213 
Àn
 < 
fõld_width
--)

215 *
°r
++ = ' ';

221 
°r
 = 
	`numbî
(°r, 
	`va_¨g
(
¨gs
, ), 8, 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

226 if(
fõld_width
 == -1)

228 
fõld_width
 = 8;

229 
Êags
 |
ZEROPAD
;

231 
°r
 = 
	`numbî
(°r, ()
	`va_¨g
(
¨gs
, *), 16, 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

236 
Êags
 |
SMALL
;

240 
°r
 = 
	`numbî
(°r, 
	`va_¨g
(
¨gs
, ), 16, 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

246 
Êags
 |
SIGN
;

250 
°r
 = 
	`numbî
(°r, 
	`va_¨g
(
¨gs
, ), 10, 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

255 
ù
 = 
	`va_¨g
(
¨gs
, *);

256 *
ù
 = (
°r
 - 
buf
);

261 if(*
fmt
 != '%')

263 *
°r
++ = '%';

265 if(*
fmt
)

267 *
°r
++ = *
fmt
;

271 --
fmt
;

278 *
°r
 = '\0';

279  (
°r
 - 
buf
);

280 
	}
}

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


175 *
	$°rdup
 (c⁄° *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 c⁄° *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 c⁄° *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 const *

228 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 const *

255 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 const *

307 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

324 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

326 #ifde‡
__OPTIMIZE__


327 
__exã∫_Æways_ölöe
 *

328 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


330  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

333 
__exã∫_Æways_ölöe
 const *

334 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


336  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

339 
	}
}

341 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

347 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

348 
__THROW
 
	`__n⁄nuŒ
 ((2));

349 
__END_NAMESPACE_STD


353 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

354 c⁄° *
__ª°ri˘
 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

357 #ifde‡
__USE_POSIX


358 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

359 **
__ª°ri˘
 
__ßve_±r
)

360 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

363 #ifde‡
__USE_GNU


365 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


366 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

367 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

369 c⁄° *
__√edÀ
)

370 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

372 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

373 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

377 #ifde‡
__USE_GNU


381 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

382 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

383 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

387 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

388 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

389 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

390 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

391 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

392 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

396 
__BEGIN_NAMESPACE_STD


398 
size_t
 
	$°æí
 (c⁄° *
__s
)

399 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

400 
__END_NAMESPACE_STD


402 #ifdef 
__USE_XOPEN2K8


405 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

406 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

410 
__BEGIN_NAMESPACE_STD


412 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

413 
__END_NAMESPACE_STD


414 #ifde‡
__USE_XOPEN2K


422 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


425 #ifde‡
__REDIRECT_NTH


426 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

427 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

428 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

430 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

431 
__THROW
 
	`__n⁄nuŒ
 ((2));

432 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

437 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

442 #ifde‡
__USE_XOPEN2K8


444 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

450 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

452 #ifde‡
__USE_MISC


454 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

455 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

458 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

461 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

462 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

465 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


468 *
	`ödex
 (*
__s
, 
__c
)

469 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

470 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

471 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

473 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


474 
__exã∫_Æways_ölöe
 *

475 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


477  
	`__buûtö_ödex
 (
__s
, 
__c
);

480 
__exã∫_Æways_ölöe
 const *

481 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


483  
	`__buûtö_ödex
 (
__s
, 
__c
);

486 
	}
}

488 *
	$ödex
 (c⁄° *
__s
, 
__c
)

489 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

493 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


496 *
	`rödex
 (*
__s
, 
__c
)

497 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

498 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

499 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

501 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


502 
__exã∫_Æways_ölöe
 *

503 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


505  
	`__buûtö_rödex
 (
__s
, 
__c
);

508 
__exã∫_Æways_ölöe
 const *

509 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


511  
	`__buûtö_rödex
 (
__s
, 
__c
);

514 
	}
}

516 *
	$rödex
 (c⁄° *
__s
, 
__c
)

517 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

522 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

526 #ifdef 
__USE_GNU


527 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

528 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

529 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

533 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

538 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

541 #ifdef 
__USE_GNU


544 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

548 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

549 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

553 #ifdef 
__USE_MISC


556 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

557 c⁄° *
__ª°ri˘
 
__dñim
)

558 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

561 #ifdef 
__USE_XOPEN2K8


563 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

566 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

574 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 #ifdef 
__USE_GNU


583 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

584 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

587 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

590 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #i‚de‡
ba£«me


597 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


598 "C++" *
	$ba£«me
 (*
__fûíame
)

599 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

600 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

601 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

610 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

611 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


631 
	~<bôs/°rög.h
>

634 
	~<bôs/°rög2.h
>

637 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


639 
	~<bôs/°rög3.h
>

643 
__END_DECLS


	@/usr/include/syscall.h

1 
	~<sys/sysˇŒ.h
>

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

31 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

34 
	#_POSIX_AIO_MAX
 1

	)

37 
	#_POSIX_ARG_MAX
 4096

	)

40 #ifde‡
__USE_XOPEN2K


41 
	#_POSIX_CHILD_MAX
 25

	)

43 
	#_POSIX_CHILD_MAX
 6

	)

47 
	#_POSIX_DELAYTIMER_MAX
 32

	)

51 
	#_POSIX_HOST_NAME_MAX
 255

	)

54 
	#_POSIX_LINK_MAX
 8

	)

57 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

60 
	#_POSIX_MAX_CANON
 255

	)

64 
	#_POSIX_MAX_INPUT
 255

	)

67 
	#_POSIX_MQ_OPEN_MAX
 8

	)

70 
	#_POSIX_MQ_PRIO_MAX
 32

	)

73 
	#_POSIX_NAME_MAX
 14

	)

76 #ifde‡
__USE_XOPEN2K


77 
	#_POSIX_NGROUPS_MAX
 8

	)

79 
	#_POSIX_NGROUPS_MAX
 0

	)

83 #ifde‡
__USE_XOPEN2K


84 
	#_POSIX_OPEN_MAX
 20

	)

86 
	#_POSIX_OPEN_MAX
 16

	)

89 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

96 
	#_POSIX_PATH_MAX
 256

	)

99 
	#_POSIX_PIPE_BUF
 512

	)

103 
	#_POSIX_RE_DUP_MAX
 255

	)

106 
	#_POSIX_RTSIG_MAX
 8

	)

109 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

112 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

115 
	#_POSIX_SIGQUEUE_MAX
 32

	)

118 
	#_POSIX_SSIZE_MAX
 32767

	)

121 
	#_POSIX_STREAM_MAX
 8

	)

124 
	#_POSIX_SYMLINK_MAX
 255

	)

128 
	#_POSIX_SYMLOOP_MAX
 8

	)

131 
	#_POSIX_TIMER_MAX
 32

	)

134 
	#_POSIX_TTY_NAME_MAX
 9

	)

137 #ifde‡
__USE_XOPEN2K


138 
	#_POSIX_TZNAME_MAX
 6

	)

140 
	#_POSIX_TZNAME_MAX
 3

	)

143 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


145 
	#_POSIX_QLIMIT
 1

	)

149 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

152 
	#_POSIX_UIO_MAXIOV
 16

	)

156 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

160 
	~<bôs/loˇl_lim.h
>

163 #i‚def 
SSIZE_MAX


164 
	#SSIZE_MAX
 
LONG_MAX


	)

171 #i‚def 
NGROUPS_MAX


172 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #ifde‡
__USE_POSIX


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #ifde‡
__USE_POSIX


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #ifde‡
__USE_MISC


34 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

35 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

38 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_ARCH_u«lig√d
 1

	)

28 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

29 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

30 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

31 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

32 || 
deföed
 
	g__ßndybridge__
 || deföed 
	g__haswñl__
 \

33 || 
deföed
 
	g__b⁄√Œ__
 || deföed 
	g__sûvîm⁄t__
 \

34 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

35 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

36 || 
deföed
 
	g__amdÁm10__
 || deföed 
	g__bdvî1__
 \

37 || 
deföed
 
	g__bdvî2__
 || deföed 
	g__bdvî3__
 \

38 || 
deföed
 
	g__bdvî4__
 || deföed 
	g__btvî1__
 \

39 || 
deföed
 
	g__btvî2__
)

43 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

44 && 
deföed
 
	g__GNUC__
 && __GNUC__ >= 2

46 #i‚de‡
__STRING_INLINE


47 #i‚de‡
__exã∫_ölöe


48 
	#__STRING_INLINE
 
ölöe


	)

50 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

55 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

56 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

57 | ((c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(
§c
))[
idx
])

	)

66 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

67 
	#mem˝y
(
de°
, 
§c
, 
n
) \

68 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

69 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

70 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

71 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

72 ((
n
) == 0 \

73 ? (
de°
) \

74 : (((
n
) % 4 == 0) \

75 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

76 : (((
n
) % 2 == 0) \

77 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

78 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

80 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

81 
size_t
 
__n
);

83 
__STRING_INLINE
 *

84 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

86 
__d0
, 
__d1
;

87 *
__tmp
 = 
__de°
;

88 
__asm__
 
__vﬁ©ûe__


96 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

97 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

99  
__de°
;

100 
	}
}

102 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

103 
size_t
 
__n
);

105 
__STRING_INLINE
 *

106 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

108 
__d0
, 
__d1
;

109 *
__tmp
 = 
__de°
;

110 
__asm__
 
__vﬁ©ûe__


123 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

124 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

126  
__de°
;

127 
	}
}

129 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

131 
__STRING_INLINE
 *

132 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

134 
__d0
, 
__d1
, 
__d2
;

135 *
__tmp
 = 
__de°
;

136 
__asm__
 
__vﬁ©ûe__


147 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

148 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

149 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

150 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

152  
__de°
;

153 
	}
}

155 
	#_HAVE_STRING_ARCH_memmove
 1

	)

156 #i‚de‡
_FORCE_INLINES


159 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

161 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

162 
	`__asm__
 ("memmove");

164 
__STRING_INLINE
 *

165 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

167 
__d0
, 
__d1
, 
__d2
;

168 *
__tmp
 = 
__de°
;

169 i‡(
__de°
 < 
__§c
)

170 
__asm__
 
__vﬁ©ûe__


173 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

174 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

175 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

176 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

178 
__asm__
 
__vﬁ©ûe__


182 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

183 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

184 : "0" (
__n
), "1" (__¿- 1 + (c⁄° *Ë
__§c
),

185 "2" (
__n
 - 1 + (*Ë
__tmp
),

186 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

187  
__de°
;

188 
	}
}

192 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

193 #i‚de‡
_FORCE_INLINES


194 #i‚de‡
__PIC__


196 
__STRING_INLINE
 

197 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

199 
__d0
, 
__d1
, 
__d2
;

200 
__ªs
;

201 
__asm__
 
__vﬁ©ûe__


209 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

210 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

211 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

212 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

214  
__ªs
;

215 
	}
}

220 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

221 
	#_USE_STRING_ARCH_mem£t
 1

	)

222 
	#mem£t
(
s
, 
c
, 
n
) \

223 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

224 ? ((
n
) == 1 \

225 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

226 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

227 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

228 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

229 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

230 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

231 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

232 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

233 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

235 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

236 *((*Ë
__s
Ë(Ë(
c
); \

237 
__s
; })

	)

239 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

240 ({ *
__s
 = (
s
); \

242 
__ui
; \

243 
__usi
; \

244 
__uc
; \

245 } *
__u
 = 
__s
; \

246 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

252 i‡((
n
) == 3 || (n) >= 5) \

253 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

256 
n
) \

259 
__u
->
__ui
 = 
__c
; \

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

262 
__u
->
__ui
 = 
__c
; \

263 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

265 
__u
->
__ui
 = 
__c
; \

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

268 
__u
->
__usi
 = (Ë
__c
; \

269 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

270 
__u
->
__uc
 = (Ë
__c
; \

274 
__u
->
__ui
 = 
__c
; \

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

277 
__u
->
__ui
 = 
__c
; \

278 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

280 
__u
->
__ui
 = 
__c
; \

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

283 
__u
->
__usi
 = (Ë
__c
; \

287 
__u
->
__ui
 = 
__c
; \

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

290 
__u
->
__ui
 = 
__c
; \

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

293 
__u
->
__ui
 = 
__c
; \

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

296 
__u
->
__uc
 = (Ë
__c
; \

300 
__u
->
__ui
 = 
__c
; \

301 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

303 
__u
->
__ui
 = 
__c
; \

304 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

306 
__u
->
__ui
 = 
__c
; \

307 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

309 
__u
->
__ui
 = 
__c
; \

314 
__s
; })

	)

316 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

317 (((
n
) % 4 == 0) \

318 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

319 
n
) \

320 : (((
n
) % 2 == 0) \

321 ? 
	`__mem£t_c˙_by2
 (
s
, \

322 ((Ë((Ë(
c
))) * 0x01010101,\

323 
n
) \

324 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

326 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

327 
size_t
 
__n
);

329 
__STRING_INLINE
 *

330 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

332 *
__tmp
 = 
__s
;

333 
__d0
;

334 #ifde‡
__i686__


335 
__asm__
 
__vﬁ©ûe__


338 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

339 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

340 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

343 
__asm__
 
__vﬁ©ûe__


349 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

350 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

351 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

354  
__s
;

355 
	}
}

357 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

358 
size_t
 
__n
);

360 
__STRING_INLINE
 *

361 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

363 
__d0
, 
__d1
;

364 *
__tmp
 = 
__s
;

365 #ifde‡
__i686__


366 
__asm__
 
__vﬁ©ûe__


370 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

371 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

372 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

375 
__asm__
 
__vﬁ©ûe__


381 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

382 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

383 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

386  
__s
;

387 
	}
}

389 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

390 (((
n
) % 4 == 0) \

391 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

392 : (((
n
) % 2 == 0) \

393 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

394 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

396 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

398 
__STRING_INLINE
 *

399 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

401 *
__tmp
 = 
__s
;

402 
__d0
;

403 
__asm__
 
__vﬁ©ûe__


413 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

414 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

415 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

417  
__s
;

418 
	}
}

420 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

422 
__STRING_INLINE
 *

423 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

425 
__d0
, 
__d1
;

426 *
__tmp
 = 
__s
;

427 
__asm__
 
__vﬁ©ûe__


438 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

439 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

440 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

442  
__s
;

443 
	}
}

447 
	#_HAVE_STRING_ARCH_memchr
 1

	)

448 #i‚de‡
_FORCE_INLINES


449 
__STRING_INLINE
 *

450 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

452 
__d0
;

453 #ifde‡
__i686__


454 
__d1
;

456 *
__ªs
;

457 i‡(
__n
 == 0)

458  
NULL
;

459 #ifde‡
__i686__


460 
__asm__
 
__vﬁ©ûe__


464 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

465 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

466 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

469 
__asm__
 
__vﬁ©ûe__


475 : "=D" (
__ªs
), "=&c" (
__d0
)

476 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

477 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

480  
__ªs
 - 1;

481 
	}
}

484 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

485 #i‚de‡
_FORCE_INLINES


486 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

488 
__STRING_INLINE
 *

489 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

491 
__d0
;

492 #ifde‡
__i686__


493 
__d1
;

495 *
__ªs
;

496 i‡(
__n
 == 0)

497  
NULL
;

498 #ifde‡
__i686__


499 
__asm__
 
__vﬁ©ûe__


505 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

506 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

507 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

510 
__asm__
 
__vﬁ©ûe__


517 : "=D" (
__ªs
), "=&c" (
__d0
)

518 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

519 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

522  
__ªs
;

523 
	}
}

524 #ifde‡
__USE_GNU


525 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

530 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

531 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

533 #i‚de‡
_FORCE_INLINES


534 
__STRING_INLINE
 *

535 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

537 
__d0
;

538 *
__ªs
;

539 
__asm__
 
__vﬁ©ûe__


542 : "=D" (
__ªs
), "=&c" (
__d0
)

543 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

544 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

546  
__ªs
 - 1;

547 
	}
}

548 #ifde‡
__USE_GNU


549 
__STRING_INLINE
 *

550 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

552  
	`__øwmemchr
 (
__s
, 
__c
);

553 
	}
}

559 
	#_HAVE_STRING_ARCH_°æí
 1

	)

560 
	#°æí
(
°r
) \

561 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

562 ? 
	`__buûtö_°æí
 (
°r
) \

563 : 
	`__°æí_g
 (
°r
)))

	)

564 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

566 
__STRING_INLINE
 
size_t


567 
	$__°æí_g
 (c⁄° *
__°r
)

569 
__dummy
;

570 c⁄° *
__tmp
 = 
__°r
;

571 
__asm__
 
__vﬁ©ûe__


577 : "Ù" (
__tmp
), "=&q" (
__dummy
)

578 : "0" (
__°r
),

579 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

581  
__tmp
 - 
__°r
 - 1;

582 
	}
}

586 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

587 
	#°r˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

591 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

592 (c⁄° *Ë(
§c
), \

593 
	`°æí
 (
§c
) + 1)) \

594 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

596 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

597 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

599 
__ui
; \

600 
__usi
; \

601 
__uc
; \

602 
__c
; \

603 } *
__u
 = (*Ë
__de°
; \

604 
§˛í
) \

607 
__u
->
__uc
 = '\0'; \

610 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

613 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

614 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

615 
__u
->
__uc
 = '\0'; \

618 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

621 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

622 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

623 
__u
->
__uc
 = '\0'; \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

631 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

632 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

633 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

635 
__u
->
__uc
 = '\0'; \

638 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

640 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

643 (*Ë
__de°
; }))

	)

645 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

647 
__STRING_INLINE
 *

648 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

650 *
__tmp
 = 
__de°
;

651 
__dummy
;

652 
__asm__
 
__vﬁ©ûe__


661 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

662 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

663 : "0" (
__§c
), "1" (
__tmp
),

664 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

666  
__de°
;

667 
	}
}

670 #ifde‡
__USE_GNU


671 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

673 
	#__°p˝y
(
de°
, 
§c
) \

674 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

675 ? (
	`°æí
 (
§c
) + 1 <= 8 \

676 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

677 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

678 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

679 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

680 ((
§˛í
) % 4 == 0 \

681 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

682 : ((
§˛í
) % 2 == 0 \

683 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

684 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

687 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

689 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

690 (
	`__exãnsi⁄__
 ({ union { \

691 
__ui
; \

692 
__usi
; \

693 
__uc
; \

694 
__c
; \

695 } *
__u
 = (*Ë(
de°
); \

696 
§˛í
) \

699 
__u
->
__uc
 = '\0'; \

702 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

703 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

706 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

708 
__u
->
__uc
 = '\0'; \

711 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

712 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

715 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

716 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

717 
__u
->
__uc
 = '\0'; \

720 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

721 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

722 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

723 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

726 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

727 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

728 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

729 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

730 
__u
->
__uc
 = '\0'; \

733 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

734 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

735 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

736 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

739 (*Ë
__u
; }))

	)

741 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

742 
size_t
 
__§˛í
);

744 
__STRING_INLINE
 *

745 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

747 *
__tmp
 = 
__de°
;

748 
__d0
, 
__d1
;

749 
__asm__
 
__vﬁ©ûe__


757 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

758 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

760  
__tmp
;

761 
	}
}

763 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

764 
size_t
 
__§˛í
);

766 
__STRING_INLINE
 *

767 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

769 *
__tmp
 = 
__de°
;

770 
__d0
, 
__d1
;

771 
__asm__
 
__vﬁ©ûe__


784 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

785 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

786 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

787 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

789  
__tmp
 + 2;

790 
	}
}

792 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

793 
size_t
 
__§˛í
);

795 
__STRING_INLINE
 *

796 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

798 
__d0
, 
__d1
;

799 *
__tmp
 = 
__de°
;

800 
__asm__
 
__vﬁ©ûe__


811 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

812 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

813 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

814 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

816  
__tmp
;

817 
	}
}

819 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

821 
__STRING_INLINE
 *

822 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

824 *
__tmp
 = 
__de°
;

825 
__dummy
;

826 
__asm__
 
__vﬁ©ûe__


835 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

836 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

837 : "0" (
__§c
), "1" (
__tmp
),

838 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

840  
__tmp
 - 1;

841 
	}
}

846 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

847 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

848 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

849 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

850 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

851 (c⁄° *Ë(
§c
), 
n
) \

852 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

853 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

854 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

855 (((
§˛í
) % 4 == 0) \

856 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

857 : (((
§˛í
) % 2 == 0) \

858 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

859 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

861 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

862 
size_t
 
__§˛í
, size_à
__n
);

864 
__STRING_INLINE
 *

865 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

867 *
__tmp
 = 
__de°
;

868 
__dummy1
, 
__dummy2
;

869 
__asm__
 
__vﬁ©ûe__


877 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

878 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

879 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

880 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

882 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

883  
__de°
;

884 
	}
}

886 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

887 
size_t
 
__§˛í
, size_à
__n
);

889 
__STRING_INLINE
 *

890 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

892 *
__tmp
 = 
__de°
;

893 
__dummy1
, 
__dummy2
;

894 
__asm__
 
__vﬁ©ûe__


907 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

908 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

909 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

910 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

912 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

913  
__de°
;

914 
	}
}

916 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

917 
size_t
 
__§˛í
, size_à
__n
);

919 
__STRING_INLINE
 *

920 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

922 
__d0
, 
__d1
;

923 *
__tmp
 = 
__de°
;

924 
__asm__
 
__vﬁ©ûe__


935 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

936 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

937 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

938 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

940 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

941  
__de°
;

942 
	}
}

944 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

945 
size_t
 
__n
);

947 
__STRING_INLINE
 *

948 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

950 *
__tmp
 = 
__de°
;

951 
__dummy
;

952 i‡(
__n
 > 0)

953 
__asm__
 
__vﬁ©ûe__


969 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

970 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

973  
__de°
;

974 
	}
}

978 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

979 
	#°rˇt
(
de°
, 
§c
) \

980 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

981 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

982 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

984 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

985 
size_t
 
__§˛í
);

987 
__STRING_INLINE
 *

988 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

990 #ifde‡
__i686__


991 
__d0
;

992 *
__tmp
;

993 
__asm__
 
__vﬁ©ûe__


995 : "=D" (
__tmp
), "=&c" (
__d0
),

996 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

997 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

998 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1000 --
__tmp
;

1002 *
__tmp
 = 
__de°
 - 1;

1003 
__asm__
 
__vﬁ©ûe__


1008 : "Ù" (
__tmp
),

1009 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1010 : "0" (
__tmp
),

1011 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1014 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1015  
__de°
;

1016 
	}
}

1018 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1020 
__STRING_INLINE
 *

1021 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1023 *
__tmp
 = 
__de°
 - 1;

1024 
__dummy
;

1025 
__asm__
 
__vﬁ©ûe__


1037 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1038 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1039 : "1" (
__tmp
), "2" (
__§c
),

1040 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1042  
__de°
;

1043 
	}
}

1047 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1048 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1049 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1050 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1051 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1052 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1053 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1054 (c⁄° *Ë(
§c
), \

1055 (
n
)Ë0, 
__de°
)) \

1056 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1058 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1059 
size_t
 
__n
);

1061 
__STRING_INLINE
 *

1062 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1064 *
__tmp
 = 
__de°
;

1065 
__dummy
;

1066 #ifde‡
__i686__


1067 
__asm__
 
__vﬁ©ûe__


1081 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1082 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1085 --
__tmp
;

1086 
__asm__
 
__vﬁ©ûe__


1103 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1104 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1107  
__de°
;

1108 
	}
}

1112 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1113 
	#°rcmp
(
s1
, 
s2
) \

1114 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1115 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1116 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1117 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1118 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1119 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1120 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1121 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1122 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1123 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1124 (c⁄° *Ë(
s2
), \

1125 
	`°æí
 (
s1
)) \

1126 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1127 (c⁄° *Ë(
s2
), \

1128 
	`°æí
 (
s1
))) \

1129 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1130 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1131 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1132 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1133 (c⁄° *Ë(
s2
), \

1134 
	`°æí
 (
s2
)) \

1135 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1136 (c⁄° *Ë(
s2
), \

1137 
	`°æí
 (
s2
))) \

1138 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1140 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1141 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1142 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1144 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1145 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1147 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1148 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1149 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1152 
__ªsu…
; }))

	)

1154 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1155 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1156 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1157 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1159 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1160 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1162 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1163 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1164 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1167 
__ªsu…
; }))

	)

1169 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1170 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1171 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1172 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1174 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1175 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1177 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1178 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1179 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1182 
__ªsu…
; }))

	)

1184 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1186 
__STRING_INLINE
 

1187 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1189 
__ªs
;

1190 
__asm__
 
__vﬁ©ûe__


1206 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1207 : "1" (
__s1
), "2" (
__s2
),

1208 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1209 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1211  
__ªs
;

1212 
	}
}

1216 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1217 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1218 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1219 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1220 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1221 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1222 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1224 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1225 
size_t
 
__n
);

1227 
__STRING_INLINE
 

1228 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1230 
__ªs
;

1231 
__asm__
 
__vﬁ©ûe__


1250 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1251 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1252 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1253 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1255  
__ªs
;

1256 
	}
}

1260 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1261 
	#_USE_STRING_ARCH_°rchr
 1

	)

1262 
	#°rchr
(
s
, 
c
) \

1263 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1264 ? ((
c
) == '\0' \

1265 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1266 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1267 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1269 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1271 
__STRING_INLINE
 *

1272 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1274 
__d0
;

1275 *
__ªs
;

1276 
__asm__
 
__vﬁ©ûe__


1286 : "Ù" (
__ªs
), "=&a" (
__d0
)

1287 : "0" (
__s
), "1" (
__c
),

1288 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1290  
__ªs
;

1291 
	}
}

1293 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1295 
__STRING_INLINE
 *

1296 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1298 
__d0
;

1299 *
__ªs
;

1300 
__asm__
 
__vﬁ©ûe__


1311 : "Ù" (
__ªs
), "=&a" (
__d0
)

1312 : "0" (
__s
), "1" (
__c
),

1313 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1315  
__ªs
;

1316 
	}
}

1320 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1321 
	#__°rch∫ul
(
s
, 
c
) \

1322 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1323 ? ((
c
) == '\0' \

1324 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1325 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1326 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1328 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1330 
__STRING_INLINE
 *

1331 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1333 
__d0
;

1334 *
__ªs
;

1335 
__asm__
 
__vﬁ©ûe__


1345 : "Ù" (
__ªs
), "=&a" (
__d0
)

1346 : "0" (
__s
), "1" (
__c
),

1347 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1349  
__ªs
;

1350 
	}
}

1352 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1354 
__STRING_INLINE
 *

1355 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1357 
__d0
;

1358 *
__ªs
;

1359 
__asm__
 
__vﬁ©ûe__


1370 : "Ù" (
__ªs
), "=&a" (
__d0
)

1371 : "0" (
__s
), "1" (
__c
),

1372 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1374  
__ªs
;

1375 
	}
}

1376 #ifde‡
__USE_GNU


1377 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1381 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1383 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1384 
	#ödex
(
s
, 
c
) \

1385 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1386 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1387 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1392 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1393 
	#°ºchr
(
s
, 
c
) \

1394 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1395 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1396 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1398 #ifde‡
__i686__


1399 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1401 
__STRING_INLINE
 *

1402 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1404 
__d0
, 
__d1
;

1405 *
__ªs
;

1406 
__asm__
 
__vﬁ©ûe__


1414 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1415 : "0" (1), "1" (
__s
), "2" (
__c
),

1416 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1418  
__ªs
 - 1;

1419 
	}
}

1421 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1423 
__STRING_INLINE
 *

1424 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1426 
__d0
, 
__d1
;

1427 *
__ªs
;

1428 
__asm__
 
__vﬁ©ûe__


1437 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1438 : "0" (1), "1" (
__s
), "2" (
__c
),

1439 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1441  
__ªs
 - 1;

1442 
	}
}

1444 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1446 
__STRING_INLINE
 *

1447 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1449 
__d0
, 
__d1
;

1450 *
__ªs
;

1451 
__asm__
 
__vﬁ©ûe__


1461 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1462 : "0" (0), "1" (
__s
), "2" (
__c
),

1463 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1465  
__ªs
;

1466 
	}
}

1468 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1470 
__STRING_INLINE
 *

1471 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1473 
__d0
, 
__d1
;

1474 *
__ªs
;

1475 
__asm__
 
__vﬁ©ûe__


1486 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1487 : "0" (0), "1" (
__s
), "2" (
__c
),

1488 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1490  
__ªs
;

1491 
	}
}

1495 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1497 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1498 
	#rödex
(
s
, 
c
) \

1499 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1500 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1501 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1507 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1508 
	#°rc•n
(
s
, 
ªje˘
) \

1509 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1510 ? ((
ªje˘
)[0] == '\0' \

1511 ? 
	`°æí
 (
s
) \

1512 : ((
ªje˘
)[1] == '\0' \

1513 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1514 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1515 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1517 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1519 #i‚de‡
_FORCE_INLINES


1520 
__STRING_INLINE
 
size_t


1521 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1523 
__d0
;

1524 *
__ªs
;

1525 
__asm__
 
__vﬁ©ûe__


1534 : "Ù" (
__ªs
), "=&a" (
__d0
)

1535 : "0" (
__s
), "1" (
__ªje˘
),

1536 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1538  (
__ªs
 - 1Ë- 
__s
;

1539 
	}
}

1542 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1543 
size_t
 
__ªje˘_Àn
);

1545 
__STRING_INLINE
 
size_t


1546 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1548 
__d0
, 
__d1
, 
__d2
;

1549 c⁄° *
__ªs
;

1550 
__asm__
 
__vﬁ©ûe__


1561 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1562 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1564  (
__ªs
 - 1Ë- 
__s
;

1565 
	}
}

1567 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1568 #ifde‡
__PIC__


1570 
__STRING_INLINE
 
size_t


1571 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1573 
__d0
, 
__d1
, 
__d2
;

1574 c⁄° *
__ªs
;

1575 
__asm__
 
__vﬁ©ûe__


1592 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1593 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1595  (
__ªs
 - 1Ë- 
__s
;

1596 
	}
}

1598 
__STRING_INLINE
 
size_t


1599 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1601 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1602 c⁄° *
__ªs
;

1603 
__asm__
 
__vﬁ©ûe__


1617 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1618 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1621  (
__ªs
 - 1Ë- 
__s
;

1622 
	}
}

1628 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1629 
	#°r•n
(
s
, 
ac˚±
) \

1630 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1631 ? ((
ac˚±
)[0] == '\0' \

1632 ? ((Ë(
s
), 0) \

1633 : ((
ac˚±
)[1] == '\0' \

1634 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1635 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1636 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1638 #i‚de‡
_FORCE_INLINES


1639 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1641 
__STRING_INLINE
 
size_t


1642 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1644 
__d0
;

1645 *
__ªs
;

1647 
__asm__
 
__vﬁ©ûe__


1653 : "Ù" (
__ªs
), "=&q" (
__d0
)

1654 : "0" (
__s
), "1" (
__ac˚±
),

1655 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1657  (
__ªs
 - 1Ë- 
__s
;

1658 
	}
}

1661 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1662 
size_t
 
__ac˚±_Àn
);

1664 
__STRING_INLINE
 
size_t


1665 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1667 
__d0
, 
__d1
, 
__d2
;

1668 c⁄° *
__ªs
;

1669 
__asm__
 
__vﬁ©ûe__


1680 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1681 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1684 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1685 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1687  (
__ªs
 - 1Ë- 
__s
;

1688 
	}
}

1690 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1691 #ifde‡
__PIC__


1693 
__STRING_INLINE
 
size_t


1694 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1696 
__d0
, 
__d1
, 
__d2
;

1697 c⁄° *
__ªs
;

1698 
__asm__
 
__vﬁ©ûe__


1714 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1715 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1717  (
__ªs
 - 1Ë- 
__s
;

1718 
	}
}

1720 
__STRING_INLINE
 
size_t


1721 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1723 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1724 c⁄° *
__ªs
;

1725 
__asm__
 
__vﬁ©ûe__


1739 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1740 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1742  (
__ªs
 - 1Ë- 
__s
;

1743 
	}
}

1748 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1749 
	#°Ωbrk
(
s
, 
ac˚±
) \

1750 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1751 ? ((
ac˚±
)[0] == '\0' \

1752 ? ((Ë(
s
), (*) 0) \

1753 : ((
ac˚±
)[1] == '\0' \

1754 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1755 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1756 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1758 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1759 
size_t
 
__ac˚±_Àn
);

1761 
__STRING_INLINE
 *

1762 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1764 
__d0
, 
__d1
, 
__d2
;

1765 *
__ªs
;

1766 
__asm__
 
__vﬁ©ûe__


1781 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1782 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1784  
__ªs
;

1785 
	}
}

1787 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1788 #ifde‡
__PIC__


1790 
__STRING_INLINE
 *

1791 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1793 
__d0
, 
__d1
, 
__d2
;

1794 *
__ªs
;

1795 
__asm__
 
__vﬁ©ûe__


1816 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1817 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1819  
__ªs
;

1820 
	}
}

1822 
__STRING_INLINE
 *

1823 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1825 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1826 *
__ªs
;

1827 
__asm__
 
__vﬁ©ûe__


1846 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1847 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1849  
__ªs
;

1850 
	}
}

1855 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1856 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1857 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1858 ? ((
√edÀ
)[0] == '\0' \

1859 ? (
hay°ack
) \

1860 : ((
√edÀ
)[1] == '\0' \

1861 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1862 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1863 
	`°æí
 (
√edÀ
)))) \

1864 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1868 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1869 c⁄° 
__√edÀ
[],

1870 
size_t
 
__√edÀ_Àn
);

1872 
__STRING_INLINE
 *

1873 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1874 
size_t
 
__√edÀ_Àn
)

1876 
__d0
, 
__d1
, 
__d2
;

1877 *
__ªs
;

1878 
__asm__
 
__vﬁ©ûe__


1891 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1892 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1894  
__ªs
;

1895 
	}
}

1897 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1898 c⁄° *
__√edÀ
);

1899 #ifde‡
__PIC__


1901 
__STRING_INLINE
 *

1902 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1904 
__d0
, 
__d1
, 
__d2
;

1905 *
__ªs
;

1906 
__asm__
 
__vﬁ©ûe__


1925 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1926 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1927 "d" (
__√edÀ
)

1929  
__ªs
;

1930 
	}
}

1932 
__STRING_INLINE
 *

1933 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1935 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1936 *
__ªs
;

1937 
__asm__
 
__vﬁ©ûe__


1954 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1955 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1956 "b" (
__√edÀ
)

1958  
__ªs
;

1959 
	}
}

1965 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1966 #ifde‡
__i686__


1967 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1968 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1969 ? 
	`__buûtö_ffs
 (
w‹d
) \

1970 : ({ 
__˙t
, 
__tmp
; \

1971 
__asm__
 
__vﬁ©ûe__
 \

1974 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1975 : "rm" (
w‹d
), "1" (-1)); \

1976 
__˙t
 + 1; }))

	)

1978 #i‚de‡
ff¶


1979 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1984 #i‚de‡
_FORCE_INLINES


1985 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‚de‡
__NO_STRING_INLINES


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_ARCH_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_ARCH_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_ARCH_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_ARCH_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_ARCH_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
Ë(- 
	`__°rcmp_cg
 (s2, s1,Ü2))

	)

895 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


896 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

897 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

898 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

899 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

900 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

901 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

902 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

908 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


909 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


910 #i‡
__GNUC_PREREQ
 (3, 2)

911 
	#°rc•n
(
s
, 
ªje˘
) \

912 
__exãnsi⁄__
 \

913 ({ 
__r0
, 
__r1
, 
__r2
; \

914 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

915 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

916 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

917 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

918 ? 
	`°æí
 (
s
) \

919 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

920 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

921 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

922 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

923 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

924 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

925 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

926 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

928 
	#°rc•n
(
s
, 
ªje˘
) \

929 
__exãnsi⁄__
 \

930 ({ 
__r0
, 
__r1
, 
__r2
; \

931 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

932 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

933 ? 
	`°æí
 (
s
) \

934 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

935 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

936 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

937 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

938 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

939 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

940 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

941 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

945 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

946 
__STRING_INLINE
 
size_t


947 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

949 
size_t
 
__ªsu…
 = 0;

950 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

951 ++
__ªsu…
;

952  
__ªsu…
;

953 
	}
}

955 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

956 
__ªje˘2
);

957 
__STRING_INLINE
 
size_t


958 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

960 
size_t
 
__ªsu…
 = 0;

961 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


962 && 
__s
[
__ªsu…
] !
__ªje˘2
)

963 ++
__ªsu…
;

964  
__ªsu…
;

965 
	}
}

967 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

968 
__ªje˘2
, 
__ªje˘3
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

971 
__ªje˘3
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


975 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

976 ++
__ªsu…
;

977  
__ªsu…
;

978 
	}
}

984 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


985 #i‚de‡
_HAVE_STRING_ARCH_°r•n


986 #i‡
__GNUC_PREREQ
 (3, 2)

987 
	#°r•n
(
s
, 
ac˚±
) \

988 
__exãnsi⁄__
 \

989 ({ 
__a0
, 
__a1
, 
__a2
; \

990 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

991 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

992 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

993 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

994 ? ((Ë(
s
), (
size_t
) 0) \

995 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

996 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

997 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

998 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

999 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1000 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1001 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1002 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1004 
	#°r•n
(
s
, 
ac˚±
) \

1005 
__exãnsi⁄__
 \

1006 ({ 
__a0
, 
__a1
, 
__a2
; \

1007 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1008 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1009 ? ((Ë(
s
), (
size_t
) 0) \

1010 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1011 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1012 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1013 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1014 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1015 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1016 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1017 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1021 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1022 
__STRING_INLINE
 
size_t


1023 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1025 
size_t
 
__ªsu…
 = 0;

1027 
__s
[
__ªsu…
] =
__ac˚±
)

1028 ++
__ªsu…
;

1029  
__ªsu…
;

1030 
	}
}

1032 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1033 
__ac˚±2
);

1034 
__STRING_INLINE
 
size_t


1035 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1037 
size_t
 
__ªsu…
 = 0;

1039 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1040 ++
__ªsu…
;

1041  
__ªsu…
;

1042 
	}
}

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1045 
__ac˚±2
, 
__ac˚±3
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1052 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1053 ++
__ªsu…
;

1054  
__ªsu…
;

1055 
	}
}

1060 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1061 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1062 #i‡
__GNUC_PREREQ
 (3, 2)

1063 
	#°Ωbrk
(
s
, 
ac˚±
) \

1064 
__exãnsi⁄__
 \

1065 ({ 
__a0
, 
__a1
, 
__a2
; \

1066 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1067 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1068 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1069 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1070 ? ((Ë(
s
), (*Ë
NULL
) \

1071 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1072 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1073 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1074 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1075 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1076 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1077 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1078 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1080 
	#°Ωbrk
(
s
, 
ac˚±
) \

1081 
__exãnsi⁄__
 \

1082 ({ 
__a0
, 
__a1
, 
__a2
; \

1083 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1084 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1085 ? ((Ë(
s
), (*Ë
NULL
) \

1086 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1087 ? 
	`°rchr
 (
s
, 
__a0
) \

1088 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1089 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1090 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1091 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1092 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1093 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1097 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1098 
__ac˚±2
);

1099 
__STRING_INLINE
 *

1100 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1103 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1104 ++
__s
;

1105  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1106 
	}
}

1108 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1109 
__ac˚±2
, 
__ac˚±3
);

1110 
__STRING_INLINE
 *

1111 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1114 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1115 && *
__s
 !
__ac˚±3
)

1116 ++
__s
;

1117  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1118 
	}
}

1124 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1125 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1126 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1127 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1128 ? (*Ë(
size_t
Ë(
hay°ack
) \

1129 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1130 ? 
	`°rchr
 (
hay°ack
, \

1131 ((c⁄° *Ë(
√edÀ
))[0]) \

1132 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1133 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1137 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1138 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1139 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1140 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1141 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1142 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1143 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1144 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1147 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1148 
__STRING_INLINE
 *

1149 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1151 *
__ªsu…
;

1152 i‡(
__s
 =
NULL
)

1153 
__s
 = *
__√xç
;

1154 *
__s
 =
__£p
)

1155 ++
__s
;

1156 
__ªsu…
 = 
NULL
;

1157 i‡(*
__s
 != '\0')

1159 
__ªsu…
 = 
__s
++;

1160 *
__s
 != '\0')

1161 i‡(*
__s
++ =
__£p
)

1163 
__s
[-1] = '\0';

1167 *
__√xç
 = 
__s
;

1168  
__ªsu…
;

1169 
	}
}

1170 #ifde‡
__USE_POSIX


1171 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1176 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1177 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1179 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1180 
	#__°r£p
(
s
, 
ªje˘
) \

1181 
__exãnsi⁄__
 \

1182 ({ 
__r0
, 
__r1
, 
__r2
; \

1183 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1184 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1185 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1186 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1187 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1188 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1189 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1190 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1191 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1192 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1193 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1194 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1197 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1198 
__STRING_INLINE
 *

1199 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1201 *
__ªtvÆ
 = *
__s
;

1202 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1203 *(*
__s
)++ = '\0';

1204  
__ªtvÆ
;

1205 
	}
}

1207 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1208 
__STRING_INLINE
 *

1209 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1211 *
__ªtvÆ
 = *
__s
;

1212 i‡(
__ªtvÆ
 !
NULL
)

1214 *
__˝
 = 
__ªtvÆ
;

1217 i‡(*
__˝
 == '\0')

1219 
__˝
 = 
NULL
;

1222 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1224 *
__˝
++ = '\0';

1227 ++
__˝
;

1229 *
__s
 = 
__˝
;

1231  
__ªtvÆ
;

1232 
	}
}

1234 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1235 
__ªje˘3
);

1236 
__STRING_INLINE
 *

1237 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1239 *
__ªtvÆ
 = *
__s
;

1240 i‡(
__ªtvÆ
 !
NULL
)

1242 *
__˝
 = 
__ªtvÆ
;

1245 i‡(*
__˝
 == '\0')

1247 
__˝
 = 
NULL
;

1250 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1252 *
__˝
++ = '\0';

1255 ++
__˝
;

1257 *
__s
 = 
__˝
;

1259  
__ªtvÆ
;

1260 
	}
}

1261 #ifde‡
__USE_MISC


1262 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1269 #ifde‡
__USE_MISC


1271 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1272 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1273 
	~<°dlib.h
>

1276 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1278 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1279 
	#__°rdup
(
s
) \

1280 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1281 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1282 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1283 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1284 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1285 i‡(
__ªtvÆ
 !
NULL
) \

1286 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1287 
__ªtvÆ
; 
	}
})) \

1288 : 
	`__°rdup
 (
s
)))

	)

1290 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1291 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1295 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1297 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1298 
__THROW
 
__©åibuã_mÆloc__
;

1299 
	#__°∫dup
(
s
, 
n
) \

1300 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1301 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1302 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1303 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1304 
size_t
 
__n
 = (
n
); \

1305 *
__ªtvÆ
; \

1306 i‡(
__n
 < 
__Àn
) \

1307 
__Àn
 = 
__n
 + 1; \

1308 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1309 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1313 
__Àn
 - 1); \

1315 
__ªtvÆ
; 
	}
})) \

1316 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1318 #ifde‡
__USE_XOPEN2K8


1319 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1325 #i‚de‡
_FORCE_INLINES


1326 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 #i‡!
__GNUC_PREREQ
 (5,0)

23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

27 #i‚de‡
__˝lu•lus


31 #unde‡
mem˝y


32 #unde‡
memmove


33 #unde‡
mem£t


34 #unde‡
°rˇt


35 #unde‡
°r˝y


36 #unde‡
°∫ˇt


37 #unde‡
°∫˝y


38 #ifde‡
__USE_GNU


39 #unde‡
memp˝y


40 #unde‡
°p˝y


42 #ifde‡
__USE_MISC


43 #unde‡
bc›y


44 #unde‡
bzîo


49 
__f‹tify_fun˘i⁄
 *

50 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

51 
size_t
 
__Àn
))

53  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

54 
	}
}

56 
__f‹tify_fun˘i⁄
 *

57 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__f‹tify_fun˘i⁄
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__f‹tify_fun˘i⁄
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

82 #i‡!
	`__GNUC_PREREQ
 (5,0)

83 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

84 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

86 
	`__w¨n_mem£t_zîo_Àn
 ();

87  
__de°
;

90  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

91 
	}
}

93 #ifde‡
__USE_MISC


94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

100 
__f‹tify_fun˘i⁄
 

101 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

103 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

104 
	}
}

107 
__f‹tify_fun˘i⁄
 *

108 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

110  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

111 
	}
}

113 #ifde‡
__USE_GNU


114 
__f‹tify_fun˘i⁄
 *

115 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

117  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

118 
	}
}

122 
__f‹tify_fun˘i⁄
 *

123 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

124 
size_t
 
__Àn
))

126  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

127 
	}
}

130 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

131 
size_t
 
__de°Àn
Ë
__THROW
;

132 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

133 
size_t
 
__n
), 
°≤˝y
);

135 
__f‹tify_fun˘i⁄
 *

136 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

138 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

139 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

140  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

141  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

142 
	}
}

145 
__f‹tify_fun˘i⁄
 *

146 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

148  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

149 
	}
}

152 
__f‹tify_fun˘i⁄
 *

153 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

154 
size_t
 
__Àn
))

156  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

157 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_MISC


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

89 
	#__S16_TYPE
 

	)

90 
	#__U16_TYPE
 

	)

91 
	#__S32_TYPE
 

	)

92 
	#__U32_TYPE
 

	)

93 
	#__SLONGWORD_TYPE
 

	)

94 
	#__ULONGWORD_TYPE
 

	)

95 #i‡
__WORDSIZE
 == 32

96 
	#__SQUAD_TYPE
 
__quad_t


	)

97 
	#__UQUAD_TYPE
 
__u_quad_t


	)

98 
	#__SWORD_TYPE
 

	)

99 
	#__UWORD_TYPE
 

	)

100 
	#__SLONG32_TYPE
 

	)

101 
	#__ULONG32_TYPE
 

	)

102 
	#__S64_TYPE
 
__quad_t


	)

103 
	#__U64_TYPE
 
__u_quad_t


	)

106 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

107 #ñi‡
__WORDSIZE
 == 64

108 
	t__SQUAD_TYPE
 

	)

109 
	t__UQUAD_TYPE
 

	)

110 
	t__SWORD_TYPE
 

	)

111 
	t__UWORD_TYPE
 

	)

112 
	t__SLONG32_TYPE
 

	)

113 
	t__ULONG32_TYPE
 

	)

114 
	t__S64_TYPE
 

	)

115 
	t__U64_TYPE
 

	)

117 
	t__STD_TYPE
 

	)

121 
	~<bôs/ty≥sizes.h
>

124 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

125 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

126 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

127 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

128 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

129 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

130 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

131 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

132 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

133 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

134 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

135 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

136 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

137 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

138 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

139 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

140 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

141 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

143 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

144 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

147 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

150 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

153 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

158 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

159 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

162 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

163 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

166 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

167 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

170 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

172 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

175 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

177 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

181 
__off64_t
 
	t__loff_t
;

182 
__quad_t
 *
	t__qaddr_t
;

183 *
	t__ˇddr_t
;

186 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

189 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

192 #unde‡
__STD_TYPE


	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_MISC


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

32 
	#__√ed_IOV_MAX


	)

33 
	~<bôs/°dio_lim.h
>

65 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

70 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

73 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

76 
	#NL_MSGMAX
 
INT_MAX


	)

80 
	#NL_NMAX
 
INT_MAX


	)

83 
	#NL_SETMAX
 
INT_MAX


	)

86 
	#NL_TEXTMAX
 
INT_MAX


	)

89 
	#NZERO
 20

	)

93 #ifde‡
INT_MAX


94 #i‡
INT_MAX
 == 32767

95 
	#WORD_BIT
 16

	)

97 #i‡
INT_MAX
 == 2147483647

98 
	#WORD_BIT
 32

	)

101 
	#WORD_BIT
 64

	)

104 #ñi‡
deföed
 
__INT_MAX__


105 #i‡
__INT_MAX__
 == 32767

106 
	#WORD_BIT
 16

	)

108 #i‡
__INT_MAX__
 == 2147483647

109 
	#WORD_BIT
 32

	)

112 
	#WORD_BIT
 64

	)

116 
	#WORD_BIT
 32

	)

120 #ifde‡
LONG_MAX


121 #i‡
LONG_MAX
 == 2147483647

122 
	#LONG_BIT
 32

	)

125 
	#LONG_BIT
 64

	)

127 #ñi‡
deföed
 
__LONG_MAX__


128 #i‡
__LONG_MAX__
 == 2147483647

129 
	#LONG_BIT
 32

	)

132 
	#LONG_BIT
 64

	)

135 
	~<bôs/w‹dsize.h
>

136 #i‡
__WORDSIZE
 == 64

137 
	#LONG_BIT
 64

	)

139 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


149 #unde‡
_DEFAULT_SOURCE


150 
	#_DEFAULT_SOURCE
 1

	)

154 #ifde‡
_GNU_SOURCE


155 #unde‡
_ISOC95_SOURCE


156 
	#_ISOC95_SOURCE
 1

	)

157 #unde‡
_ISOC99_SOURCE


158 
	#_ISOC99_SOURCE
 1

	)

159 #unde‡
_ISOC11_SOURCE


160 
	#_ISOC11_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_DEFAULT_SOURCE


172 
	#_DEFAULT_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
))

184 #unde‡
_DEFAULT_SOURCE


185 
	#_DEFAULT_SOURCE
 1

	)

189 #i‡(
deföed
 
_ISOC11_SOURCE
 \

190 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

191 
	#__USE_ISOC11
 1

	)

195 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

196 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

197 
	#__USE_ISOC99
 1

	)

201 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

202 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

203 
	#__USE_ISOC95
 1

	)

210 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

211 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

212 
	#__USE_ISOCXX11
 1

	)

218 #ifde‡
_DEFAULT_SOURCE


219 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


220 
	#__USE_POSIX_IMPLICITLY
 1

	)

222 #unde‡
_POSIX_SOURCE


223 
	#_POSIX_SOURCE
 1

	)

224 #unde‡
_POSIX_C_SOURCE


225 
	#_POSIX_C_SOURCE
 200809L

	)

227 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

228 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

229 
	#_POSIX_SOURCE
 1

	)

230 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

231 
	#_POSIX_C_SOURCE
 2

	)

232 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

233 
	#_POSIX_C_SOURCE
 199506L

	)

234 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

235 
	#_POSIX_C_SOURCE
 200112L

	)

237 
	#_POSIX_C_SOURCE
 200809L

	)

239 
	#__USE_POSIX_IMPLICITLY
 1

	)

242 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


243 
	#__USE_POSIX
 1

	)

246 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


247 
	#__USE_POSIX2
 1

	)

250 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

251 
	#__USE_POSIX199309
 1

	)

254 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

255 
	#__USE_POSIX199506
 1

	)

258 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

259 
	#__USE_XOPEN2K
 1

	)

260 #unde‡
__USE_ISOC95


261 
	#__USE_ISOC95
 1

	)

262 #unde‡
__USE_ISOC99


263 
	#__USE_ISOC99
 1

	)

266 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

267 
	#__USE_XOPEN2K8
 1

	)

268 #unde‡
_ATFILE_SOURCE


269 
	#_ATFILE_SOURCE
 1

	)

272 #ifdef 
_XOPEN_SOURCE


273 
	#__USE_XOPEN
 1

	)

274 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

275 
	#__USE_XOPEN_EXTENDED
 1

	)

276 
	#__USE_UNIX98
 1

	)

277 #unde‡
_LARGEFILE_SOURCE


278 
	#_LARGEFILE_SOURCE
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

281 
	#__USE_XOPEN2K8
 1

	)

282 
	#__USE_XOPEN2K8XSI
 1

	)

284 
	#__USE_XOPEN2K
 1

	)

285 
	#__USE_XOPEN2KXSI
 1

	)

286 #unde‡
__USE_ISOC95


287 
	#__USE_ISOC95
 1

	)

288 #unde‡
__USE_ISOC99


289 
	#__USE_ISOC99
 1

	)

292 #ifde‡
_XOPEN_SOURCE_EXTENDED


293 
	#__USE_XOPEN_EXTENDED
 1

	)

298 #ifde‡
_LARGEFILE_SOURCE


299 
	#__USE_LARGEFILE
 1

	)

302 #ifde‡
_LARGEFILE64_SOURCE


303 
	#__USE_LARGEFILE64
 1

	)

306 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

307 
	#__USE_FILE_OFFSET64
 1

	)

310 #i‡
deföed
 
_DEFAULT_SOURCE


311 
	#__USE_MISC
 1

	)

314 #ifdef 
_ATFILE_SOURCE


315 
	#__USE_ATFILE
 1

	)

318 #ifdef 
_GNU_SOURCE


319 
	#__USE_GNU
 1

	)

322 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


323 
	#__USE_REENTRANT
 1

	)

326 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

327 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

328 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

329 #ñi‡!
__GNUC_PREREQ
 (4, 1)

330 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


331 #ñi‡
_FORTIFY_SOURCE
 > 1

332 
	#__USE_FORTIFY_LEVEL
 2

	)

334 
	#__USE_FORTIFY_LEVEL
 1

	)

337 #i‚de‡
__USE_FORTIFY_LEVEL


338 
	#__USE_FORTIFY_LEVEL
 0

	)

343 
	~<°dc-¥edef.h
>

351 #unde‡
__GNU_LIBRARY__


352 
	#__GNU_LIBRARY__
 6

	)

356 
	#__GLIBC__
 2

	)

357 
	#__GLIBC_MINOR__
 21

	)

359 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

360 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

363 #i‚de‡
__ASSEMBLER__


364 #i‚de‡
_SYS_CDEFS_H


365 
	~<sys/cdefs.h
>

370 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


371 
	#__USE_LARGEFILE
 1

	)

372 
	#__USE_LARGEFILE64
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/sys/syscall.h

18 #i‚de‡
_SYSCALL_H


19 
	#_SYSCALL_H
 1

	)

24 
	~<asm/uni°d.h
>

26 #i‚de‡
_LIBC


31 
	~<bôs/sysˇŒ.h
>

	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_MISC


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_MISC


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/asm/unistd.h

1 #i‚de‡
_ASM_X86_UNISTD_H


2 
	#_ASM_X86_UNISTD_H


	)

5 
	#__X32_SYSCALL_BIT
 0x40000000

	)

7 #ifde‡
__i386__


8 
	~<asm/uni°d_32.h
>

9 #ñi‡
deföed
(
__ILP32__
)

10 
	~<asm/uni°d_x32.h
>

12 
	~<asm/uni°d_64.h
>

	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
	m__ñisi⁄
;

106 
__±hªad_li°_t
 
	m__li°
;

107 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

109 
	#__PTHREAD_SPINS
 0, 0

	)

111 
	m__nu£rs
;

112 
__exãnsi⁄__
 union

116 
	m__e•ös
;

117 
	m__ñisi⁄
;

118 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

119 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ñisi⁄


	)

120 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

121 } 
	m__ñisi⁄_d©a
;

122 
__±hªad_¶i°_t
 
	m__li°
;

125 } 
	m__d©a
;

126 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

127 
	m__Æign
;

128 } 
	t±hªad_muãx_t
;

132 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

133 
	m__Æign
;

134 } 
	t±hªad_muãx©å_t
;

143 
	m__lock
;

144 
	m__fuãx
;

145 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

146 
__exãnsi⁄__
 
	m__wakeup_£q
;

147 
__exãnsi⁄__
 
	m__wokí_£q
;

148 *
	m__muãx
;

149 
	m__nwaôîs
;

150 
	m__brﬂdˇ°_£q
;

151 } 
	m__d©a
;

152 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

153 
__exãnsi⁄__
 
	m__Æign
;

154 } 
	t±hªad_c⁄d_t
;

158 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

159 
	m__Æign
;

160 } 
	t±hªad_c⁄d©å_t
;

164 
	t±hªad_key_t
;

168 
	t±hªad_⁄˚_t
;

171 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


176 #ifde‡
__x86_64__


179 
	m__lock
;

180 
	m__ƒ_ªadîs
;

181 
	m__ªadîs_wakeup
;

182 
	m__wrôî_wakeup
;

183 
	m__ƒ_ªadîs_queued
;

184 
	m__ƒ_wrôîs_queued
;

185 
	m__wrôî
;

186 
	m__sh¨ed
;

187 sig√d 
	m__rwñisi⁄
;

188 #ifde‡ 
__ILP32__


189 
	m__∑d1
[3];

190 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

192 
	m__∑d1
[7];

193 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

195 
	m__∑d2
;

198 
	m__Êags
;

199 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

200 } 
	m__d©a
;

204 
	m__lock
;

205 
	m__ƒ_ªadîs
;

206 
	m__ªadîs_wakeup
;

207 
	m__wrôî_wakeup
;

208 
	m__ƒ_ªadîs_queued
;

209 
	m__ƒ_wrôîs_queued
;

212 
	m__Êags
;

213 
	m__sh¨ed
;

214 sig√d 
	m__rwñisi⁄
;

215 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0

	)

216 
	m__∑d2
;

217 
	m__wrôî
;

218 } 
	m__d©a
;

220 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

221 
	m__Æign
;

222 } 
	t±hªad_rwlock_t
;

226 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

227 
	m__Æign
;

228 } 
	t±hªad_rwlock©å_t
;

232 #ifde‡
__USE_XOPEN2K


234 vﬁ©ûê
	t±hªad_•ölock_t
;

241 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

242 
	m__Æign
;

243 } 
	t±hªad_b¨rõr_t
;

247 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

248 
	m__Æign
;

249 } 
	t±hªad_b¨rõøâr_t
;

253 #i‚de‡
__x86_64__


255 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/stdio-lock.h

19 #i‚de‡
_BITS_STDIO_LOCK_H


20 
	#_BITS_STDIO_LOCK_H
 1

	)

22 
	~<bôs/libc-lock.h
>

24 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

27 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


28 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

29 #ñi‡
	t_IO_MTSAFE_IO


30 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


33 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

34 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

35 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

36 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

40 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

41 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

42 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

43 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

44 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

45 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

47 #i‡
	tdeföed
 
	t_LIBC
 && 
	tIS_IN
 (
	tlibc
)

48 
	t_IO_acquúe_lock
(
	t_Â
) \

49 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

50 
	`_IO_Êockfûe
 (
_Â
)

	)

52 
	#_IO_ªÀa£_lock
(
_Â
) \

53 
	`_IO_fu∆ockfûe
 (
_Â
); \

54 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/syscall.h

3 #i‚de‡
_SYSCALL_H


8 #i‡!
deföed
 
__x86_64__


9 
	#SYS__Œ£ek
 
__NR__Œ£ek


	)

10 
	#SYS__√w£À˘
 
__NR__√w£À˘


	)

11 
	#SYS__sys˘l
 
__NR__sys˘l


	)

12 
	#SYS_ac˚±4
 
__NR_ac˚±4


	)

13 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

14 
	#SYS_ac˘
 
__NR_ac˘


	)

15 
	#SYS_add_key
 
__NR_add_key


	)

16 
	#SYS_adjtimex
 
__NR_adjtimex


	)

17 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

18 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

19 
	#SYS_bdÊush
 
__NR_bdÊush


	)

20 
	#SYS_böd
 
__NR_böd


	)

21 
	#SYS_bpf
 
__NR_bpf


	)

22 
	#SYS_bªak
 
__NR_bªak


	)

23 
	#SYS_brk
 
__NR_brk


	)

24 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

25 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

26 
	#SYS_chdú
 
__NR_chdú


	)

27 
	#SYS_chmod
 
__NR_chmod


	)

28 
	#SYS_chown
 
__NR_chown


	)

29 
	#SYS_chown32
 
__NR_chown32


	)

30 
	#SYS_chroŸ
 
__NR_chroŸ


	)

31 
	#SYS_˛ock_adjtime
 
__NR_˛ock_adjtime


	)

32 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

33 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

34 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

35 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

36 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

37 
	#SYS_˛o£
 
__NR_˛o£


	)

38 
	#SYS_c⁄√˘
 
__NR_c⁄√˘


	)

39 
	#SYS_¸ót
 
__NR_¸ót


	)

40 
	#SYS_¸óã_moduÀ
 
__NR_¸óã_moduÀ


	)

41 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

42 
	#SYS_dup
 
__NR_dup


	)

43 
	#SYS_dup2
 
__NR_dup2


	)

44 
	#SYS_dup3
 
__NR_dup3


	)

45 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

46 
	#SYS_ïﬁl_¸óã1
 
__NR_ïﬁl_¸óã1


	)

47 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

48 
	#SYS_ïﬁl_pwaô
 
__NR_ïﬁl_pwaô


	)

49 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

50 
	#SYS_evítfd
 
__NR_evítfd


	)

51 
	#SYS_evítfd2
 
__NR_evítfd2


	)

52 
	#SYS_execve
 
__NR_execve


	)

53 
	#SYS_execvót
 
__NR_execvót


	)

54 
	#SYS_exô
 
__NR_exô


	)

55 
	#SYS_exô_group
 
__NR_exô_group


	)

56 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

57 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

58 
	#SYS_Ádvi£64_64
 
__NR_Ádvi£64_64


	)

59 
	#SYS_ÁŒoˇã
 
__NR_ÁŒoˇã


	)

60 
	#SYS_ÁnŸify_öô
 
__NR_ÁnŸify_öô


	)

61 
	#SYS_ÁnŸify_m¨k
 
__NR_ÁnŸify_m¨k


	)

62 
	#SYS_fchdú
 
__NR_fchdú


	)

63 
	#SYS_fchmod
 
__NR_fchmod


	)

64 
	#SYS_fchmod©
 
__NR_fchmod©


	)

65 
	#SYS_fchown
 
__NR_fchown


	)

66 
	#SYS_fchown32
 
__NR_fchown32


	)

67 
	#SYS_fchow«t
 
__NR_fchow«t


	)

68 
	#SYS_f˙é
 
__NR_f˙é


	)

69 
	#SYS_f˙é64
 
__NR_f˙é64


	)

70 
	#SYS_fd©async
 
__NR_fd©async


	)

71 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

72 
	#SYS_föô_moduÀ
 
__NR_föô_moduÀ


	)

73 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

74 
	#SYS_Êock
 
__NR_Êock


	)

75 
	#SYS_f‹k
 
__NR_f‹k


	)

76 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

77 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

78 
	#SYS_f°©
 
__NR_f°©


	)

79 
	#SYS_f°©64
 
__NR_f°©64


	)

80 
	#SYS_f°©©64
 
__NR_f°©©64


	)

81 
	#SYS_f°©fs
 
__NR_f°©fs


	)

82 
	#SYS_f°©fs64
 
__NR_f°©fs64


	)

83 
	#SYS_fsync
 
__NR_fsync


	)

84 
	#SYS_·ime
 
__NR_·ime


	)

85 
	#SYS_·runˇã
 
__NR_·runˇã


	)

86 
	#SYS_·runˇã64
 
__NR_·runˇã64


	)

87 
	#SYS_fuãx
 
__NR_fuãx


	)

88 
	#SYS_futimeßt
 
__NR_futimeßt


	)

89 
	#SYS_gë_kî√l_syms
 
__NR_gë_kî√l_syms


	)

90 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

91 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

92 
	#SYS_gë_thªad_¨ó
 
__NR_gë_thªad_¨ó


	)

93 
	#SYS_gë˝u
 
__NR_gë˝u


	)

94 
	#SYS_gëcwd
 
__NR_gëcwd


	)

95 
	#SYS_gëdíts
 
__NR_gëdíts


	)

96 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

97 
	#SYS_gëegid
 
__NR_gëegid


	)

98 
	#SYS_gëegid32
 
__NR_gëegid32


	)

99 
	#SYS_gëeuid
 
__NR_gëeuid


	)

100 
	#SYS_gëeuid32
 
__NR_gëeuid32


	)

101 
	#SYS_gëgid
 
__NR_gëgid


	)

102 
	#SYS_gëgid32
 
__NR_gëgid32


	)

103 
	#SYS_gëgroups
 
__NR_gëgroups


	)

104 
	#SYS_gëgroups32
 
__NR_gëgroups32


	)

105 
	#SYS_gëôimî
 
__NR_gëôimî


	)

106 
	#SYS_gë≥î«me
 
__NR_gë≥î«me


	)

107 
	#SYS_gëpgid
 
__NR_gëpgid


	)

108 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

109 
	#SYS_gëpid
 
__NR_gëpid


	)

110 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

111 
	#SYS_gëµid
 
__NR_gëµid


	)

112 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

113 
	#SYS_gëøndom
 
__NR_gëøndom


	)

114 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

115 
	#SYS_gëªsgid32
 
__NR_gëªsgid32


	)

116 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

117 
	#SYS_gëªsuid32
 
__NR_gëªsuid32


	)

118 
	#SYS_gëæimô
 
__NR_gëæimô


	)

119 
	#SYS_gërußge
 
__NR_gërußge


	)

120 
	#SYS_gësid
 
__NR_gësid


	)

121 
	#SYS_gësock«me
 
__NR_gësock«me


	)

122 
	#SYS_gësock›t
 
__NR_gësock›t


	)

123 
	#SYS_gëtid
 
__NR_gëtid


	)

124 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

125 
	#SYS_gëuid
 
__NR_gëuid


	)

126 
	#SYS_gëuid32
 
__NR_gëuid32


	)

127 
	#SYS_gëx©å
 
__NR_gëx©å


	)

128 
	#SYS_gây
 
__NR_gây


	)

129 
	#SYS_idÀ
 
__NR_idÀ


	)

130 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

131 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

132 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

133 
	#SYS_öŸify_öô1
 
__NR_öŸify_öô1


	)

134 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

135 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

136 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

137 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

138 
	#SYS_io_£tup
 
__NR_io_£tup


	)

139 
	#SYS_io_submô
 
__NR_io_submô


	)

140 
	#SYS_io˘l
 
__NR_io˘l


	)

141 
	#SYS_i›îm
 
__NR_i›îm


	)

142 
	#SYS_i›l
 
__NR_i›l


	)

143 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

144 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

145 
	#SYS_ùc
 
__NR_ùc


	)

146 
	#SYS_kcmp
 
__NR_kcmp


	)

147 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

148 
	#SYS_key˘l
 
__NR_key˘l


	)

149 
	#SYS_kûl
 
__NR_kûl


	)

150 
	#SYS_lchown
 
__NR_lchown


	)

151 
	#SYS_lchown32
 
__NR_lchown32


	)

152 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

153 
	#SYS_lök
 
__NR_lök


	)

154 
	#SYS_lök©
 
__NR_lök©


	)

155 
	#SYS_li°í
 
__NR_li°í


	)

156 
	#SYS_li°x©å
 
__NR_li°x©å


	)

157 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

158 
	#SYS_lock
 
__NR_lock


	)

159 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

160 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

161 
	#SYS_l£ek
 
__NR_l£ek


	)

162 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

163 
	#SYS_l°©
 
__NR_l°©


	)

164 
	#SYS_l°©64
 
__NR_l°©64


	)

165 
	#SYS_madvi£
 
__NR_madvi£


	)

166 
	#SYS_mböd
 
__NR_mböd


	)

167 
	#SYS_memb¨rõr
 
__NR_memb¨rõr


	)

168 
	#SYS_memfd_¸óã
 
__NR_memfd_¸óã


	)

169 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

170 
	#SYS_möc‹e
 
__NR_möc‹e


	)

171 
	#SYS_mkdú
 
__NR_mkdú


	)

172 
	#SYS_mkdú©
 
__NR_mkdú©


	)

173 
	#SYS_mknod
 
__NR_mknod


	)

174 
	#SYS_mknod©
 
__NR_mknod©


	)

175 
	#SYS_mlock
 
__NR_mlock


	)

176 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

177 
	#SYS_mm≠
 
__NR_mm≠


	)

178 
	#SYS_mm≠2
 
__NR_mm≠2


	)

179 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

180 
	#SYS_mou¡
 
__NR_mou¡


	)

181 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

182 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

183 
	#SYS_mpx
 
__NR_mpx


	)

184 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

185 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

186 
	#SYS_mq_›í
 
__NR_mq_›í


	)

187 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

188 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

189 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

190 
	#SYS_mªm≠
 
__NR_mªm≠


	)

191 
	#SYS_msync
 
__NR_msync


	)

192 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

193 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

194 
	#SYS_munm≠
 
__NR_munm≠


	)

195 
	#SYS_«me_to_h™dÀ_©
 
__NR_«me_to_h™dÀ_©


	)

196 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

197 
	#SYS_nfs£rv˘l
 
__NR_nfs£rv˘l


	)

198 
	#SYS_ni˚
 
__NR_ni˚


	)

199 
	#SYS_ﬁdf°©
 
__NR_ﬁdf°©


	)

200 
	#SYS_ﬁdl°©
 
__NR_ﬁdl°©


	)

201 
	#SYS_ﬁdﬁdu«me
 
__NR_ﬁdﬁdu«me


	)

202 
	#SYS_ﬁd°©
 
__NR_ﬁd°©


	)

203 
	#SYS_ﬁdu«me
 
__NR_ﬁdu«me


	)

204 
	#SYS_›í
 
__NR_›í


	)

205 
	#SYS_›í_by_h™dÀ_©
 
__NR_›í_by_h™dÀ_©


	)

206 
	#SYS_›í©
 
__NR_›í©


	)

207 
	#SYS_∑u£
 
__NR_∑u£


	)

208 
	#SYS_≥rf_evít_›í
 
__NR_≥rf_evít_›í


	)

209 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

210 
	#SYS_pùe
 
__NR_pùe


	)

211 
	#SYS_pùe2
 
__NR_pùe2


	)

212 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

213 
	#SYS_pﬁl
 
__NR_pﬁl


	)

214 
	#SYS_µﬁl
 
__NR_µﬁl


	)

215 
	#SYS_¥˘l
 
__NR_¥˘l


	)

216 
	#SYS_¥ód64
 
__NR_¥ód64


	)

217 
	#SYS_¥ódv
 
__NR_¥ódv


	)

218 
	#SYS_¥limô64
 
__NR_¥limô64


	)

219 
	#SYS_¥o˚ss_vm_ªadv
 
__NR_¥o˚ss_vm_ªadv


	)

220 
	#SYS_¥o˚ss_vm_wrôev
 
__NR_¥o˚ss_vm_wrôev


	)

221 
	#SYS_¥of
 
__NR_¥of


	)

222 
	#SYS_¥ofû
 
__NR_¥ofû


	)

223 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

224 
	#SYS_±ø˚
 
__NR_±ø˚


	)

225 
	#SYS_puçmsg
 
__NR_puçmsg


	)

226 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

227 
	#SYS_pwrôev
 
__NR_pwrôev


	)

228 
	#SYS_quîy_moduÀ
 
__NR_quîy_moduÀ


	)

229 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

230 
	#SYS_ªad
 
__NR_ªad


	)

231 
	#SYS_ªadahód
 
__NR_ªadahód


	)

232 
	#SYS_ªaddú
 
__NR_ªaddú


	)

233 
	#SYS_ªadlök
 
__NR_ªadlök


	)

234 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

235 
	#SYS_ªadv
 
__NR_ªadv


	)

236 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

237 
	#SYS_ªcv‰om
 
__NR_ªcv‰om


	)

238 
	#SYS_ªcvmmsg
 
__NR_ªcvmmsg


	)

239 
	#SYS_ªcvmsg
 
__NR_ªcvmsg


	)

240 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

241 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

242 
	#SYS_ª«me
 
__NR_ª«me


	)

243 
	#SYS_ª«mót
 
__NR_ª«mót


	)

244 
	#SYS_ª«mót2
 
__NR_ª«mót2


	)

245 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

246 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

247 
	#SYS_rmdú
 
__NR_rmdú


	)

248 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

249 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

250 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

251 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

252 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

253 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

254 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

255 
	#SYS_π_tgsigqueueöfo
 
__NR_π_tgsigqueueöfo


	)

256 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

257 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

258 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

259 
	#SYS_sched_gë©å
 
__NR_sched_gë©å


	)

260 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

261 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

262 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

263 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

264 
	#SYS_sched_£èâr
 
__NR_sched_£èâr


	)

265 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

266 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

267 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

268 
	#SYS_£ccomp
 
__NR_£ccomp


	)

269 
	#SYS_£À˘
 
__NR_£À˘


	)

270 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

271 
	#SYS_£ndfûe64
 
__NR_£ndfûe64


	)

272 
	#SYS_£ndmmsg
 
__NR_£ndmmsg


	)

273 
	#SYS_£ndmsg
 
__NR_£ndmsg


	)

274 
	#SYS_£ndto
 
__NR_£ndto


	)

275 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

276 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

277 
	#SYS_£t_thªad_¨ó
 
__NR_£t_thªad_¨ó


	)

278 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

279 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

280 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

281 
	#SYS_£tfsgid32
 
__NR_£tfsgid32


	)

282 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

283 
	#SYS_£tfsuid32
 
__NR_£tfsuid32


	)

284 
	#SYS_£tgid
 
__NR_£tgid


	)

285 
	#SYS_£tgid32
 
__NR_£tgid32


	)

286 
	#SYS_£tgroups
 
__NR_£tgroups


	)

287 
	#SYS_£tgroups32
 
__NR_£tgroups32


	)

288 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

289 
	#SYS_£tôimî
 
__NR_£tôimî


	)

290 
	#SYS_£äs
 
__NR_£äs


	)

291 
	#SYS_£çgid
 
__NR_£çgid


	)

292 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

293 
	#SYS_£åegid
 
__NR_£åegid


	)

294 
	#SYS_£åegid32
 
__NR_£åegid32


	)

295 
	#SYS_£åesgid
 
__NR_£åesgid


	)

296 
	#SYS_£åesgid32
 
__NR_£åesgid32


	)

297 
	#SYS_£åesuid
 
__NR_£åesuid


	)

298 
	#SYS_£åesuid32
 
__NR_£åesuid32


	)

299 
	#SYS_£åeuid
 
__NR_£åeuid


	)

300 
	#SYS_£åeuid32
 
__NR_£åeuid32


	)

301 
	#SYS_£ålimô
 
__NR_£ålimô


	)

302 
	#SYS_£tsid
 
__NR_£tsid


	)

303 
	#SYS_£tsock›t
 
__NR_£tsock›t


	)

304 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

305 
	#SYS_£tuid
 
__NR_£tuid


	)

306 
	#SYS_£tuid32
 
__NR_£tuid32


	)

307 
	#SYS_£tx©å
 
__NR_£tx©å


	)

308 
	#SYS_sgëmask
 
__NR_sgëmask


	)

309 
	#SYS_shutdown
 
__NR_shutdown


	)

310 
	#SYS_siga˘i⁄
 
__NR_siga˘i⁄


	)

311 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

312 
	#SYS_sig«l
 
__NR_sig«l


	)

313 
	#SYS_sig«lfd
 
__NR_sig«lfd


	)

314 
	#SYS_sig«lfd4
 
__NR_sig«lfd4


	)

315 
	#SYS_sig≥ndög
 
__NR_sig≥ndög


	)

316 
	#SYS_sig¥ocmask
 
__NR_sig¥ocmask


	)

317 
	#SYS_sigªtu∫
 
__NR_sigªtu∫


	)

318 
	#SYS_sigsu•íd
 
__NR_sigsu•íd


	)

319 
	#SYS_sockë
 
__NR_sockë


	)

320 
	#SYS_sockëˇŒ
 
__NR_sockëˇŒ


	)

321 
	#SYS_sockë∑ú
 
__NR_sockë∑ú


	)

322 
	#SYS_•li˚
 
__NR_•li˚


	)

323 
	#SYS_s£tmask
 
__NR_s£tmask


	)

324 
	#SYS_°©
 
__NR_°©


	)

325 
	#SYS_°©64
 
__NR_°©64


	)

326 
	#SYS_°©fs
 
__NR_°©fs


	)

327 
	#SYS_°©fs64
 
__NR_°©fs64


	)

328 
	#SYS_°ime
 
__NR_°ime


	)

329 
	#SYS_°ty
 
__NR_°ty


	)

330 
	#SYS_sw≠off
 
__NR_sw≠off


	)

331 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

332 
	#SYS_symlök
 
__NR_symlök


	)

333 
	#SYS_symlök©
 
__NR_symlök©


	)

334 
	#SYS_sync
 
__NR_sync


	)

335 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

336 
	#SYS_syncfs
 
__NR_syncfs


	)

337 
	#SYS_sysfs
 
__NR_sysfs


	)

338 
	#SYS_sysöfo
 
__NR_sysöfo


	)

339 
	#SYS_sy¶og
 
__NR_sy¶og


	)

340 
	#SYS_ãe
 
__NR_ãe


	)

341 
	#SYS_tgkûl
 
__NR_tgkûl


	)

342 
	#SYS_time
 
__NR_time


	)

343 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

344 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

345 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

346 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

347 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

348 
	#SYS_timîfd_¸óã
 
__NR_timîfd_¸óã


	)

349 
	#SYS_timîfd_gëtime
 
__NR_timîfd_gëtime


	)

350 
	#SYS_timîfd_£âime
 
__NR_timîfd_£âime


	)

351 
	#SYS_times
 
__NR_times


	)

352 
	#SYS_tkûl
 
__NR_tkûl


	)

353 
	#SYS_åunˇã
 
__NR_åunˇã


	)

354 
	#SYS_åunˇã64
 
__NR_åunˇã64


	)

355 
	#SYS_ugëæimô
 
__NR_ugëæimô


	)

356 
	#SYS_ulimô
 
__NR_ulimô


	)

357 
	#SYS_umask
 
__NR_umask


	)

358 
	#SYS_umou¡
 
__NR_umou¡


	)

359 
	#SYS_umou¡2
 
__NR_umou¡2


	)

360 
	#SYS_u«me
 
__NR_u«me


	)

361 
	#SYS_u∆ök
 
__NR_u∆ök


	)

362 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

363 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

364 
	#SYS_u£lib
 
__NR_u£lib


	)

365 
	#SYS_u£rÁu…fd
 
__NR_u£rÁu…fd


	)

366 
	#SYS_u°©
 
__NR_u°©


	)

367 
	#SYS_utime
 
__NR_utime


	)

368 
	#SYS_utimíßt
 
__NR_utimíßt


	)

369 
	#SYS_utimes
 
__NR_utimes


	)

370 
	#SYS_vf‹k
 
__NR_vf‹k


	)

371 
	#SYS_vh™gup
 
__NR_vh™gup


	)

372 
	#SYS_vm86
 
__NR_vm86


	)

373 
	#SYS_vm86ﬁd
 
__NR_vm86ﬁd


	)

374 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

375 
	#SYS_v£rvî
 
__NR_v£rvî


	)

376 
	#SYS_waô4
 
__NR_waô4


	)

377 
	#SYS_waôid
 
__NR_waôid


	)

378 
	#SYS_waôpid
 
__NR_waôpid


	)

379 
	#SYS_wrôe
 
__NR_wrôe


	)

380 
	#SYS_wrôev
 
__NR_wrôev


	)

382 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


383 
	#SYS__sys˘l
 
__NR__sys˘l


	)

384 
	#SYS_ac˚±
 
__NR_ac˚±


	)

385 
	#SYS_ac˚±4
 
__NR_ac˚±4


	)

386 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

387 
	#SYS_ac˘
 
__NR_ac˘


	)

388 
	#SYS_add_key
 
__NR_add_key


	)

389 
	#SYS_adjtimex
 
__NR_adjtimex


	)

390 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

391 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

392 
	#SYS_¨ch_¥˘l
 
__NR_¨ch_¥˘l


	)

393 
	#SYS_böd
 
__NR_böd


	)

394 
	#SYS_bpf
 
__NR_bpf


	)

395 
	#SYS_brk
 
__NR_brk


	)

396 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

397 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

398 
	#SYS_chdú
 
__NR_chdú


	)

399 
	#SYS_chmod
 
__NR_chmod


	)

400 
	#SYS_chown
 
__NR_chown


	)

401 
	#SYS_chroŸ
 
__NR_chroŸ


	)

402 
	#SYS_˛ock_adjtime
 
__NR_˛ock_adjtime


	)

403 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

404 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

405 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

406 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

407 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

408 
	#SYS_˛o£
 
__NR_˛o£


	)

409 
	#SYS_c⁄√˘
 
__NR_c⁄√˘


	)

410 
	#SYS_¸ót
 
__NR_¸ót


	)

411 
	#SYS_¸óã_moduÀ
 
__NR_¸óã_moduÀ


	)

412 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

413 
	#SYS_dup
 
__NR_dup


	)

414 
	#SYS_dup2
 
__NR_dup2


	)

415 
	#SYS_dup3
 
__NR_dup3


	)

416 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

417 
	#SYS_ïﬁl_¸óã1
 
__NR_ïﬁl_¸óã1


	)

418 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

419 
	#SYS_ïﬁl_˘l_ﬁd
 
__NR_ïﬁl_˘l_ﬁd


	)

420 
	#SYS_ïﬁl_pwaô
 
__NR_ïﬁl_pwaô


	)

421 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

422 
	#SYS_ïﬁl_waô_ﬁd
 
__NR_ïﬁl_waô_ﬁd


	)

423 
	#SYS_evítfd
 
__NR_evítfd


	)

424 
	#SYS_evítfd2
 
__NR_evítfd2


	)

425 
	#SYS_execve
 
__NR_execve


	)

426 
	#SYS_execvót
 
__NR_execvót


	)

427 
	#SYS_exô
 
__NR_exô


	)

428 
	#SYS_exô_group
 
__NR_exô_group


	)

429 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

430 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

431 
	#SYS_ÁŒoˇã
 
__NR_ÁŒoˇã


	)

432 
	#SYS_ÁnŸify_öô
 
__NR_ÁnŸify_öô


	)

433 
	#SYS_ÁnŸify_m¨k
 
__NR_ÁnŸify_m¨k


	)

434 
	#SYS_fchdú
 
__NR_fchdú


	)

435 
	#SYS_fchmod
 
__NR_fchmod


	)

436 
	#SYS_fchmod©
 
__NR_fchmod©


	)

437 
	#SYS_fchown
 
__NR_fchown


	)

438 
	#SYS_fchow«t
 
__NR_fchow«t


	)

439 
	#SYS_f˙é
 
__NR_f˙é


	)

440 
	#SYS_fd©async
 
__NR_fd©async


	)

441 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

442 
	#SYS_föô_moduÀ
 
__NR_föô_moduÀ


	)

443 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

444 
	#SYS_Êock
 
__NR_Êock


	)

445 
	#SYS_f‹k
 
__NR_f‹k


	)

446 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

447 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

448 
	#SYS_f°©
 
__NR_f°©


	)

449 
	#SYS_f°©fs
 
__NR_f°©fs


	)

450 
	#SYS_fsync
 
__NR_fsync


	)

451 
	#SYS_·runˇã
 
__NR_·runˇã


	)

452 
	#SYS_fuãx
 
__NR_fuãx


	)

453 
	#SYS_futimeßt
 
__NR_futimeßt


	)

454 
	#SYS_gë_kî√l_syms
 
__NR_gë_kî√l_syms


	)

455 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

456 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

457 
	#SYS_gë_thªad_¨ó
 
__NR_gë_thªad_¨ó


	)

458 
	#SYS_gë˝u
 
__NR_gë˝u


	)

459 
	#SYS_gëcwd
 
__NR_gëcwd


	)

460 
	#SYS_gëdíts
 
__NR_gëdíts


	)

461 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

462 
	#SYS_gëegid
 
__NR_gëegid


	)

463 
	#SYS_gëeuid
 
__NR_gëeuid


	)

464 
	#SYS_gëgid
 
__NR_gëgid


	)

465 
	#SYS_gëgroups
 
__NR_gëgroups


	)

466 
	#SYS_gëôimî
 
__NR_gëôimî


	)

467 
	#SYS_gë≥î«me
 
__NR_gë≥î«me


	)

468 
	#SYS_gëpgid
 
__NR_gëpgid


	)

469 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

470 
	#SYS_gëpid
 
__NR_gëpid


	)

471 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

472 
	#SYS_gëµid
 
__NR_gëµid


	)

473 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

474 
	#SYS_gëøndom
 
__NR_gëøndom


	)

475 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

476 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

477 
	#SYS_gëæimô
 
__NR_gëæimô


	)

478 
	#SYS_gërußge
 
__NR_gërußge


	)

479 
	#SYS_gësid
 
__NR_gësid


	)

480 
	#SYS_gësock«me
 
__NR_gësock«me


	)

481 
	#SYS_gësock›t
 
__NR_gësock›t


	)

482 
	#SYS_gëtid
 
__NR_gëtid


	)

483 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

484 
	#SYS_gëuid
 
__NR_gëuid


	)

485 
	#SYS_gëx©å
 
__NR_gëx©å


	)

486 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

487 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

488 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

489 
	#SYS_öŸify_öô1
 
__NR_öŸify_öô1


	)

490 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

491 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

492 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

493 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

494 
	#SYS_io_£tup
 
__NR_io_£tup


	)

495 
	#SYS_io_submô
 
__NR_io_submô


	)

496 
	#SYS_io˘l
 
__NR_io˘l


	)

497 
	#SYS_i›îm
 
__NR_i›îm


	)

498 
	#SYS_i›l
 
__NR_i›l


	)

499 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

500 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

501 
	#SYS_kcmp
 
__NR_kcmp


	)

502 
	#SYS_kexec_fûe_lﬂd
 
__NR_kexec_fûe_lﬂd


	)

503 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

504 
	#SYS_key˘l
 
__NR_key˘l


	)

505 
	#SYS_kûl
 
__NR_kûl


	)

506 
	#SYS_lchown
 
__NR_lchown


	)

507 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

508 
	#SYS_lök
 
__NR_lök


	)

509 
	#SYS_lök©
 
__NR_lök©


	)

510 
	#SYS_li°í
 
__NR_li°í


	)

511 
	#SYS_li°x©å
 
__NR_li°x©å


	)

512 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

513 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

514 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

515 
	#SYS_l£ek
 
__NR_l£ek


	)

516 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

517 
	#SYS_l°©
 
__NR_l°©


	)

518 
	#SYS_madvi£
 
__NR_madvi£


	)

519 
	#SYS_mböd
 
__NR_mböd


	)

520 
	#SYS_memb¨rõr
 
__NR_memb¨rõr


	)

521 
	#SYS_memfd_¸óã
 
__NR_memfd_¸óã


	)

522 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

523 
	#SYS_möc‹e
 
__NR_möc‹e


	)

524 
	#SYS_mkdú
 
__NR_mkdú


	)

525 
	#SYS_mkdú©
 
__NR_mkdú©


	)

526 
	#SYS_mknod
 
__NR_mknod


	)

527 
	#SYS_mknod©
 
__NR_mknod©


	)

528 
	#SYS_mlock
 
__NR_mlock


	)

529 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

530 
	#SYS_mm≠
 
__NR_mm≠


	)

531 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

532 
	#SYS_mou¡
 
__NR_mou¡


	)

533 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

534 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

535 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

536 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

537 
	#SYS_mq_›í
 
__NR_mq_›í


	)

538 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

539 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

540 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

541 
	#SYS_mªm≠
 
__NR_mªm≠


	)

542 
	#SYS_msg˘l
 
__NR_msg˘l


	)

543 
	#SYS_msggë
 
__NR_msggë


	)

544 
	#SYS_msgrcv
 
__NR_msgrcv


	)

545 
	#SYS_msg¢d
 
__NR_msg¢d


	)

546 
	#SYS_msync
 
__NR_msync


	)

547 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

548 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

549 
	#SYS_munm≠
 
__NR_munm≠


	)

550 
	#SYS_«me_to_h™dÀ_©
 
__NR_«me_to_h™dÀ_©


	)

551 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

552 
	#SYS_√wf°©©
 
__NR_√wf°©©


	)

553 
	#SYS_nfs£rv˘l
 
__NR_nfs£rv˘l


	)

554 
	#SYS_›í
 
__NR_›í


	)

555 
	#SYS_›í_by_h™dÀ_©
 
__NR_›í_by_h™dÀ_©


	)

556 
	#SYS_›í©
 
__NR_›í©


	)

557 
	#SYS_∑u£
 
__NR_∑u£


	)

558 
	#SYS_≥rf_evít_›í
 
__NR_≥rf_evít_›í


	)

559 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

560 
	#SYS_pùe
 
__NR_pùe


	)

561 
	#SYS_pùe2
 
__NR_pùe2


	)

562 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

563 
	#SYS_pﬁl
 
__NR_pﬁl


	)

564 
	#SYS_µﬁl
 
__NR_µﬁl


	)

565 
	#SYS_¥˘l
 
__NR_¥˘l


	)

566 
	#SYS_¥ód64
 
__NR_¥ód64


	)

567 
	#SYS_¥ódv
 
__NR_¥ódv


	)

568 
	#SYS_¥limô64
 
__NR_¥limô64


	)

569 
	#SYS_¥o˚ss_vm_ªadv
 
__NR_¥o˚ss_vm_ªadv


	)

570 
	#SYS_¥o˚ss_vm_wrôev
 
__NR_¥o˚ss_vm_wrôev


	)

571 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

572 
	#SYS_±ø˚
 
__NR_±ø˚


	)

573 
	#SYS_puçmsg
 
__NR_puçmsg


	)

574 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

575 
	#SYS_pwrôev
 
__NR_pwrôev


	)

576 
	#SYS_quîy_moduÀ
 
__NR_quîy_moduÀ


	)

577 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

578 
	#SYS_ªad
 
__NR_ªad


	)

579 
	#SYS_ªadahód
 
__NR_ªadahód


	)

580 
	#SYS_ªadlök
 
__NR_ªadlök


	)

581 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

582 
	#SYS_ªadv
 
__NR_ªadv


	)

583 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

584 
	#SYS_ªcv‰om
 
__NR_ªcv‰om


	)

585 
	#SYS_ªcvmmsg
 
__NR_ªcvmmsg


	)

586 
	#SYS_ªcvmsg
 
__NR_ªcvmsg


	)

587 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

588 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

589 
	#SYS_ª«me
 
__NR_ª«me


	)

590 
	#SYS_ª«mót
 
__NR_ª«mót


	)

591 
	#SYS_ª«mót2
 
__NR_ª«mót2


	)

592 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

593 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

594 
	#SYS_rmdú
 
__NR_rmdú


	)

595 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

596 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

597 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

598 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

599 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

600 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

601 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

602 
	#SYS_π_tgsigqueueöfo
 
__NR_π_tgsigqueueöfo


	)

603 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

604 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

605 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

606 
	#SYS_sched_gë©å
 
__NR_sched_gë©å


	)

607 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

608 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

609 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

610 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

611 
	#SYS_sched_£èâr
 
__NR_sched_£èâr


	)

612 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

613 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

614 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

615 
	#SYS_£ccomp
 
__NR_£ccomp


	)

616 
	#SYS_£curôy
 
__NR_£curôy


	)

617 
	#SYS_£À˘
 
__NR_£À˘


	)

618 
	#SYS_£m˘l
 
__NR_£m˘l


	)

619 
	#SYS_£mgë
 
__NR_£mgë


	)

620 
	#SYS_£m›
 
__NR_£m›


	)

621 
	#SYS_£mtimed›
 
__NR_£mtimed›


	)

622 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

623 
	#SYS_£ndmmsg
 
__NR_£ndmmsg


	)

624 
	#SYS_£ndmsg
 
__NR_£ndmsg


	)

625 
	#SYS_£ndto
 
__NR_£ndto


	)

626 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

627 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

628 
	#SYS_£t_thªad_¨ó
 
__NR_£t_thªad_¨ó


	)

629 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

630 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

631 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

632 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

633 
	#SYS_£tgid
 
__NR_£tgid


	)

634 
	#SYS_£tgroups
 
__NR_£tgroups


	)

635 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

636 
	#SYS_£tôimî
 
__NR_£tôimî


	)

637 
	#SYS_£äs
 
__NR_£äs


	)

638 
	#SYS_£çgid
 
__NR_£çgid


	)

639 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

640 
	#SYS_£åegid
 
__NR_£åegid


	)

641 
	#SYS_£åesgid
 
__NR_£åesgid


	)

642 
	#SYS_£åesuid
 
__NR_£åesuid


	)

643 
	#SYS_£åeuid
 
__NR_£åeuid


	)

644 
	#SYS_£ålimô
 
__NR_£ålimô


	)

645 
	#SYS_£tsid
 
__NR_£tsid


	)

646 
	#SYS_£tsock›t
 
__NR_£tsock›t


	)

647 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

648 
	#SYS_£tuid
 
__NR_£tuid


	)

649 
	#SYS_£tx©å
 
__NR_£tx©å


	)

650 
	#SYS_shm©
 
__NR_shm©


	)

651 
	#SYS_shm˘l
 
__NR_shm˘l


	)

652 
	#SYS_shmdt
 
__NR_shmdt


	)

653 
	#SYS_shmgë
 
__NR_shmgë


	)

654 
	#SYS_shutdown
 
__NR_shutdown


	)

655 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

656 
	#SYS_sig«lfd
 
__NR_sig«lfd


	)

657 
	#SYS_sig«lfd4
 
__NR_sig«lfd4


	)

658 
	#SYS_sockë
 
__NR_sockë


	)

659 
	#SYS_sockë∑ú
 
__NR_sockë∑ú


	)

660 
	#SYS_•li˚
 
__NR_•li˚


	)

661 
	#SYS_°©
 
__NR_°©


	)

662 
	#SYS_°©fs
 
__NR_°©fs


	)

663 
	#SYS_sw≠off
 
__NR_sw≠off


	)

664 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

665 
	#SYS_symlök
 
__NR_symlök


	)

666 
	#SYS_symlök©
 
__NR_symlök©


	)

667 
	#SYS_sync
 
__NR_sync


	)

668 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

669 
	#SYS_syncfs
 
__NR_syncfs


	)

670 
	#SYS_sysfs
 
__NR_sysfs


	)

671 
	#SYS_sysöfo
 
__NR_sysöfo


	)

672 
	#SYS_sy¶og
 
__NR_sy¶og


	)

673 
	#SYS_ãe
 
__NR_ãe


	)

674 
	#SYS_tgkûl
 
__NR_tgkûl


	)

675 
	#SYS_time
 
__NR_time


	)

676 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

677 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

678 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

679 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

680 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

681 
	#SYS_timîfd_¸óã
 
__NR_timîfd_¸óã


	)

682 
	#SYS_timîfd_gëtime
 
__NR_timîfd_gëtime


	)

683 
	#SYS_timîfd_£âime
 
__NR_timîfd_£âime


	)

684 
	#SYS_times
 
__NR_times


	)

685 
	#SYS_tkûl
 
__NR_tkûl


	)

686 
	#SYS_åunˇã
 
__NR_åunˇã


	)

687 
	#SYS_tuxˇŒ
 
__NR_tuxˇŒ


	)

688 
	#SYS_umask
 
__NR_umask


	)

689 
	#SYS_umou¡2
 
__NR_umou¡2


	)

690 
	#SYS_u«me
 
__NR_u«me


	)

691 
	#SYS_u∆ök
 
__NR_u∆ök


	)

692 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

693 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

694 
	#SYS_u£lib
 
__NR_u£lib


	)

695 
	#SYS_u£rÁu…fd
 
__NR_u£rÁu…fd


	)

696 
	#SYS_u°©
 
__NR_u°©


	)

697 
	#SYS_utime
 
__NR_utime


	)

698 
	#SYS_utimíßt
 
__NR_utimíßt


	)

699 
	#SYS_utimes
 
__NR_utimes


	)

700 
	#SYS_vf‹k
 
__NR_vf‹k


	)

701 
	#SYS_vh™gup
 
__NR_vh™gup


	)

702 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

703 
	#SYS_v£rvî
 
__NR_v£rvî


	)

704 
	#SYS_waô4
 
__NR_waô4


	)

705 
	#SYS_waôid
 
__NR_waôid


	)

706 
	#SYS_wrôe
 
__NR_wrôe


	)

707 
	#SYS_wrôev
 
__NR_wrôev


	)

709 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


710 
	#SYS_ac˚±
 
__NR_ac˚±


	)

711 
	#SYS_ac˚±4
 
__NR_ac˚±4


	)

712 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

713 
	#SYS_ac˘
 
__NR_ac˘


	)

714 
	#SYS_add_key
 
__NR_add_key


	)

715 
	#SYS_adjtimex
 
__NR_adjtimex


	)

716 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

717 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

718 
	#SYS_¨ch_¥˘l
 
__NR_¨ch_¥˘l


	)

719 
	#SYS_böd
 
__NR_böd


	)

720 
	#SYS_bpf
 
__NR_bpf


	)

721 
	#SYS_brk
 
__NR_brk


	)

722 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

723 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

724 
	#SYS_chdú
 
__NR_chdú


	)

725 
	#SYS_chmod
 
__NR_chmod


	)

726 
	#SYS_chown
 
__NR_chown


	)

727 
	#SYS_chroŸ
 
__NR_chroŸ


	)

728 
	#SYS_˛ock_adjtime
 
__NR_˛ock_adjtime


	)

729 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

730 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

731 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

732 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

733 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

734 
	#SYS_˛o£
 
__NR_˛o£


	)

735 
	#SYS_c⁄√˘
 
__NR_c⁄√˘


	)

736 
	#SYS_¸ót
 
__NR_¸ót


	)

737 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

738 
	#SYS_dup
 
__NR_dup


	)

739 
	#SYS_dup2
 
__NR_dup2


	)

740 
	#SYS_dup3
 
__NR_dup3


	)

741 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

742 
	#SYS_ïﬁl_¸óã1
 
__NR_ïﬁl_¸óã1


	)

743 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

744 
	#SYS_ïﬁl_pwaô
 
__NR_ïﬁl_pwaô


	)

745 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

746 
	#SYS_evítfd
 
__NR_evítfd


	)

747 
	#SYS_evítfd2
 
__NR_evítfd2


	)

748 
	#SYS_execve
 
__NR_execve


	)

749 
	#SYS_execvót
 
__NR_execvót


	)

750 
	#SYS_exô
 
__NR_exô


	)

751 
	#SYS_exô_group
 
__NR_exô_group


	)

752 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

753 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

754 
	#SYS_ÁŒoˇã
 
__NR_ÁŒoˇã


	)

755 
	#SYS_ÁnŸify_öô
 
__NR_ÁnŸify_öô


	)

756 
	#SYS_ÁnŸify_m¨k
 
__NR_ÁnŸify_m¨k


	)

757 
	#SYS_fchdú
 
__NR_fchdú


	)

758 
	#SYS_fchmod
 
__NR_fchmod


	)

759 
	#SYS_fchmod©
 
__NR_fchmod©


	)

760 
	#SYS_fchown
 
__NR_fchown


	)

761 
	#SYS_fchow«t
 
__NR_fchow«t


	)

762 
	#SYS_f˙é
 
__NR_f˙é


	)

763 
	#SYS_fd©async
 
__NR_fd©async


	)

764 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

765 
	#SYS_föô_moduÀ
 
__NR_föô_moduÀ


	)

766 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

767 
	#SYS_Êock
 
__NR_Êock


	)

768 
	#SYS_f‹k
 
__NR_f‹k


	)

769 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

770 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

771 
	#SYS_f°©
 
__NR_f°©


	)

772 
	#SYS_f°©fs
 
__NR_f°©fs


	)

773 
	#SYS_fsync
 
__NR_fsync


	)

774 
	#SYS_·runˇã
 
__NR_·runˇã


	)

775 
	#SYS_fuãx
 
__NR_fuãx


	)

776 
	#SYS_futimeßt
 
__NR_futimeßt


	)

777 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

778 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

779 
	#SYS_gë˝u
 
__NR_gë˝u


	)

780 
	#SYS_gëcwd
 
__NR_gëcwd


	)

781 
	#SYS_gëdíts
 
__NR_gëdíts


	)

782 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

783 
	#SYS_gëegid
 
__NR_gëegid


	)

784 
	#SYS_gëeuid
 
__NR_gëeuid


	)

785 
	#SYS_gëgid
 
__NR_gëgid


	)

786 
	#SYS_gëgroups
 
__NR_gëgroups


	)

787 
	#SYS_gëôimî
 
__NR_gëôimî


	)

788 
	#SYS_gë≥î«me
 
__NR_gë≥î«me


	)

789 
	#SYS_gëpgid
 
__NR_gëpgid


	)

790 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

791 
	#SYS_gëpid
 
__NR_gëpid


	)

792 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

793 
	#SYS_gëµid
 
__NR_gëµid


	)

794 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

795 
	#SYS_gëøndom
 
__NR_gëøndom


	)

796 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

797 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

798 
	#SYS_gëæimô
 
__NR_gëæimô


	)

799 
	#SYS_gërußge
 
__NR_gërußge


	)

800 
	#SYS_gësid
 
__NR_gësid


	)

801 
	#SYS_gësock«me
 
__NR_gësock«me


	)

802 
	#SYS_gësock›t
 
__NR_gësock›t


	)

803 
	#SYS_gëtid
 
__NR_gëtid


	)

804 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

805 
	#SYS_gëuid
 
__NR_gëuid


	)

806 
	#SYS_gëx©å
 
__NR_gëx©å


	)

807 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

808 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

809 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

810 
	#SYS_öŸify_öô1
 
__NR_öŸify_öô1


	)

811 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

812 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

813 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

814 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

815 
	#SYS_io_£tup
 
__NR_io_£tup


	)

816 
	#SYS_io_submô
 
__NR_io_submô


	)

817 
	#SYS_io˘l
 
__NR_io˘l


	)

818 
	#SYS_i›îm
 
__NR_i›îm


	)

819 
	#SYS_i›l
 
__NR_i›l


	)

820 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

821 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

822 
	#SYS_kcmp
 
__NR_kcmp


	)

823 
	#SYS_kexec_fûe_lﬂd
 
__NR_kexec_fûe_lﬂd


	)

824 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

825 
	#SYS_key˘l
 
__NR_key˘l


	)

826 
	#SYS_kûl
 
__NR_kûl


	)

827 
	#SYS_lchown
 
__NR_lchown


	)

828 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

829 
	#SYS_lök
 
__NR_lök


	)

830 
	#SYS_lök©
 
__NR_lök©


	)

831 
	#SYS_li°í
 
__NR_li°í


	)

832 
	#SYS_li°x©å
 
__NR_li°x©å


	)

833 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

834 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

835 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

836 
	#SYS_l£ek
 
__NR_l£ek


	)

837 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

838 
	#SYS_l°©
 
__NR_l°©


	)

839 
	#SYS_madvi£
 
__NR_madvi£


	)

840 
	#SYS_mböd
 
__NR_mböd


	)

841 
	#SYS_memb¨rõr
 
__NR_memb¨rõr


	)

842 
	#SYS_memfd_¸óã
 
__NR_memfd_¸óã


	)

843 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

844 
	#SYS_möc‹e
 
__NR_möc‹e


	)

845 
	#SYS_mkdú
 
__NR_mkdú


	)

846 
	#SYS_mkdú©
 
__NR_mkdú©


	)

847 
	#SYS_mknod
 
__NR_mknod


	)

848 
	#SYS_mknod©
 
__NR_mknod©


	)

849 
	#SYS_mlock
 
__NR_mlock


	)

850 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

851 
	#SYS_mm≠
 
__NR_mm≠


	)

852 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

853 
	#SYS_mou¡
 
__NR_mou¡


	)

854 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

855 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

856 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

857 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

858 
	#SYS_mq_›í
 
__NR_mq_›í


	)

859 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

860 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

861 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

862 
	#SYS_mªm≠
 
__NR_mªm≠


	)

863 
	#SYS_msg˘l
 
__NR_msg˘l


	)

864 
	#SYS_msggë
 
__NR_msggë


	)

865 
	#SYS_msgrcv
 
__NR_msgrcv


	)

866 
	#SYS_msg¢d
 
__NR_msg¢d


	)

867 
	#SYS_msync
 
__NR_msync


	)

868 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

869 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

870 
	#SYS_munm≠
 
__NR_munm≠


	)

871 
	#SYS_«me_to_h™dÀ_©
 
__NR_«me_to_h™dÀ_©


	)

872 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

873 
	#SYS_√wf°©©
 
__NR_√wf°©©


	)

874 
	#SYS_›í
 
__NR_›í


	)

875 
	#SYS_›í_by_h™dÀ_©
 
__NR_›í_by_h™dÀ_©


	)

876 
	#SYS_›í©
 
__NR_›í©


	)

877 
	#SYS_∑u£
 
__NR_∑u£


	)

878 
	#SYS_≥rf_evít_›í
 
__NR_≥rf_evít_›í


	)

879 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

880 
	#SYS_pùe
 
__NR_pùe


	)

881 
	#SYS_pùe2
 
__NR_pùe2


	)

882 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

883 
	#SYS_pﬁl
 
__NR_pﬁl


	)

884 
	#SYS_µﬁl
 
__NR_µﬁl


	)

885 
	#SYS_¥˘l
 
__NR_¥˘l


	)

886 
	#SYS_¥ód64
 
__NR_¥ód64


	)

887 
	#SYS_¥ódv
 
__NR_¥ódv


	)

888 
	#SYS_¥limô64
 
__NR_¥limô64


	)

889 
	#SYS_¥o˚ss_vm_ªadv
 
__NR_¥o˚ss_vm_ªadv


	)

890 
	#SYS_¥o˚ss_vm_wrôev
 
__NR_¥o˚ss_vm_wrôev


	)

891 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

892 
	#SYS_±ø˚
 
__NR_±ø˚


	)

893 
	#SYS_puçmsg
 
__NR_puçmsg


	)

894 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

895 
	#SYS_pwrôev
 
__NR_pwrôev


	)

896 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

897 
	#SYS_ªad
 
__NR_ªad


	)

898 
	#SYS_ªadahód
 
__NR_ªadahód


	)

899 
	#SYS_ªadlök
 
__NR_ªadlök


	)

900 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

901 
	#SYS_ªadv
 
__NR_ªadv


	)

902 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

903 
	#SYS_ªcv‰om
 
__NR_ªcv‰om


	)

904 
	#SYS_ªcvmmsg
 
__NR_ªcvmmsg


	)

905 
	#SYS_ªcvmsg
 
__NR_ªcvmsg


	)

906 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

907 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

908 
	#SYS_ª«me
 
__NR_ª«me


	)

909 
	#SYS_ª«mót
 
__NR_ª«mót


	)

910 
	#SYS_ª«mót2
 
__NR_ª«mót2


	)

911 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

912 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

913 
	#SYS_rmdú
 
__NR_rmdú


	)

914 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

915 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

916 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

917 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

918 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

919 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

920 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

921 
	#SYS_π_tgsigqueueöfo
 
__NR_π_tgsigqueueöfo


	)

922 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

923 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

924 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

925 
	#SYS_sched_gë©å
 
__NR_sched_gë©å


	)

926 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

927 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

928 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

929 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

930 
	#SYS_sched_£èâr
 
__NR_sched_£èâr


	)

931 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

932 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

933 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

934 
	#SYS_£ccomp
 
__NR_£ccomp


	)

935 
	#SYS_£curôy
 
__NR_£curôy


	)

936 
	#SYS_£À˘
 
__NR_£À˘


	)

937 
	#SYS_£m˘l
 
__NR_£m˘l


	)

938 
	#SYS_£mgë
 
__NR_£mgë


	)

939 
	#SYS_£m›
 
__NR_£m›


	)

940 
	#SYS_£mtimed›
 
__NR_£mtimed›


	)

941 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

942 
	#SYS_£ndmmsg
 
__NR_£ndmmsg


	)

943 
	#SYS_£ndmsg
 
__NR_£ndmsg


	)

944 
	#SYS_£ndto
 
__NR_£ndto


	)

945 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

946 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

947 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

948 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

949 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

950 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

951 
	#SYS_£tgid
 
__NR_£tgid


	)

952 
	#SYS_£tgroups
 
__NR_£tgroups


	)

953 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

954 
	#SYS_£tôimî
 
__NR_£tôimî


	)

955 
	#SYS_£äs
 
__NR_£äs


	)

956 
	#SYS_£çgid
 
__NR_£çgid


	)

957 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

958 
	#SYS_£åegid
 
__NR_£åegid


	)

959 
	#SYS_£åesgid
 
__NR_£åesgid


	)

960 
	#SYS_£åesuid
 
__NR_£åesuid


	)

961 
	#SYS_£åeuid
 
__NR_£åeuid


	)

962 
	#SYS_£ålimô
 
__NR_£ålimô


	)

963 
	#SYS_£tsid
 
__NR_£tsid


	)

964 
	#SYS_£tsock›t
 
__NR_£tsock›t


	)

965 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

966 
	#SYS_£tuid
 
__NR_£tuid


	)

967 
	#SYS_£tx©å
 
__NR_£tx©å


	)

968 
	#SYS_shm©
 
__NR_shm©


	)

969 
	#SYS_shm˘l
 
__NR_shm˘l


	)

970 
	#SYS_shmdt
 
__NR_shmdt


	)

971 
	#SYS_shmgë
 
__NR_shmgë


	)

972 
	#SYS_shutdown
 
__NR_shutdown


	)

973 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

974 
	#SYS_sig«lfd
 
__NR_sig«lfd


	)

975 
	#SYS_sig«lfd4
 
__NR_sig«lfd4


	)

976 
	#SYS_sockë
 
__NR_sockë


	)

977 
	#SYS_sockë∑ú
 
__NR_sockë∑ú


	)

978 
	#SYS_•li˚
 
__NR_•li˚


	)

979 
	#SYS_°©
 
__NR_°©


	)

980 
	#SYS_°©fs
 
__NR_°©fs


	)

981 
	#SYS_sw≠off
 
__NR_sw≠off


	)

982 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

983 
	#SYS_symlök
 
__NR_symlök


	)

984 
	#SYS_symlök©
 
__NR_symlök©


	)

985 
	#SYS_sync
 
__NR_sync


	)

986 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

987 
	#SYS_syncfs
 
__NR_syncfs


	)

988 
	#SYS_sysfs
 
__NR_sysfs


	)

989 
	#SYS_sysöfo
 
__NR_sysöfo


	)

990 
	#SYS_sy¶og
 
__NR_sy¶og


	)

991 
	#SYS_ãe
 
__NR_ãe


	)

992 
	#SYS_tgkûl
 
__NR_tgkûl


	)

993 
	#SYS_time
 
__NR_time


	)

994 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

995 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

996 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

997 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

998 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

999 
	#SYS_timîfd_¸óã
 
__NR_timîfd_¸óã


	)

1000 
	#SYS_timîfd_gëtime
 
__NR_timîfd_gëtime


	)

1001 
	#SYS_timîfd_£âime
 
__NR_timîfd_£âime


	)

1002 
	#SYS_times
 
__NR_times


	)

1003 
	#SYS_tkûl
 
__NR_tkûl


	)

1004 
	#SYS_åunˇã
 
__NR_åunˇã


	)

1005 
	#SYS_tuxˇŒ
 
__NR_tuxˇŒ


	)

1006 
	#SYS_umask
 
__NR_umask


	)

1007 
	#SYS_umou¡2
 
__NR_umou¡2


	)

1008 
	#SYS_u«me
 
__NR_u«me


	)

1009 
	#SYS_u∆ök
 
__NR_u∆ök


	)

1010 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

1011 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

1012 
	#SYS_u£rÁu…fd
 
__NR_u£rÁu…fd


	)

1013 
	#SYS_u°©
 
__NR_u°©


	)

1014 
	#SYS_utime
 
__NR_utime


	)

1015 
	#SYS_utimíßt
 
__NR_utimíßt


	)

1016 
	#SYS_utimes
 
__NR_utimes


	)

1017 
	#SYS_vf‹k
 
__NR_vf‹k


	)

1018 
	#SYS_vh™gup
 
__NR_vh™gup


	)

1019 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

1020 
	#SYS_waô4
 
__NR_waô4


	)

1021 
	#SYS_waôid
 
__NR_waôid


	)

1022 
	#SYS_wrôe
 
__NR_wrôe


	)

1023 
	#SYS_wrôev
 
__NR_wrôev


	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 #ifde‡
__x86_64__


79 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

82 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

59 
	#__STDC_ISO_10646__
 201304L

	)

62 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

59 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

60 
	#__THROW
 
	`throw
 ()

	)

61 
	#__THROWNL
 
	`throw
 ()

	)

62 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__THROW


	)

65 
	#__THROWNL


	)

66 
	#__NTH
(
f˘
Ë
	)
fct

72 
	#__ölöe


	)

74 
	#__THROW


	)

75 
	#__THROWNL


	)

76 
	#__NTH
(
f˘
Ë
	)
fct

82 
	#__P
(
¨gs
Ë
	)
args

83 
	#__PMT
(
¨gs
Ë
	)
args

88 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

89 
	#__STRING
(
x
Ë#x

	)

92 
	#__±r_t
 *

	)

93 
	#__l⁄g_doubÀ_t
 

	)

97 #ifdef 
__˝lu•lus


98 
	#__BEGIN_DECLS
 "C" {

	)

99 
	#__END_DECLS
 }

	)

101 
	#__BEGIN_DECLS


	)

102 
	#__END_DECLS


	)

111 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


112 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

113 
	#__END_NAMESPACE_STD
 }

	)

114 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

115 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

116 
	#__END_NAMESPACE_C99
 }

	)

117 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

122 
	#__BEGIN_NAMESPACE_STD


	)

123 
	#__END_NAMESPACE_STD


	)

124 
	#__USING_NAMESPACE_STD
(
«me
)

	)

125 
	#__BEGIN_NAMESPACE_C99


	)

126 
	#__END_NAMESPACE_C99


	)

127 
	#__USING_NAMESPACE_C99
(
«me
)

	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

182 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

184 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

185 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

186 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

187 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

189 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

190 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

203 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

204 
	#__©åibuã__
(
xyz
Ë

	)

210 #i‡
__GNUC_PREREQ
 (2,96)

211 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

213 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (4, 3)

219 
	#__©åibuã_Æloc_size__
(
∑øms
) \

220 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

222 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

228 #i‡
__GNUC_PREREQ
 (2,96)

229 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

231 
	#__©åibuã_puª__


	)

235 #i‡
__GNUC_PREREQ
 (2,5)

236 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

238 
	#__©åibuã_c⁄°__


	)

244 #i‡
__GNUC_PREREQ
 (3,1)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

246 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

248 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

249 
	#__©åibuã_noölöe__


	)

253 #i‡
__GNUC_PREREQ
 (3,2)

254 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

256 
	#__©åibuã_dïªˇãd__


	)

265 #i‡
__GNUC_PREREQ
 (2,8)

266 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

268 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

275 #i‡
__GNUC_PREREQ
 (2,97)

276 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

277 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

279 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

284 #i‡
__GNUC_PREREQ
 (3,3)

285 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

287 
	#__n⁄nuŒ
(
∑øms
)

	)

292 #i‡
__GNUC_PREREQ
 (3,4)

293 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

294 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

295 #i‡
__USE_FORTIFY_LEVEL
 > 0

296 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

299 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

301 #i‚de‡
__wur


302 
	#__wur


	)

306 #i‡
__GNUC_PREREQ
 (3,2)

307 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

309 
	#__Æways_ölöe
 
__ölöe


	)

314 #i‡
__GNUC_PREREQ
 (4,3)

315 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

317 
	#__©åibuã_¨tificül__


	)

329 #i‡(!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

330 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

331 || 
deföed
 
__GNUC_GNU_INLINE__
)))

332 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


333 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

334 
	#__exã∫_Æways_ölöe
 \

335 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

337 
	#__exã∫_ölöe
 
__ölöe


	)

338 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #ifde‡
__exã∫_Æways_ölöe


343 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

348 #i‡
__GNUC_PREREQ
 (4,3)

349 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

350 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

357 #i‡!
__GNUC_PREREQ
 (2,8)

358 
	#__exãnsi⁄__


	)

362 #i‡!
__GNUC_PREREQ
 (2,92)

363 
	#__ª°ri˘


	)

369 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


370 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

372 #ifde‡
__GNUC__


373 
	#__ª°ri˘_¨r


	)

375 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

376 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

379 
	#__ª°ri˘_¨r


	)

384 #i‡
__GNUC__
 >= 3

385 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

386 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

388 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

389 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

392 #i‡(!
deföed
 
_N‹ëu∫
 \

393 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

394 && !
	$__GNUC_PREREQ
 (4,7))

395 #i‡
	`__GNUC_PREREQ
 (2,8)

396 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

398 
	#_N‹ëu∫


	)

402 
	~<bôs/w‹dsize.h
>

404 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


405 
	#__LDBL_COMPAT
 1

	)

406 #ifde‡
__REDIRECT


407 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

408 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

409 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

410 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

411 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

412 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

413 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

414 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

415 
	#__LDBL_REDIR_DECL
(
«me
) \

416 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

417 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

418 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

419 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

420 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

423 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


424 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

425 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

426 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

427 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

428 
	#__LDBL_REDIR_DECL
(
«me
)

	)

429 #ifde‡
__REDIRECT


430 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

431 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

432 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H


20 
	#_SYS_SYSMACROS_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


26 
__exãnsi⁄__


27 
	$gnu_dev_maj‹
 (
__dev
)

28 
__THROW
 
__©åibuã_c⁄°__
;

29 
__exãnsi⁄__


30 
	$gnu_dev_mö‹
 (
__dev
)

31 
__THROW
 
__©åibuã_c⁄°__
;

32 
__exãnsi⁄__


33 
	$gnu_dev_makedev
 (
__maj‹
,

34 
__mö‹
)

35 
__THROW
 
__©åibuã_c⁄°__
;

37 #ifde‡
__USE_EXTERN_INLINES


38 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

39 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

41  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

42 
	}
}

44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

47  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

53  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

54 | (((Ë(
__mö‹
 & ~0xff)) << 12)

55 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

56 
	}
}

58 
	g__END_DECLS


61 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

62 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

63 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/asm/unistd_32.h

1 #i‚de‡
_ASM_X86_UNISTD_32_H


2 
	#_ASM_X86_UNISTD_32_H
 1

	)

4 
	#__NR_ª°¨t_sysˇŒ
 0

	)

5 
	#__NR_exô
 1

	)

6 
	#__NR_f‹k
 2

	)

7 
	#__NR_ªad
 3

	)

8 
	#__NR_wrôe
 4

	)

9 
	#__NR_›í
 5

	)

10 
	#__NR_˛o£
 6

	)

11 
	#__NR_waôpid
 7

	)

12 
	#__NR_¸ót
 8

	)

13 
	#__NR_lök
 9

	)

14 
	#__NR_u∆ök
 10

	)

15 
	#__NR_execve
 11

	)

16 
	#__NR_chdú
 12

	)

17 
	#__NR_time
 13

	)

18 
	#__NR_mknod
 14

	)

19 
	#__NR_chmod
 15

	)

20 
	#__NR_lchown
 16

	)

21 
	#__NR_bªak
 17

	)

22 
	#__NR_ﬁd°©
 18

	)

23 
	#__NR_l£ek
 19

	)

24 
	#__NR_gëpid
 20

	)

25 
	#__NR_mou¡
 21

	)

26 
	#__NR_umou¡
 22

	)

27 
	#__NR_£tuid
 23

	)

28 
	#__NR_gëuid
 24

	)

29 
	#__NR_°ime
 25

	)

30 
	#__NR_±ø˚
 26

	)

31 
	#__NR_Æ¨m
 27

	)

32 
	#__NR_ﬁdf°©
 28

	)

33 
	#__NR_∑u£
 29

	)

34 
	#__NR_utime
 30

	)

35 
	#__NR_°ty
 31

	)

36 
	#__NR_gây
 32

	)

37 
	#__NR_ac˚ss
 33

	)

38 
	#__NR_ni˚
 34

	)

39 
	#__NR_·ime
 35

	)

40 
	#__NR_sync
 36

	)

41 
	#__NR_kûl
 37

	)

42 
	#__NR_ª«me
 38

	)

43 
	#__NR_mkdú
 39

	)

44 
	#__NR_rmdú
 40

	)

45 
	#__NR_dup
 41

	)

46 
	#__NR_pùe
 42

	)

47 
	#__NR_times
 43

	)

48 
	#__NR_¥of
 44

	)

49 
	#__NR_brk
 45

	)

50 
	#__NR_£tgid
 46

	)

51 
	#__NR_gëgid
 47

	)

52 
	#__NR_sig«l
 48

	)

53 
	#__NR_gëeuid
 49

	)

54 
	#__NR_gëegid
 50

	)

55 
	#__NR_ac˘
 51

	)

56 
	#__NR_umou¡2
 52

	)

57 
	#__NR_lock
 53

	)

58 
	#__NR_io˘l
 54

	)

59 
	#__NR_f˙é
 55

	)

60 
	#__NR_mpx
 56

	)

61 
	#__NR_£çgid
 57

	)

62 
	#__NR_ulimô
 58

	)

63 
	#__NR_ﬁdﬁdu«me
 59

	)

64 
	#__NR_umask
 60

	)

65 
	#__NR_chroŸ
 61

	)

66 
	#__NR_u°©
 62

	)

67 
	#__NR_dup2
 63

	)

68 
	#__NR_gëµid
 64

	)

69 
	#__NR_gëpgΩ
 65

	)

70 
	#__NR_£tsid
 66

	)

71 
	#__NR_siga˘i⁄
 67

	)

72 
	#__NR_sgëmask
 68

	)

73 
	#__NR_s£tmask
 69

	)

74 
	#__NR_£åeuid
 70

	)

75 
	#__NR_£åegid
 71

	)

76 
	#__NR_sigsu•íd
 72

	)

77 
	#__NR_sig≥ndög
 73

	)

78 
	#__NR_£tho°«me
 74

	)

79 
	#__NR_£ålimô
 75

	)

80 
	#__NR_gëæimô
 76

	)

81 
	#__NR_gërußge
 77

	)

82 
	#__NR_gëtimeofday
 78

	)

83 
	#__NR_£âimeofday
 79

	)

84 
	#__NR_gëgroups
 80

	)

85 
	#__NR_£tgroups
 81

	)

86 
	#__NR_£À˘
 82

	)

87 
	#__NR_symlök
 83

	)

88 
	#__NR_ﬁdl°©
 84

	)

89 
	#__NR_ªadlök
 85

	)

90 
	#__NR_u£lib
 86

	)

91 
	#__NR_sw≠⁄
 87

	)

92 
	#__NR_ªboŸ
 88

	)

93 
	#__NR_ªaddú
 89

	)

94 
	#__NR_mm≠
 90

	)

95 
	#__NR_munm≠
 91

	)

96 
	#__NR_åunˇã
 92

	)

97 
	#__NR_·runˇã
 93

	)

98 
	#__NR_fchmod
 94

	)

99 
	#__NR_fchown
 95

	)

100 
	#__NR_gë¥i‹ôy
 96

	)

101 
	#__NR_£çri‹ôy
 97

	)

102 
	#__NR_¥ofû
 98

	)

103 
	#__NR_°©fs
 99

	)

104 
	#__NR_f°©fs
 100

	)

105 
	#__NR_i›îm
 101

	)

106 
	#__NR_sockëˇŒ
 102

	)

107 
	#__NR_sy¶og
 103

	)

108 
	#__NR_£tôimî
 104

	)

109 
	#__NR_gëôimî
 105

	)

110 
	#__NR_°©
 106

	)

111 
	#__NR_l°©
 107

	)

112 
	#__NR_f°©
 108

	)

113 
	#__NR_ﬁdu«me
 109

	)

114 
	#__NR_i›l
 110

	)

115 
	#__NR_vh™gup
 111

	)

116 
	#__NR_idÀ
 112

	)

117 
	#__NR_vm86ﬁd
 113

	)

118 
	#__NR_waô4
 114

	)

119 
	#__NR_sw≠off
 115

	)

120 
	#__NR_sysöfo
 116

	)

121 
	#__NR_ùc
 117

	)

122 
	#__NR_fsync
 118

	)

123 
	#__NR_sigªtu∫
 119

	)

124 
	#__NR_˛⁄e
 120

	)

125 
	#__NR_£tdomaö«me
 121

	)

126 
	#__NR_u«me
 122

	)

127 
	#__NR_modify_ldt
 123

	)

128 
	#__NR_adjtimex
 124

	)

129 
	#__NR_m¥Ÿe˘
 125

	)

130 
	#__NR_sig¥ocmask
 126

	)

131 
	#__NR_¸óã_moduÀ
 127

	)

132 
	#__NR_öô_moduÀ
 128

	)

133 
	#__NR_dñëe_moduÀ
 129

	)

134 
	#__NR_gë_kî√l_syms
 130

	)

135 
	#__NR_quŸa˘l
 131

	)

136 
	#__NR_gëpgid
 132

	)

137 
	#__NR_fchdú
 133

	)

138 
	#__NR_bdÊush
 134

	)

139 
	#__NR_sysfs
 135

	)

140 
	#__NR_≥rs⁄Æôy
 136

	)

141 
	#__NR_afs_sysˇŒ
 137

	)

142 
	#__NR_£tfsuid
 138

	)

143 
	#__NR_£tfsgid
 139

	)

144 
	#__NR__Œ£ek
 140

	)

145 
	#__NR_gëdíts
 141

	)

146 
	#__NR__√w£À˘
 142

	)

147 
	#__NR_Êock
 143

	)

148 
	#__NR_msync
 144

	)

149 
	#__NR_ªadv
 145

	)

150 
	#__NR_wrôev
 146

	)

151 
	#__NR_gësid
 147

	)

152 
	#__NR_fd©async
 148

	)

153 
	#__NR__sys˘l
 149

	)

154 
	#__NR_mlock
 150

	)

155 
	#__NR_mu∆ock
 151

	)

156 
	#__NR_mlockÆl
 152

	)

157 
	#__NR_mu∆ockÆl
 153

	)

158 
	#__NR_sched_£ç¨am
 154

	)

159 
	#__NR_sched_gë∑øm
 155

	)

160 
	#__NR_sched_£tscheduÀr
 156

	)

161 
	#__NR_sched_gëscheduÀr
 157

	)

162 
	#__NR_sched_yõld
 158

	)

163 
	#__NR_sched_gë_¥i‹ôy_max
 159

	)

164 
	#__NR_sched_gë_¥i‹ôy_mö
 160

	)

165 
	#__NR_sched_º_gë_öãrvÆ
 161

	)

166 
	#__NR_«no¶ìp
 162

	)

167 
	#__NR_mªm≠
 163

	)

168 
	#__NR_£åesuid
 164

	)

169 
	#__NR_gëªsuid
 165

	)

170 
	#__NR_vm86
 166

	)

171 
	#__NR_quîy_moduÀ
 167

	)

172 
	#__NR_pﬁl
 168

	)

173 
	#__NR_nfs£rv˘l
 169

	)

174 
	#__NR_£åesgid
 170

	)

175 
	#__NR_gëªsgid
 171

	)

176 
	#__NR_¥˘l
 172

	)

177 
	#__NR_π_sigªtu∫
 173

	)

178 
	#__NR_π_siga˘i⁄
 174

	)

179 
	#__NR_π_sig¥ocmask
 175

	)

180 
	#__NR_π_sig≥ndög
 176

	)

181 
	#__NR_π_sigtimedwaô
 177

	)

182 
	#__NR_π_sigqueueöfo
 178

	)

183 
	#__NR_π_sigsu•íd
 179

	)

184 
	#__NR_¥ód64
 180

	)

185 
	#__NR_pwrôe64
 181

	)

186 
	#__NR_chown
 182

	)

187 
	#__NR_gëcwd
 183

	)

188 
	#__NR_ˇpgë
 184

	)

189 
	#__NR_ˇp£t
 185

	)

190 
	#__NR_sigÆt°ack
 186

	)

191 
	#__NR_£ndfûe
 187

	)

192 
	#__NR_gëpmsg
 188

	)

193 
	#__NR_puçmsg
 189

	)

194 
	#__NR_vf‹k
 190

	)

195 
	#__NR_ugëæimô
 191

	)

196 
	#__NR_mm≠2
 192

	)

197 
	#__NR_åunˇã64
 193

	)

198 
	#__NR_·runˇã64
 194

	)

199 
	#__NR_°©64
 195

	)

200 
	#__NR_l°©64
 196

	)

201 
	#__NR_f°©64
 197

	)

202 
	#__NR_lchown32
 198

	)

203 
	#__NR_gëuid32
 199

	)

204 
	#__NR_gëgid32
 200

	)

205 
	#__NR_gëeuid32
 201

	)

206 
	#__NR_gëegid32
 202

	)

207 
	#__NR_£åeuid32
 203

	)

208 
	#__NR_£åegid32
 204

	)

209 
	#__NR_gëgroups32
 205

	)

210 
	#__NR_£tgroups32
 206

	)

211 
	#__NR_fchown32
 207

	)

212 
	#__NR_£åesuid32
 208

	)

213 
	#__NR_gëªsuid32
 209

	)

214 
	#__NR_£åesgid32
 210

	)

215 
	#__NR_gëªsgid32
 211

	)

216 
	#__NR_chown32
 212

	)

217 
	#__NR_£tuid32
 213

	)

218 
	#__NR_£tgid32
 214

	)

219 
	#__NR_£tfsuid32
 215

	)

220 
	#__NR_£tfsgid32
 216

	)

221 
	#__NR_pivŸ_roŸ
 217

	)

222 
	#__NR_möc‹e
 218

	)

223 
	#__NR_madvi£
 219

	)

224 
	#__NR_gëdíts64
 220

	)

225 
	#__NR_f˙é64
 221

	)

226 
	#__NR_gëtid
 224

	)

227 
	#__NR_ªadahód
 225

	)

228 
	#__NR_£tx©å
 226

	)

229 
	#__NR_l£tx©å
 227

	)

230 
	#__NR_f£tx©å
 228

	)

231 
	#__NR_gëx©å
 229

	)

232 
	#__NR_lgëx©å
 230

	)

233 
	#__NR_fgëx©å
 231

	)

234 
	#__NR_li°x©å
 232

	)

235 
	#__NR_Œi°x©å
 233

	)

236 
	#__NR_Êi°x©å
 234

	)

237 
	#__NR_ªmovex©å
 235

	)

238 
	#__NR_Ãemovex©å
 236

	)

239 
	#__NR_‰emovex©å
 237

	)

240 
	#__NR_tkûl
 238

	)

241 
	#__NR_£ndfûe64
 239

	)

242 
	#__NR_fuãx
 240

	)

243 
	#__NR_sched_£èfföôy
 241

	)

244 
	#__NR_sched_gëafföôy
 242

	)

245 
	#__NR_£t_thªad_¨ó
 243

	)

246 
	#__NR_gë_thªad_¨ó
 244

	)

247 
	#__NR_io_£tup
 245

	)

248 
	#__NR_io_de°roy
 246

	)

249 
	#__NR_io_gëevíts
 247

	)

250 
	#__NR_io_submô
 248

	)

251 
	#__NR_io_ˇn˚l
 249

	)

252 
	#__NR_Ádvi£64
 250

	)

253 
	#__NR_exô_group
 252

	)

254 
	#__NR_lookup_dcookõ
 253

	)

255 
	#__NR_ïﬁl_¸óã
 254

	)

256 
	#__NR_ïﬁl_˘l
 255

	)

257 
	#__NR_ïﬁl_waô
 256

	)

258 
	#__NR_ªm≠_fûe_∑ges
 257

	)

259 
	#__NR_£t_tid_addªss
 258

	)

260 
	#__NR_timî_¸óã
 259

	)

261 
	#__NR_timî_£âime
 260

	)

262 
	#__NR_timî_gëtime
 261

	)

263 
	#__NR_timî_gëovîrun
 262

	)

264 
	#__NR_timî_dñëe
 263

	)

265 
	#__NR_˛ock_£âime
 264

	)

266 
	#__NR_˛ock_gëtime
 265

	)

267 
	#__NR_˛ock_gëªs
 266

	)

268 
	#__NR_˛ock_«no¶ìp
 267

	)

269 
	#__NR_°©fs64
 268

	)

270 
	#__NR_f°©fs64
 269

	)

271 
	#__NR_tgkûl
 270

	)

272 
	#__NR_utimes
 271

	)

273 
	#__NR_Ádvi£64_64
 272

	)

274 
	#__NR_v£rvî
 273

	)

275 
	#__NR_mböd
 274

	)

276 
	#__NR_gë_mempﬁicy
 275

	)

277 
	#__NR_£t_mempﬁicy
 276

	)

278 
	#__NR_mq_›í
 277

	)

279 
	#__NR_mq_u∆ök
 278

	)

280 
	#__NR_mq_timed£nd
 279

	)

281 
	#__NR_mq_timedª˚ive
 280

	)

282 
	#__NR_mq_nŸify
 281

	)

283 
	#__NR_mq_gë£èâr
 282

	)

284 
	#__NR_kexec_lﬂd
 283

	)

285 
	#__NR_waôid
 284

	)

286 
	#__NR_add_key
 286

	)

287 
	#__NR_ªque°_key
 287

	)

288 
	#__NR_key˘l
 288

	)

289 
	#__NR_i›rio_£t
 289

	)

290 
	#__NR_i›rio_gë
 290

	)

291 
	#__NR_öŸify_öô
 291

	)

292 
	#__NR_öŸify_add_w©ch
 292

	)

293 
	#__NR_öŸify_rm_w©ch
 293

	)

294 
	#__NR_migøã_∑ges
 294

	)

295 
	#__NR_›í©
 295

	)

296 
	#__NR_mkdú©
 296

	)

297 
	#__NR_mknod©
 297

	)

298 
	#__NR_fchow«t
 298

	)

299 
	#__NR_futimeßt
 299

	)

300 
	#__NR_f°©©64
 300

	)

301 
	#__NR_u∆ök©
 301

	)

302 
	#__NR_ª«mót
 302

	)

303 
	#__NR_lök©
 303

	)

304 
	#__NR_symlök©
 304

	)

305 
	#__NR_ªadlök©
 305

	)

306 
	#__NR_fchmod©
 306

	)

307 
	#__NR_Ác˚sßt
 307

	)

308 
	#__NR_p£À˘6
 308

	)

309 
	#__NR_µﬁl
 309

	)

310 
	#__NR_unsh¨e
 310

	)

311 
	#__NR_£t_robu°_li°
 311

	)

312 
	#__NR_gë_robu°_li°
 312

	)

313 
	#__NR_•li˚
 313

	)

314 
	#__NR_sync_fûe_ønge
 314

	)

315 
	#__NR_ãe
 315

	)

316 
	#__NR_vm•li˚
 316

	)

317 
	#__NR_move_∑ges
 317

	)

318 
	#__NR_gë˝u
 318

	)

319 
	#__NR_ïﬁl_pwaô
 319

	)

320 
	#__NR_utimíßt
 320

	)

321 
	#__NR_sig«lfd
 321

	)

322 
	#__NR_timîfd_¸óã
 322

	)

323 
	#__NR_evítfd
 323

	)

324 
	#__NR_ÁŒoˇã
 324

	)

325 
	#__NR_timîfd_£âime
 325

	)

326 
	#__NR_timîfd_gëtime
 326

	)

327 
	#__NR_sig«lfd4
 327

	)

328 
	#__NR_evítfd2
 328

	)

329 
	#__NR_ïﬁl_¸óã1
 329

	)

330 
	#__NR_dup3
 330

	)

331 
	#__NR_pùe2
 331

	)

332 
	#__NR_öŸify_öô1
 332

	)

333 
	#__NR_¥ódv
 333

	)

334 
	#__NR_pwrôev
 334

	)

335 
	#__NR_π_tgsigqueueöfo
 335

	)

336 
	#__NR_≥rf_evít_›í
 336

	)

337 
	#__NR_ªcvmmsg
 337

	)

338 
	#__NR_ÁnŸify_öô
 338

	)

339 
	#__NR_ÁnŸify_m¨k
 339

	)

340 
	#__NR_¥limô64
 340

	)

341 
	#__NR_«me_to_h™dÀ_©
 341

	)

342 
	#__NR_›í_by_h™dÀ_©
 342

	)

343 
	#__NR_˛ock_adjtime
 343

	)

344 
	#__NR_syncfs
 344

	)

345 
	#__NR_£ndmmsg
 345

	)

346 
	#__NR_£äs
 346

	)

347 
	#__NR_¥o˚ss_vm_ªadv
 347

	)

348 
	#__NR_¥o˚ss_vm_wrôev
 348

	)

349 
	#__NR_kcmp
 349

	)

350 
	#__NR_föô_moduÀ
 350

	)

351 
	#__NR_sched_£èâr
 351

	)

352 
	#__NR_sched_gë©å
 352

	)

353 
	#__NR_ª«mót2
 353

	)

354 
	#__NR_£ccomp
 354

	)

355 
	#__NR_gëøndom
 355

	)

356 
	#__NR_memfd_¸óã
 356

	)

357 
	#__NR_bpf
 357

	)

358 
	#__NR_execvót
 358

	)

359 
	#__NR_sockë
 359

	)

360 
	#__NR_sockë∑ú
 360

	)

361 
	#__NR_böd
 361

	)

362 
	#__NR_c⁄√˘
 362

	)

363 
	#__NR_li°í
 363

	)

364 
	#__NR_ac˚±4
 364

	)

365 
	#__NR_gësock›t
 365

	)

366 
	#__NR_£tsock›t
 366

	)

367 
	#__NR_gësock«me
 367

	)

368 
	#__NR_gë≥î«me
 368

	)

369 
	#__NR_£ndto
 369

	)

370 
	#__NR_£ndmsg
 370

	)

371 
	#__NR_ªcv‰om
 371

	)

372 
	#__NR_ªcvmsg
 372

	)

373 
	#__NR_shutdown
 373

	)

374 
	#__NR_u£rÁu…fd
 374

	)

375 
	#__NR_memb¨rõr
 375

	)

376 
	#__NR_mlock2
 376

	)

	@/usr/include/asm/unistd_64.h

1 #i‚de‡
_ASM_X86_UNISTD_64_H


2 
	#_ASM_X86_UNISTD_64_H
 1

	)

4 
	#__NR_ªad
 0

	)

5 
	#__NR_wrôe
 1

	)

6 
	#__NR_›í
 2

	)

7 
	#__NR_˛o£
 3

	)

8 
	#__NR_°©
 4

	)

9 
	#__NR_f°©
 5

	)

10 
	#__NR_l°©
 6

	)

11 
	#__NR_pﬁl
 7

	)

12 
	#__NR_l£ek
 8

	)

13 
	#__NR_mm≠
 9

	)

14 
	#__NR_m¥Ÿe˘
 10

	)

15 
	#__NR_munm≠
 11

	)

16 
	#__NR_brk
 12

	)

17 
	#__NR_π_siga˘i⁄
 13

	)

18 
	#__NR_π_sig¥ocmask
 14

	)

19 
	#__NR_π_sigªtu∫
 15

	)

20 
	#__NR_io˘l
 16

	)

21 
	#__NR_¥ód64
 17

	)

22 
	#__NR_pwrôe64
 18

	)

23 
	#__NR_ªadv
 19

	)

24 
	#__NR_wrôev
 20

	)

25 
	#__NR_ac˚ss
 21

	)

26 
	#__NR_pùe
 22

	)

27 
	#__NR_£À˘
 23

	)

28 
	#__NR_sched_yõld
 24

	)

29 
	#__NR_mªm≠
 25

	)

30 
	#__NR_msync
 26

	)

31 
	#__NR_möc‹e
 27

	)

32 
	#__NR_madvi£
 28

	)

33 
	#__NR_shmgë
 29

	)

34 
	#__NR_shm©
 30

	)

35 
	#__NR_shm˘l
 31

	)

36 
	#__NR_dup
 32

	)

37 
	#__NR_dup2
 33

	)

38 
	#__NR_∑u£
 34

	)

39 
	#__NR_«no¶ìp
 35

	)

40 
	#__NR_gëôimî
 36

	)

41 
	#__NR_Æ¨m
 37

	)

42 
	#__NR_£tôimî
 38

	)

43 
	#__NR_gëpid
 39

	)

44 
	#__NR_£ndfûe
 40

	)

45 
	#__NR_sockë
 41

	)

46 
	#__NR_c⁄√˘
 42

	)

47 
	#__NR_ac˚±
 43

	)

48 
	#__NR_£ndto
 44

	)

49 
	#__NR_ªcv‰om
 45

	)

50 
	#__NR_£ndmsg
 46

	)

51 
	#__NR_ªcvmsg
 47

	)

52 
	#__NR_shutdown
 48

	)

53 
	#__NR_böd
 49

	)

54 
	#__NR_li°í
 50

	)

55 
	#__NR_gësock«me
 51

	)

56 
	#__NR_gë≥î«me
 52

	)

57 
	#__NR_sockë∑ú
 53

	)

58 
	#__NR_£tsock›t
 54

	)

59 
	#__NR_gësock›t
 55

	)

60 
	#__NR_˛⁄e
 56

	)

61 
	#__NR_f‹k
 57

	)

62 
	#__NR_vf‹k
 58

	)

63 
	#__NR_execve
 59

	)

64 
	#__NR_exô
 60

	)

65 
	#__NR_waô4
 61

	)

66 
	#__NR_kûl
 62

	)

67 
	#__NR_u«me
 63

	)

68 
	#__NR_£mgë
 64

	)

69 
	#__NR_£m›
 65

	)

70 
	#__NR_£m˘l
 66

	)

71 
	#__NR_shmdt
 67

	)

72 
	#__NR_msggë
 68

	)

73 
	#__NR_msg¢d
 69

	)

74 
	#__NR_msgrcv
 70

	)

75 
	#__NR_msg˘l
 71

	)

76 
	#__NR_f˙é
 72

	)

77 
	#__NR_Êock
 73

	)

78 
	#__NR_fsync
 74

	)

79 
	#__NR_fd©async
 75

	)

80 
	#__NR_åunˇã
 76

	)

81 
	#__NR_·runˇã
 77

	)

82 
	#__NR_gëdíts
 78

	)

83 
	#__NR_gëcwd
 79

	)

84 
	#__NR_chdú
 80

	)

85 
	#__NR_fchdú
 81

	)

86 
	#__NR_ª«me
 82

	)

87 
	#__NR_mkdú
 83

	)

88 
	#__NR_rmdú
 84

	)

89 
	#__NR_¸ót
 85

	)

90 
	#__NR_lök
 86

	)

91 
	#__NR_u∆ök
 87

	)

92 
	#__NR_symlök
 88

	)

93 
	#__NR_ªadlök
 89

	)

94 
	#__NR_chmod
 90

	)

95 
	#__NR_fchmod
 91

	)

96 
	#__NR_chown
 92

	)

97 
	#__NR_fchown
 93

	)

98 
	#__NR_lchown
 94

	)

99 
	#__NR_umask
 95

	)

100 
	#__NR_gëtimeofday
 96

	)

101 
	#__NR_gëæimô
 97

	)

102 
	#__NR_gërußge
 98

	)

103 
	#__NR_sysöfo
 99

	)

104 
	#__NR_times
 100

	)

105 
	#__NR_±ø˚
 101

	)

106 
	#__NR_gëuid
 102

	)

107 
	#__NR_sy¶og
 103

	)

108 
	#__NR_gëgid
 104

	)

109 
	#__NR_£tuid
 105

	)

110 
	#__NR_£tgid
 106

	)

111 
	#__NR_gëeuid
 107

	)

112 
	#__NR_gëegid
 108

	)

113 
	#__NR_£çgid
 109

	)

114 
	#__NR_gëµid
 110

	)

115 
	#__NR_gëpgΩ
 111

	)

116 
	#__NR_£tsid
 112

	)

117 
	#__NR_£åeuid
 113

	)

118 
	#__NR_£åegid
 114

	)

119 
	#__NR_gëgroups
 115

	)

120 
	#__NR_£tgroups
 116

	)

121 
	#__NR_£åesuid
 117

	)

122 
	#__NR_gëªsuid
 118

	)

123 
	#__NR_£åesgid
 119

	)

124 
	#__NR_gëªsgid
 120

	)

125 
	#__NR_gëpgid
 121

	)

126 
	#__NR_£tfsuid
 122

	)

127 
	#__NR_£tfsgid
 123

	)

128 
	#__NR_gësid
 124

	)

129 
	#__NR_ˇpgë
 125

	)

130 
	#__NR_ˇp£t
 126

	)

131 
	#__NR_π_sig≥ndög
 127

	)

132 
	#__NR_π_sigtimedwaô
 128

	)

133 
	#__NR_π_sigqueueöfo
 129

	)

134 
	#__NR_π_sigsu•íd
 130

	)

135 
	#__NR_sigÆt°ack
 131

	)

136 
	#__NR_utime
 132

	)

137 
	#__NR_mknod
 133

	)

138 
	#__NR_u£lib
 134

	)

139 
	#__NR_≥rs⁄Æôy
 135

	)

140 
	#__NR_u°©
 136

	)

141 
	#__NR_°©fs
 137

	)

142 
	#__NR_f°©fs
 138

	)

143 
	#__NR_sysfs
 139

	)

144 
	#__NR_gë¥i‹ôy
 140

	)

145 
	#__NR_£çri‹ôy
 141

	)

146 
	#__NR_sched_£ç¨am
 142

	)

147 
	#__NR_sched_gë∑øm
 143

	)

148 
	#__NR_sched_£tscheduÀr
 144

	)

149 
	#__NR_sched_gëscheduÀr
 145

	)

150 
	#__NR_sched_gë_¥i‹ôy_max
 146

	)

151 
	#__NR_sched_gë_¥i‹ôy_mö
 147

	)

152 
	#__NR_sched_º_gë_öãrvÆ
 148

	)

153 
	#__NR_mlock
 149

	)

154 
	#__NR_mu∆ock
 150

	)

155 
	#__NR_mlockÆl
 151

	)

156 
	#__NR_mu∆ockÆl
 152

	)

157 
	#__NR_vh™gup
 153

	)

158 
	#__NR_modify_ldt
 154

	)

159 
	#__NR_pivŸ_roŸ
 155

	)

160 
	#__NR__sys˘l
 156

	)

161 
	#__NR_¥˘l
 157

	)

162 
	#__NR_¨ch_¥˘l
 158

	)

163 
	#__NR_adjtimex
 159

	)

164 
	#__NR_£ålimô
 160

	)

165 
	#__NR_chroŸ
 161

	)

166 
	#__NR_sync
 162

	)

167 
	#__NR_ac˘
 163

	)

168 
	#__NR_£âimeofday
 164

	)

169 
	#__NR_mou¡
 165

	)

170 
	#__NR_umou¡2
 166

	)

171 
	#__NR_sw≠⁄
 167

	)

172 
	#__NR_sw≠off
 168

	)

173 
	#__NR_ªboŸ
 169

	)

174 
	#__NR_£tho°«me
 170

	)

175 
	#__NR_£tdomaö«me
 171

	)

176 
	#__NR_i›l
 172

	)

177 
	#__NR_i›îm
 173

	)

178 
	#__NR_¸óã_moduÀ
 174

	)

179 
	#__NR_öô_moduÀ
 175

	)

180 
	#__NR_dñëe_moduÀ
 176

	)

181 
	#__NR_gë_kî√l_syms
 177

	)

182 
	#__NR_quîy_moduÀ
 178

	)

183 
	#__NR_quŸa˘l
 179

	)

184 
	#__NR_nfs£rv˘l
 180

	)

185 
	#__NR_gëpmsg
 181

	)

186 
	#__NR_puçmsg
 182

	)

187 
	#__NR_afs_sysˇŒ
 183

	)

188 
	#__NR_tuxˇŒ
 184

	)

189 
	#__NR_£curôy
 185

	)

190 
	#__NR_gëtid
 186

	)

191 
	#__NR_ªadahód
 187

	)

192 
	#__NR_£tx©å
 188

	)

193 
	#__NR_l£tx©å
 189

	)

194 
	#__NR_f£tx©å
 190

	)

195 
	#__NR_gëx©å
 191

	)

196 
	#__NR_lgëx©å
 192

	)

197 
	#__NR_fgëx©å
 193

	)

198 
	#__NR_li°x©å
 194

	)

199 
	#__NR_Œi°x©å
 195

	)

200 
	#__NR_Êi°x©å
 196

	)

201 
	#__NR_ªmovex©å
 197

	)

202 
	#__NR_Ãemovex©å
 198

	)

203 
	#__NR_‰emovex©å
 199

	)

204 
	#__NR_tkûl
 200

	)

205 
	#__NR_time
 201

	)

206 
	#__NR_fuãx
 202

	)

207 
	#__NR_sched_£èfföôy
 203

	)

208 
	#__NR_sched_gëafföôy
 204

	)

209 
	#__NR_£t_thªad_¨ó
 205

	)

210 
	#__NR_io_£tup
 206

	)

211 
	#__NR_io_de°roy
 207

	)

212 
	#__NR_io_gëevíts
 208

	)

213 
	#__NR_io_submô
 209

	)

214 
	#__NR_io_ˇn˚l
 210

	)

215 
	#__NR_gë_thªad_¨ó
 211

	)

216 
	#__NR_lookup_dcookõ
 212

	)

217 
	#__NR_ïﬁl_¸óã
 213

	)

218 
	#__NR_ïﬁl_˘l_ﬁd
 214

	)

219 
	#__NR_ïﬁl_waô_ﬁd
 215

	)

220 
	#__NR_ªm≠_fûe_∑ges
 216

	)

221 
	#__NR_gëdíts64
 217

	)

222 
	#__NR_£t_tid_addªss
 218

	)

223 
	#__NR_ª°¨t_sysˇŒ
 219

	)

224 
	#__NR_£mtimed›
 220

	)

225 
	#__NR_Ádvi£64
 221

	)

226 
	#__NR_timî_¸óã
 222

	)

227 
	#__NR_timî_£âime
 223

	)

228 
	#__NR_timî_gëtime
 224

	)

229 
	#__NR_timî_gëovîrun
 225

	)

230 
	#__NR_timî_dñëe
 226

	)

231 
	#__NR_˛ock_£âime
 227

	)

232 
	#__NR_˛ock_gëtime
 228

	)

233 
	#__NR_˛ock_gëªs
 229

	)

234 
	#__NR_˛ock_«no¶ìp
 230

	)

235 
	#__NR_exô_group
 231

	)

236 
	#__NR_ïﬁl_waô
 232

	)

237 
	#__NR_ïﬁl_˘l
 233

	)

238 
	#__NR_tgkûl
 234

	)

239 
	#__NR_utimes
 235

	)

240 
	#__NR_v£rvî
 236

	)

241 
	#__NR_mböd
 237

	)

242 
	#__NR_£t_mempﬁicy
 238

	)

243 
	#__NR_gë_mempﬁicy
 239

	)

244 
	#__NR_mq_›í
 240

	)

245 
	#__NR_mq_u∆ök
 241

	)

246 
	#__NR_mq_timed£nd
 242

	)

247 
	#__NR_mq_timedª˚ive
 243

	)

248 
	#__NR_mq_nŸify
 244

	)

249 
	#__NR_mq_gë£èâr
 245

	)

250 
	#__NR_kexec_lﬂd
 246

	)

251 
	#__NR_waôid
 247

	)

252 
	#__NR_add_key
 248

	)

253 
	#__NR_ªque°_key
 249

	)

254 
	#__NR_key˘l
 250

	)

255 
	#__NR_i›rio_£t
 251

	)

256 
	#__NR_i›rio_gë
 252

	)

257 
	#__NR_öŸify_öô
 253

	)

258 
	#__NR_öŸify_add_w©ch
 254

	)

259 
	#__NR_öŸify_rm_w©ch
 255

	)

260 
	#__NR_migøã_∑ges
 256

	)

261 
	#__NR_›í©
 257

	)

262 
	#__NR_mkdú©
 258

	)

263 
	#__NR_mknod©
 259

	)

264 
	#__NR_fchow«t
 260

	)

265 
	#__NR_futimeßt
 261

	)

266 
	#__NR_√wf°©©
 262

	)

267 
	#__NR_u∆ök©
 263

	)

268 
	#__NR_ª«mót
 264

	)

269 
	#__NR_lök©
 265

	)

270 
	#__NR_symlök©
 266

	)

271 
	#__NR_ªadlök©
 267

	)

272 
	#__NR_fchmod©
 268

	)

273 
	#__NR_Ác˚sßt
 269

	)

274 
	#__NR_p£À˘6
 270

	)

275 
	#__NR_µﬁl
 271

	)

276 
	#__NR_unsh¨e
 272

	)

277 
	#__NR_£t_robu°_li°
 273

	)

278 
	#__NR_gë_robu°_li°
 274

	)

279 
	#__NR_•li˚
 275

	)

280 
	#__NR_ãe
 276

	)

281 
	#__NR_sync_fûe_ønge
 277

	)

282 
	#__NR_vm•li˚
 278

	)

283 
	#__NR_move_∑ges
 279

	)

284 
	#__NR_utimíßt
 280

	)

285 
	#__NR_ïﬁl_pwaô
 281

	)

286 
	#__NR_sig«lfd
 282

	)

287 
	#__NR_timîfd_¸óã
 283

	)

288 
	#__NR_evítfd
 284

	)

289 
	#__NR_ÁŒoˇã
 285

	)

290 
	#__NR_timîfd_£âime
 286

	)

291 
	#__NR_timîfd_gëtime
 287

	)

292 
	#__NR_ac˚±4
 288

	)

293 
	#__NR_sig«lfd4
 289

	)

294 
	#__NR_evítfd2
 290

	)

295 
	#__NR_ïﬁl_¸óã1
 291

	)

296 
	#__NR_dup3
 292

	)

297 
	#__NR_pùe2
 293

	)

298 
	#__NR_öŸify_öô1
 294

	)

299 
	#__NR_¥ódv
 295

	)

300 
	#__NR_pwrôev
 296

	)

301 
	#__NR_π_tgsigqueueöfo
 297

	)

302 
	#__NR_≥rf_evít_›í
 298

	)

303 
	#__NR_ªcvmmsg
 299

	)

304 
	#__NR_ÁnŸify_öô
 300

	)

305 
	#__NR_ÁnŸify_m¨k
 301

	)

306 
	#__NR_¥limô64
 302

	)

307 
	#__NR_«me_to_h™dÀ_©
 303

	)

308 
	#__NR_›í_by_h™dÀ_©
 304

	)

309 
	#__NR_˛ock_adjtime
 305

	)

310 
	#__NR_syncfs
 306

	)

311 
	#__NR_£ndmmsg
 307

	)

312 
	#__NR_£äs
 308

	)

313 
	#__NR_gë˝u
 309

	)

314 
	#__NR_¥o˚ss_vm_ªadv
 310

	)

315 
	#__NR_¥o˚ss_vm_wrôev
 311

	)

316 
	#__NR_kcmp
 312

	)

317 
	#__NR_föô_moduÀ
 313

	)

318 
	#__NR_sched_£èâr
 314

	)

319 
	#__NR_sched_gë©å
 315

	)

320 
	#__NR_ª«mót2
 316

	)

321 
	#__NR_£ccomp
 317

	)

322 
	#__NR_gëøndom
 318

	)

323 
	#__NR_memfd_¸óã
 319

	)

324 
	#__NR_kexec_fûe_lﬂd
 320

	)

325 
	#__NR_bpf
 321

	)

326 
	#__NR_execvót
 322

	)

327 
	#__NR_u£rÁu…fd
 323

	)

328 
	#__NR_memb¨rõr
 324

	)

329 
	#__NR_mlock2
 325

	)

	@/usr/include/asm/unistd_x32.h

1 #i‚de‡
_ASM_X86_UNISTD_X32_H


2 
	#_ASM_X86_UNISTD_X32_H
 1

	)

4 
	#__NR_ªad
 (
__X32_SYSCALL_BIT
 + 0)

	)

5 
	#__NR_wrôe
 (
__X32_SYSCALL_BIT
 + 1)

	)

6 
	#__NR_›í
 (
__X32_SYSCALL_BIT
 + 2)

	)

7 
	#__NR_˛o£
 (
__X32_SYSCALL_BIT
 + 3)

	)

8 
	#__NR_°©
 (
__X32_SYSCALL_BIT
 + 4)

	)

9 
	#__NR_f°©
 (
__X32_SYSCALL_BIT
 + 5)

	)

10 
	#__NR_l°©
 (
__X32_SYSCALL_BIT
 + 6)

	)

11 
	#__NR_pﬁl
 (
__X32_SYSCALL_BIT
 + 7)

	)

12 
	#__NR_l£ek
 (
__X32_SYSCALL_BIT
 + 8)

	)

13 
	#__NR_mm≠
 (
__X32_SYSCALL_BIT
 + 9)

	)

14 
	#__NR_m¥Ÿe˘
 (
__X32_SYSCALL_BIT
 + 10)

	)

15 
	#__NR_munm≠
 (
__X32_SYSCALL_BIT
 + 11)

	)

16 
	#__NR_brk
 (
__X32_SYSCALL_BIT
 + 12)

	)

17 
	#__NR_π_sig¥ocmask
 (
__X32_SYSCALL_BIT
 + 14)

	)

18 
	#__NR_¥ód64
 (
__X32_SYSCALL_BIT
 + 17)

	)

19 
	#__NR_pwrôe64
 (
__X32_SYSCALL_BIT
 + 18)

	)

20 
	#__NR_ac˚ss
 (
__X32_SYSCALL_BIT
 + 21)

	)

21 
	#__NR_pùe
 (
__X32_SYSCALL_BIT
 + 22)

	)

22 
	#__NR_£À˘
 (
__X32_SYSCALL_BIT
 + 23)

	)

23 
	#__NR_sched_yõld
 (
__X32_SYSCALL_BIT
 + 24)

	)

24 
	#__NR_mªm≠
 (
__X32_SYSCALL_BIT
 + 25)

	)

25 
	#__NR_msync
 (
__X32_SYSCALL_BIT
 + 26)

	)

26 
	#__NR_möc‹e
 (
__X32_SYSCALL_BIT
 + 27)

	)

27 
	#__NR_madvi£
 (
__X32_SYSCALL_BIT
 + 28)

	)

28 
	#__NR_shmgë
 (
__X32_SYSCALL_BIT
 + 29)

	)

29 
	#__NR_shm©
 (
__X32_SYSCALL_BIT
 + 30)

	)

30 
	#__NR_shm˘l
 (
__X32_SYSCALL_BIT
 + 31)

	)

31 
	#__NR_dup
 (
__X32_SYSCALL_BIT
 + 32)

	)

32 
	#__NR_dup2
 (
__X32_SYSCALL_BIT
 + 33)

	)

33 
	#__NR_∑u£
 (
__X32_SYSCALL_BIT
 + 34)

	)

34 
	#__NR_«no¶ìp
 (
__X32_SYSCALL_BIT
 + 35)

	)

35 
	#__NR_gëôimî
 (
__X32_SYSCALL_BIT
 + 36)

	)

36 
	#__NR_Æ¨m
 (
__X32_SYSCALL_BIT
 + 37)

	)

37 
	#__NR_£tôimî
 (
__X32_SYSCALL_BIT
 + 38)

	)

38 
	#__NR_gëpid
 (
__X32_SYSCALL_BIT
 + 39)

	)

39 
	#__NR_£ndfûe
 (
__X32_SYSCALL_BIT
 + 40)

	)

40 
	#__NR_sockë
 (
__X32_SYSCALL_BIT
 + 41)

	)

41 
	#__NR_c⁄√˘
 (
__X32_SYSCALL_BIT
 + 42)

	)

42 
	#__NR_ac˚±
 (
__X32_SYSCALL_BIT
 + 43)

	)

43 
	#__NR_£ndto
 (
__X32_SYSCALL_BIT
 + 44)

	)

44 
	#__NR_shutdown
 (
__X32_SYSCALL_BIT
 + 48)

	)

45 
	#__NR_böd
 (
__X32_SYSCALL_BIT
 + 49)

	)

46 
	#__NR_li°í
 (
__X32_SYSCALL_BIT
 + 50)

	)

47 
	#__NR_gësock«me
 (
__X32_SYSCALL_BIT
 + 51)

	)

48 
	#__NR_gë≥î«me
 (
__X32_SYSCALL_BIT
 + 52)

	)

49 
	#__NR_sockë∑ú
 (
__X32_SYSCALL_BIT
 + 53)

	)

50 
	#__NR_˛⁄e
 (
__X32_SYSCALL_BIT
 + 56)

	)

51 
	#__NR_f‹k
 (
__X32_SYSCALL_BIT
 + 57)

	)

52 
	#__NR_vf‹k
 (
__X32_SYSCALL_BIT
 + 58)

	)

53 
	#__NR_exô
 (
__X32_SYSCALL_BIT
 + 60)

	)

54 
	#__NR_waô4
 (
__X32_SYSCALL_BIT
 + 61)

	)

55 
	#__NR_kûl
 (
__X32_SYSCALL_BIT
 + 62)

	)

56 
	#__NR_u«me
 (
__X32_SYSCALL_BIT
 + 63)

	)

57 
	#__NR_£mgë
 (
__X32_SYSCALL_BIT
 + 64)

	)

58 
	#__NR_£m›
 (
__X32_SYSCALL_BIT
 + 65)

	)

59 
	#__NR_£m˘l
 (
__X32_SYSCALL_BIT
 + 66)

	)

60 
	#__NR_shmdt
 (
__X32_SYSCALL_BIT
 + 67)

	)

61 
	#__NR_msggë
 (
__X32_SYSCALL_BIT
 + 68)

	)

62 
	#__NR_msg¢d
 (
__X32_SYSCALL_BIT
 + 69)

	)

63 
	#__NR_msgrcv
 (
__X32_SYSCALL_BIT
 + 70)

	)

64 
	#__NR_msg˘l
 (
__X32_SYSCALL_BIT
 + 71)

	)

65 
	#__NR_f˙é
 (
__X32_SYSCALL_BIT
 + 72)

	)

66 
	#__NR_Êock
 (
__X32_SYSCALL_BIT
 + 73)

	)

67 
	#__NR_fsync
 (
__X32_SYSCALL_BIT
 + 74)

	)

68 
	#__NR_fd©async
 (
__X32_SYSCALL_BIT
 + 75)

	)

69 
	#__NR_åunˇã
 (
__X32_SYSCALL_BIT
 + 76)

	)

70 
	#__NR_·runˇã
 (
__X32_SYSCALL_BIT
 + 77)

	)

71 
	#__NR_gëdíts
 (
__X32_SYSCALL_BIT
 + 78)

	)

72 
	#__NR_gëcwd
 (
__X32_SYSCALL_BIT
 + 79)

	)

73 
	#__NR_chdú
 (
__X32_SYSCALL_BIT
 + 80)

	)

74 
	#__NR_fchdú
 (
__X32_SYSCALL_BIT
 + 81)

	)

75 
	#__NR_ª«me
 (
__X32_SYSCALL_BIT
 + 82)

	)

76 
	#__NR_mkdú
 (
__X32_SYSCALL_BIT
 + 83)

	)

77 
	#__NR_rmdú
 (
__X32_SYSCALL_BIT
 + 84)

	)

78 
	#__NR_¸ót
 (
__X32_SYSCALL_BIT
 + 85)

	)

79 
	#__NR_lök
 (
__X32_SYSCALL_BIT
 + 86)

	)

80 
	#__NR_u∆ök
 (
__X32_SYSCALL_BIT
 + 87)

	)

81 
	#__NR_symlök
 (
__X32_SYSCALL_BIT
 + 88)

	)

82 
	#__NR_ªadlök
 (
__X32_SYSCALL_BIT
 + 89)

	)

83 
	#__NR_chmod
 (
__X32_SYSCALL_BIT
 + 90)

	)

84 
	#__NR_fchmod
 (
__X32_SYSCALL_BIT
 + 91)

	)

85 
	#__NR_chown
 (
__X32_SYSCALL_BIT
 + 92)

	)

86 
	#__NR_fchown
 (
__X32_SYSCALL_BIT
 + 93)

	)

87 
	#__NR_lchown
 (
__X32_SYSCALL_BIT
 + 94)

	)

88 
	#__NR_umask
 (
__X32_SYSCALL_BIT
 + 95)

	)

89 
	#__NR_gëtimeofday
 (
__X32_SYSCALL_BIT
 + 96)

	)

90 
	#__NR_gëæimô
 (
__X32_SYSCALL_BIT
 + 97)

	)

91 
	#__NR_gërußge
 (
__X32_SYSCALL_BIT
 + 98)

	)

92 
	#__NR_sysöfo
 (
__X32_SYSCALL_BIT
 + 99)

	)

93 
	#__NR_times
 (
__X32_SYSCALL_BIT
 + 100)

	)

94 
	#__NR_gëuid
 (
__X32_SYSCALL_BIT
 + 102)

	)

95 
	#__NR_sy¶og
 (
__X32_SYSCALL_BIT
 + 103)

	)

96 
	#__NR_gëgid
 (
__X32_SYSCALL_BIT
 + 104)

	)

97 
	#__NR_£tuid
 (
__X32_SYSCALL_BIT
 + 105)

	)

98 
	#__NR_£tgid
 (
__X32_SYSCALL_BIT
 + 106)

	)

99 
	#__NR_gëeuid
 (
__X32_SYSCALL_BIT
 + 107)

	)

100 
	#__NR_gëegid
 (
__X32_SYSCALL_BIT
 + 108)

	)

101 
	#__NR_£çgid
 (
__X32_SYSCALL_BIT
 + 109)

	)

102 
	#__NR_gëµid
 (
__X32_SYSCALL_BIT
 + 110)

	)

103 
	#__NR_gëpgΩ
 (
__X32_SYSCALL_BIT
 + 111)

	)

104 
	#__NR_£tsid
 (
__X32_SYSCALL_BIT
 + 112)

	)

105 
	#__NR_£åeuid
 (
__X32_SYSCALL_BIT
 + 113)

	)

106 
	#__NR_£åegid
 (
__X32_SYSCALL_BIT
 + 114)

	)

107 
	#__NR_gëgroups
 (
__X32_SYSCALL_BIT
 + 115)

	)

108 
	#__NR_£tgroups
 (
__X32_SYSCALL_BIT
 + 116)

	)

109 
	#__NR_£åesuid
 (
__X32_SYSCALL_BIT
 + 117)

	)

110 
	#__NR_gëªsuid
 (
__X32_SYSCALL_BIT
 + 118)

	)

111 
	#__NR_£åesgid
 (
__X32_SYSCALL_BIT
 + 119)

	)

112 
	#__NR_gëªsgid
 (
__X32_SYSCALL_BIT
 + 120)

	)

113 
	#__NR_gëpgid
 (
__X32_SYSCALL_BIT
 + 121)

	)

114 
	#__NR_£tfsuid
 (
__X32_SYSCALL_BIT
 + 122)

	)

115 
	#__NR_£tfsgid
 (
__X32_SYSCALL_BIT
 + 123)

	)

116 
	#__NR_gësid
 (
__X32_SYSCALL_BIT
 + 124)

	)

117 
	#__NR_ˇpgë
 (
__X32_SYSCALL_BIT
 + 125)

	)

118 
	#__NR_ˇp£t
 (
__X32_SYSCALL_BIT
 + 126)

	)

119 
	#__NR_π_sigsu•íd
 (
__X32_SYSCALL_BIT
 + 130)

	)

120 
	#__NR_utime
 (
__X32_SYSCALL_BIT
 + 132)

	)

121 
	#__NR_mknod
 (
__X32_SYSCALL_BIT
 + 133)

	)

122 
	#__NR_≥rs⁄Æôy
 (
__X32_SYSCALL_BIT
 + 135)

	)

123 
	#__NR_u°©
 (
__X32_SYSCALL_BIT
 + 136)

	)

124 
	#__NR_°©fs
 (
__X32_SYSCALL_BIT
 + 137)

	)

125 
	#__NR_f°©fs
 (
__X32_SYSCALL_BIT
 + 138)

	)

126 
	#__NR_sysfs
 (
__X32_SYSCALL_BIT
 + 139)

	)

127 
	#__NR_gë¥i‹ôy
 (
__X32_SYSCALL_BIT
 + 140)

	)

128 
	#__NR_£çri‹ôy
 (
__X32_SYSCALL_BIT
 + 141)

	)

129 
	#__NR_sched_£ç¨am
 (
__X32_SYSCALL_BIT
 + 142)

	)

130 
	#__NR_sched_gë∑øm
 (
__X32_SYSCALL_BIT
 + 143)

	)

131 
	#__NR_sched_£tscheduÀr
 (
__X32_SYSCALL_BIT
 + 144)

	)

132 
	#__NR_sched_gëscheduÀr
 (
__X32_SYSCALL_BIT
 + 145)

	)

133 
	#__NR_sched_gë_¥i‹ôy_max
 (
__X32_SYSCALL_BIT
 + 146)

	)

134 
	#__NR_sched_gë_¥i‹ôy_mö
 (
__X32_SYSCALL_BIT
 + 147)

	)

135 
	#__NR_sched_º_gë_öãrvÆ
 (
__X32_SYSCALL_BIT
 + 148)

	)

136 
	#__NR_mlock
 (
__X32_SYSCALL_BIT
 + 149)

	)

137 
	#__NR_mu∆ock
 (
__X32_SYSCALL_BIT
 + 150)

	)

138 
	#__NR_mlockÆl
 (
__X32_SYSCALL_BIT
 + 151)

	)

139 
	#__NR_mu∆ockÆl
 (
__X32_SYSCALL_BIT
 + 152)

	)

140 
	#__NR_vh™gup
 (
__X32_SYSCALL_BIT
 + 153)

	)

141 
	#__NR_modify_ldt
 (
__X32_SYSCALL_BIT
 + 154)

	)

142 
	#__NR_pivŸ_roŸ
 (
__X32_SYSCALL_BIT
 + 155)

	)

143 
	#__NR_¥˘l
 (
__X32_SYSCALL_BIT
 + 157)

	)

144 
	#__NR_¨ch_¥˘l
 (
__X32_SYSCALL_BIT
 + 158)

	)

145 
	#__NR_adjtimex
 (
__X32_SYSCALL_BIT
 + 159)

	)

146 
	#__NR_£ålimô
 (
__X32_SYSCALL_BIT
 + 160)

	)

147 
	#__NR_chroŸ
 (
__X32_SYSCALL_BIT
 + 161)

	)

148 
	#__NR_sync
 (
__X32_SYSCALL_BIT
 + 162)

	)

149 
	#__NR_ac˘
 (
__X32_SYSCALL_BIT
 + 163)

	)

150 
	#__NR_£âimeofday
 (
__X32_SYSCALL_BIT
 + 164)

	)

151 
	#__NR_mou¡
 (
__X32_SYSCALL_BIT
 + 165)

	)

152 
	#__NR_umou¡2
 (
__X32_SYSCALL_BIT
 + 166)

	)

153 
	#__NR_sw≠⁄
 (
__X32_SYSCALL_BIT
 + 167)

	)

154 
	#__NR_sw≠off
 (
__X32_SYSCALL_BIT
 + 168)

	)

155 
	#__NR_ªboŸ
 (
__X32_SYSCALL_BIT
 + 169)

	)

156 
	#__NR_£tho°«me
 (
__X32_SYSCALL_BIT
 + 170)

	)

157 
	#__NR_£tdomaö«me
 (
__X32_SYSCALL_BIT
 + 171)

	)

158 
	#__NR_i›l
 (
__X32_SYSCALL_BIT
 + 172)

	)

159 
	#__NR_i›îm
 (
__X32_SYSCALL_BIT
 + 173)

	)

160 
	#__NR_öô_moduÀ
 (
__X32_SYSCALL_BIT
 + 175)

	)

161 
	#__NR_dñëe_moduÀ
 (
__X32_SYSCALL_BIT
 + 176)

	)

162 
	#__NR_quŸa˘l
 (
__X32_SYSCALL_BIT
 + 179)

	)

163 
	#__NR_gëpmsg
 (
__X32_SYSCALL_BIT
 + 181)

	)

164 
	#__NR_puçmsg
 (
__X32_SYSCALL_BIT
 + 182)

	)

165 
	#__NR_afs_sysˇŒ
 (
__X32_SYSCALL_BIT
 + 183)

	)

166 
	#__NR_tuxˇŒ
 (
__X32_SYSCALL_BIT
 + 184)

	)

167 
	#__NR_£curôy
 (
__X32_SYSCALL_BIT
 + 185)

	)

168 
	#__NR_gëtid
 (
__X32_SYSCALL_BIT
 + 186)

	)

169 
	#__NR_ªadahód
 (
__X32_SYSCALL_BIT
 + 187)

	)

170 
	#__NR_£tx©å
 (
__X32_SYSCALL_BIT
 + 188)

	)

171 
	#__NR_l£tx©å
 (
__X32_SYSCALL_BIT
 + 189)

	)

172 
	#__NR_f£tx©å
 (
__X32_SYSCALL_BIT
 + 190)

	)

173 
	#__NR_gëx©å
 (
__X32_SYSCALL_BIT
 + 191)

	)

174 
	#__NR_lgëx©å
 (
__X32_SYSCALL_BIT
 + 192)

	)

175 
	#__NR_fgëx©å
 (
__X32_SYSCALL_BIT
 + 193)

	)

176 
	#__NR_li°x©å
 (
__X32_SYSCALL_BIT
 + 194)

	)

177 
	#__NR_Œi°x©å
 (
__X32_SYSCALL_BIT
 + 195)

	)

178 
	#__NR_Êi°x©å
 (
__X32_SYSCALL_BIT
 + 196)

	)

179 
	#__NR_ªmovex©å
 (
__X32_SYSCALL_BIT
 + 197)

	)

180 
	#__NR_Ãemovex©å
 (
__X32_SYSCALL_BIT
 + 198)

	)

181 
	#__NR_‰emovex©å
 (
__X32_SYSCALL_BIT
 + 199)

	)

182 
	#__NR_tkûl
 (
__X32_SYSCALL_BIT
 + 200)

	)

183 
	#__NR_time
 (
__X32_SYSCALL_BIT
 + 201)

	)

184 
	#__NR_fuãx
 (
__X32_SYSCALL_BIT
 + 202)

	)

185 
	#__NR_sched_£èfföôy
 (
__X32_SYSCALL_BIT
 + 203)

	)

186 
	#__NR_sched_gëafföôy
 (
__X32_SYSCALL_BIT
 + 204)

	)

187 
	#__NR_io_de°roy
 (
__X32_SYSCALL_BIT
 + 207)

	)

188 
	#__NR_io_gëevíts
 (
__X32_SYSCALL_BIT
 + 208)

	)

189 
	#__NR_io_ˇn˚l
 (
__X32_SYSCALL_BIT
 + 210)

	)

190 
	#__NR_lookup_dcookõ
 (
__X32_SYSCALL_BIT
 + 212)

	)

191 
	#__NR_ïﬁl_¸óã
 (
__X32_SYSCALL_BIT
 + 213)

	)

192 
	#__NR_ªm≠_fûe_∑ges
 (
__X32_SYSCALL_BIT
 + 216)

	)

193 
	#__NR_gëdíts64
 (
__X32_SYSCALL_BIT
 + 217)

	)

194 
	#__NR_£t_tid_addªss
 (
__X32_SYSCALL_BIT
 + 218)

	)

195 
	#__NR_ª°¨t_sysˇŒ
 (
__X32_SYSCALL_BIT
 + 219)

	)

196 
	#__NR_£mtimed›
 (
__X32_SYSCALL_BIT
 + 220)

	)

197 
	#__NR_Ádvi£64
 (
__X32_SYSCALL_BIT
 + 221)

	)

198 
	#__NR_timî_£âime
 (
__X32_SYSCALL_BIT
 + 223)

	)

199 
	#__NR_timî_gëtime
 (
__X32_SYSCALL_BIT
 + 224)

	)

200 
	#__NR_timî_gëovîrun
 (
__X32_SYSCALL_BIT
 + 225)

	)

201 
	#__NR_timî_dñëe
 (
__X32_SYSCALL_BIT
 + 226)

	)

202 
	#__NR_˛ock_£âime
 (
__X32_SYSCALL_BIT
 + 227)

	)

203 
	#__NR_˛ock_gëtime
 (
__X32_SYSCALL_BIT
 + 228)

	)

204 
	#__NR_˛ock_gëªs
 (
__X32_SYSCALL_BIT
 + 229)

	)

205 
	#__NR_˛ock_«no¶ìp
 (
__X32_SYSCALL_BIT
 + 230)

	)

206 
	#__NR_exô_group
 (
__X32_SYSCALL_BIT
 + 231)

	)

207 
	#__NR_ïﬁl_waô
 (
__X32_SYSCALL_BIT
 + 232)

	)

208 
	#__NR_ïﬁl_˘l
 (
__X32_SYSCALL_BIT
 + 233)

	)

209 
	#__NR_tgkûl
 (
__X32_SYSCALL_BIT
 + 234)

	)

210 
	#__NR_utimes
 (
__X32_SYSCALL_BIT
 + 235)

	)

211 
	#__NR_mböd
 (
__X32_SYSCALL_BIT
 + 237)

	)

212 
	#__NR_£t_mempﬁicy
 (
__X32_SYSCALL_BIT
 + 238)

	)

213 
	#__NR_gë_mempﬁicy
 (
__X32_SYSCALL_BIT
 + 239)

	)

214 
	#__NR_mq_›í
 (
__X32_SYSCALL_BIT
 + 240)

	)

215 
	#__NR_mq_u∆ök
 (
__X32_SYSCALL_BIT
 + 241)

	)

216 
	#__NR_mq_timed£nd
 (
__X32_SYSCALL_BIT
 + 242)

	)

217 
	#__NR_mq_timedª˚ive
 (
__X32_SYSCALL_BIT
 + 243)

	)

218 
	#__NR_mq_gë£èâr
 (
__X32_SYSCALL_BIT
 + 245)

	)

219 
	#__NR_add_key
 (
__X32_SYSCALL_BIT
 + 248)

	)

220 
	#__NR_ªque°_key
 (
__X32_SYSCALL_BIT
 + 249)

	)

221 
	#__NR_key˘l
 (
__X32_SYSCALL_BIT
 + 250)

	)

222 
	#__NR_i›rio_£t
 (
__X32_SYSCALL_BIT
 + 251)

	)

223 
	#__NR_i›rio_gë
 (
__X32_SYSCALL_BIT
 + 252)

	)

224 
	#__NR_öŸify_öô
 (
__X32_SYSCALL_BIT
 + 253)

	)

225 
	#__NR_öŸify_add_w©ch
 (
__X32_SYSCALL_BIT
 + 254)

	)

226 
	#__NR_öŸify_rm_w©ch
 (
__X32_SYSCALL_BIT
 + 255)

	)

227 
	#__NR_migøã_∑ges
 (
__X32_SYSCALL_BIT
 + 256)

	)

228 
	#__NR_›í©
 (
__X32_SYSCALL_BIT
 + 257)

	)

229 
	#__NR_mkdú©
 (
__X32_SYSCALL_BIT
 + 258)

	)

230 
	#__NR_mknod©
 (
__X32_SYSCALL_BIT
 + 259)

	)

231 
	#__NR_fchow«t
 (
__X32_SYSCALL_BIT
 + 260)

	)

232 
	#__NR_futimeßt
 (
__X32_SYSCALL_BIT
 + 261)

	)

233 
	#__NR_√wf°©©
 (
__X32_SYSCALL_BIT
 + 262)

	)

234 
	#__NR_u∆ök©
 (
__X32_SYSCALL_BIT
 + 263)

	)

235 
	#__NR_ª«mót
 (
__X32_SYSCALL_BIT
 + 264)

	)

236 
	#__NR_lök©
 (
__X32_SYSCALL_BIT
 + 265)

	)

237 
	#__NR_symlök©
 (
__X32_SYSCALL_BIT
 + 266)

	)

238 
	#__NR_ªadlök©
 (
__X32_SYSCALL_BIT
 + 267)

	)

239 
	#__NR_fchmod©
 (
__X32_SYSCALL_BIT
 + 268)

	)

240 
	#__NR_Ác˚sßt
 (
__X32_SYSCALL_BIT
 + 269)

	)

241 
	#__NR_p£À˘6
 (
__X32_SYSCALL_BIT
 + 270)

	)

242 
	#__NR_µﬁl
 (
__X32_SYSCALL_BIT
 + 271)

	)

243 
	#__NR_unsh¨e
 (
__X32_SYSCALL_BIT
 + 272)

	)

244 
	#__NR_•li˚
 (
__X32_SYSCALL_BIT
 + 275)

	)

245 
	#__NR_ãe
 (
__X32_SYSCALL_BIT
 + 276)

	)

246 
	#__NR_sync_fûe_ønge
 (
__X32_SYSCALL_BIT
 + 277)

	)

247 
	#__NR_utimíßt
 (
__X32_SYSCALL_BIT
 + 280)

	)

248 
	#__NR_ïﬁl_pwaô
 (
__X32_SYSCALL_BIT
 + 281)

	)

249 
	#__NR_sig«lfd
 (
__X32_SYSCALL_BIT
 + 282)

	)

250 
	#__NR_timîfd_¸óã
 (
__X32_SYSCALL_BIT
 + 283)

	)

251 
	#__NR_evítfd
 (
__X32_SYSCALL_BIT
 + 284)

	)

252 
	#__NR_ÁŒoˇã
 (
__X32_SYSCALL_BIT
 + 285)

	)

253 
	#__NR_timîfd_£âime
 (
__X32_SYSCALL_BIT
 + 286)

	)

254 
	#__NR_timîfd_gëtime
 (
__X32_SYSCALL_BIT
 + 287)

	)

255 
	#__NR_ac˚±4
 (
__X32_SYSCALL_BIT
 + 288)

	)

256 
	#__NR_sig«lfd4
 (
__X32_SYSCALL_BIT
 + 289)

	)

257 
	#__NR_evítfd2
 (
__X32_SYSCALL_BIT
 + 290)

	)

258 
	#__NR_ïﬁl_¸óã1
 (
__X32_SYSCALL_BIT
 + 291)

	)

259 
	#__NR_dup3
 (
__X32_SYSCALL_BIT
 + 292)

	)

260 
	#__NR_pùe2
 (
__X32_SYSCALL_BIT
 + 293)

	)

261 
	#__NR_öŸify_öô1
 (
__X32_SYSCALL_BIT
 + 294)

	)

262 
	#__NR_≥rf_evít_›í
 (
__X32_SYSCALL_BIT
 + 298)

	)

263 
	#__NR_ÁnŸify_öô
 (
__X32_SYSCALL_BIT
 + 300)

	)

264 
	#__NR_ÁnŸify_m¨k
 (
__X32_SYSCALL_BIT
 + 301)

	)

265 
	#__NR_¥limô64
 (
__X32_SYSCALL_BIT
 + 302)

	)

266 
	#__NR_«me_to_h™dÀ_©
 (
__X32_SYSCALL_BIT
 + 303)

	)

267 
	#__NR_›í_by_h™dÀ_©
 (
__X32_SYSCALL_BIT
 + 304)

	)

268 
	#__NR_˛ock_adjtime
 (
__X32_SYSCALL_BIT
 + 305)

	)

269 
	#__NR_syncfs
 (
__X32_SYSCALL_BIT
 + 306)

	)

270 
	#__NR_£äs
 (
__X32_SYSCALL_BIT
 + 308)

	)

271 
	#__NR_gë˝u
 (
__X32_SYSCALL_BIT
 + 309)

	)

272 
	#__NR_kcmp
 (
__X32_SYSCALL_BIT
 + 312)

	)

273 
	#__NR_föô_moduÀ
 (
__X32_SYSCALL_BIT
 + 313)

	)

274 
	#__NR_sched_£èâr
 (
__X32_SYSCALL_BIT
 + 314)

	)

275 
	#__NR_sched_gë©å
 (
__X32_SYSCALL_BIT
 + 315)

	)

276 
	#__NR_ª«mót2
 (
__X32_SYSCALL_BIT
 + 316)

	)

277 
	#__NR_£ccomp
 (
__X32_SYSCALL_BIT
 + 317)

	)

278 
	#__NR_gëøndom
 (
__X32_SYSCALL_BIT
 + 318)

	)

279 
	#__NR_memfd_¸óã
 (
__X32_SYSCALL_BIT
 + 319)

	)

280 
	#__NR_kexec_fûe_lﬂd
 (
__X32_SYSCALL_BIT
 + 320)

	)

281 
	#__NR_bpf
 (
__X32_SYSCALL_BIT
 + 321)

	)

282 
	#__NR_u£rÁu…fd
 (
__X32_SYSCALL_BIT
 + 323)

	)

283 
	#__NR_memb¨rõr
 (
__X32_SYSCALL_BIT
 + 324)

	)

284 
	#__NR_mlock2
 (
__X32_SYSCALL_BIT
 + 325)

	)

285 
	#__NR_π_siga˘i⁄
 (
__X32_SYSCALL_BIT
 + 512)

	)

286 
	#__NR_π_sigªtu∫
 (
__X32_SYSCALL_BIT
 + 513)

	)

287 
	#__NR_io˘l
 (
__X32_SYSCALL_BIT
 + 514)

	)

288 
	#__NR_ªadv
 (
__X32_SYSCALL_BIT
 + 515)

	)

289 
	#__NR_wrôev
 (
__X32_SYSCALL_BIT
 + 516)

	)

290 
	#__NR_ªcv‰om
 (
__X32_SYSCALL_BIT
 + 517)

	)

291 
	#__NR_£ndmsg
 (
__X32_SYSCALL_BIT
 + 518)

	)

292 
	#__NR_ªcvmsg
 (
__X32_SYSCALL_BIT
 + 519)

	)

293 
	#__NR_execve
 (
__X32_SYSCALL_BIT
 + 520)

	)

294 
	#__NR_±ø˚
 (
__X32_SYSCALL_BIT
 + 521)

	)

295 
	#__NR_π_sig≥ndög
 (
__X32_SYSCALL_BIT
 + 522)

	)

296 
	#__NR_π_sigtimedwaô
 (
__X32_SYSCALL_BIT
 + 523)

	)

297 
	#__NR_π_sigqueueöfo
 (
__X32_SYSCALL_BIT
 + 524)

	)

298 
	#__NR_sigÆt°ack
 (
__X32_SYSCALL_BIT
 + 525)

	)

299 
	#__NR_timî_¸óã
 (
__X32_SYSCALL_BIT
 + 526)

	)

300 
	#__NR_mq_nŸify
 (
__X32_SYSCALL_BIT
 + 527)

	)

301 
	#__NR_kexec_lﬂd
 (
__X32_SYSCALL_BIT
 + 528)

	)

302 
	#__NR_waôid
 (
__X32_SYSCALL_BIT
 + 529)

	)

303 
	#__NR_£t_robu°_li°
 (
__X32_SYSCALL_BIT
 + 530)

	)

304 
	#__NR_gë_robu°_li°
 (
__X32_SYSCALL_BIT
 + 531)

	)

305 
	#__NR_vm•li˚
 (
__X32_SYSCALL_BIT
 + 532)

	)

306 
	#__NR_move_∑ges
 (
__X32_SYSCALL_BIT
 + 533)

	)

307 
	#__NR_¥ódv
 (
__X32_SYSCALL_BIT
 + 534)

	)

308 
	#__NR_pwrôev
 (
__X32_SYSCALL_BIT
 + 535)

	)

309 
	#__NR_π_tgsigqueueöfo
 (
__X32_SYSCALL_BIT
 + 536)

	)

310 
	#__NR_ªcvmmsg
 (
__X32_SYSCALL_BIT
 + 537)

	)

311 
	#__NR_£ndmmsg
 (
__X32_SYSCALL_BIT
 + 538)

	)

312 
	#__NR_¥o˚ss_vm_ªadv
 (
__X32_SYSCALL_BIT
 + 539)

	)

313 
	#__NR_¥o˚ss_vm_wrôev
 (
__X32_SYSCALL_BIT
 + 540)

	)

314 
	#__NR_£tsock›t
 (
__X32_SYSCALL_BIT
 + 541)

	)

315 
	#__NR_gësock›t
 (
__X32_SYSCALL_BIT
 + 542)

	)

316 
	#__NR_io_£tup
 (
__X32_SYSCALL_BIT
 + 543)

	)

317 
	#__NR_io_submô
 (
__X32_SYSCALL_BIT
 + 544)

	)

318 
	#__NR_execvót
 (
__X32_SYSCALL_BIT
 + 545)

	)

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sigset.h

19 #i‚def 
_SIGSET_H_ty≥s


20 
	#_SIGSET_H_ty≥s
 1

	)

22 
	t__sig_©omic_t
;

26 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

29 
	m__vÆ
[
_SIGSET_NWORDS
];

30 } 
	t__sig£t_t
;

41 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


42 
	#_SIGSET_H_‚s
 1

	)

44 #i‚de‡
_EXTERN_INLINE


45 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

49 
	#__sigmask
(
sig
) \

50 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

53 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

55 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

56 
	#__sigem±y£t
(
£t
) \

57 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

58 
sig£t_t
 *
__£t
 = (
£t
); \

59 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

60 0; }))

	)

61 
	#__sigfûl£t
(
£t
) \

62 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

63 
sig£t_t
 *
__£t
 = (
£t
); \

64 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

65 0; }))

	)

67 #ifde‡
__USE_GNU


71 
	#__sigi£m±y£t
(
£t
) \

72 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

73 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

74 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

75 !
__ªt
 && --
__˙t
 >= 0) \

76 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

77 
__ªt
 =0; }))

	)

78 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

79 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

80 
sig£t_t
 *
__de°
 = (
de°
); \

81 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

82 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

83 --
__˙t
 >= 0) \

84 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

85 & 
__right
->
__vÆ
[
__˙t
]); \

86 0; }))

	)

87 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

88 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

89 
sig£t_t
 *
__de°
 = (
de°
); \

90 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

91 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

92 --
__˙t
 >= 0) \

93 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

94 | 
__right
->
__vÆ
[
__˙t
]); \

95 0; }))

	)

102 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

103 
__sigadd£t
 (
__sig£t_t
 *, );

104 
__sigdñ£t
 (
__sig£t_t
 *, );

106 #ifde‡
__USE_EXTERN_INLINES


107 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

108 
_EXTERN_INLINE
 \

109 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

111 
__mask
 = 
	`__sigmask
 (
__sig
); \

112 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

113  
BODY
; \

114 }

	)

116 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

117 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

118 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

120 #unde‡
__SIGSETFN


	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 ((
˛ock_t
Ë1000000)

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

81 
	#CLOCK_TAI
 11

	)

84 
	#TIMER_ABSTIME
 1

	)

87 #ifde‡
__USE_GNU


88 
	~<bôs/timex.h
>

90 
__BEGIN_DECLS


93 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

95 
__END_DECLS


101 #unde‡
__√ed_timevÆ


	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


85 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


86 
	#PTHREAD_MUTEX_INITIALIZER
 \

87 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

88 #ifde‡
__USE_GNU


89 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

90 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

91 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

92 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

93 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

94 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

95 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

96 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

115 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


118 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

120 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

121 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


127 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


128 #i‡
__WORDSIZE
 == 64

129 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

134 
	#PTHREAD_RWLOCK_INITIALIZER
 \

135 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

136 #ifde‡
__USE_GNU


137 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


138 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

139 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, \

140 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

142 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


143 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

144 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

145 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

148 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

149 0 } }

	)

159 
	mPTHREAD_INHERIT_SCHED
,

160 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

161 
	mPTHREAD_EXPLICIT_SCHED


162 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

169 
	mPTHREAD_SCOPE_SYSTEM
,

170 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

171 
	mPTHREAD_SCOPE_PROCESS


172 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

179 
	mPTHREAD_PROCESS_PRIVATE
,

180 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

181 
	mPTHREAD_PROCESS_SHARED


182 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

188 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

192 
	s_±hªad_˛ónup_buf„r


194 (*
	m__routöe
) (*);

195 *
	m__¨g
;

196 
	m__ˇn˚…y≥
;

197 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

203 
	mPTHREAD_CANCEL_ENABLE
,

204 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

205 
	mPTHREAD_CANCEL_DISABLE


206 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

210 
	mPTHREAD_CANCEL_DEFERRED
,

211 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

212 
	mPTHREAD_CANCEL_ASYNCHRONOUS


213 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

215 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

219 
	#PTHREAD_ONCE_INIT
 0

	)

222 #ifde‡
__USE_XOPEN2K


226 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

230 
__BEGIN_DECLS


235 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

236 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

237 *(*
__°¨t_routöe
) (*),

238 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

244 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

252 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

254 #ifde‡
__USE_GNU


257 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

265 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

266 c⁄° 
time•ec
 *
__ab°ime
);

273 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

277 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

280 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

281 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

297 *
__dëach°©e
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

302 
__dëach°©e
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

308 
size_t
 *
__gu¨dsize
)

309 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

312 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

313 
size_t
 
__gu¨dsize
)

314 
__THROW
 
	`__n⁄nuŒ
 ((1));

318 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

319 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

324 c⁄° 
sched_∑øm
 *
__ª°ri˘


325 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

328 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


329 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

330 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

333 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

337 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__öhîô
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

343 
__öhîô
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

348 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

349 *
__ª°ri˘
 
__sc›e
)

350 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

353 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


358 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

365 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

366 *
__°ackaddr
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

370 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


371 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

372 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

377 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

378 
size_t
 
__°acksize
)

379 
__THROW
 
	`__n⁄nuŒ
 ((1));

381 #ifde‡
__USE_XOPEN2K


383 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

384 **
__ª°ri˘
 
__°ackaddr
,

385 
size_t
 *
__ª°ri˘
 
__°acksize
)

386 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

391 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

392 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

395 #ifde‡
__USE_GNU


398 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

399 
size_t
 
__˝u£tsize
,

400 c⁄° 
˝u_£t_t
 *
__˝u£t
)

401 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

405 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

406 
size_t
 
__˝u£tsize
,

407 
˝u_£t_t
 *
__˝u£t
)

408 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

411 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

412 
__THROW
 
	`__n⁄nuŒ
 ((1));

416 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1));

422 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

423 
__THROW
 
	`__n⁄nuŒ
 ((2));

431 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

432 c⁄° 
sched_∑øm
 *
__∑øm
)

433 
__THROW
 
	`__n⁄nuŒ
 ((3));

436 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

437 *
__ª°ri˘
 
__pﬁicy
,

438 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

442 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

443 
__THROW
;

446 #ifde‡
__USE_GNU


448 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

449 
size_t
 
__buÊí
)

450 
__THROW
 
	`__n⁄nuŒ
 ((2));

453 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

458 #ifde‡
__USE_UNIX98


460 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

463 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

466 #ifde‡
__USE_GNU


471 
	$±hªad_yõld
 (Ë
__THROW
;

476 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

477 c⁄° 
˝u_£t_t
 *
__˝u£t
)

478 
__THROW
 
	`__n⁄nuŒ
 ((3));

481 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

482 
˝u_£t_t
 *
__˝u£t
)

483 
__THROW
 
	`__n⁄nuŒ
 ((3));

496 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

497 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

508 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

512 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

515 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

520 
	`±hªad_ã°ˇn˚l
 ();

529 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

530 
__mask_was_ßved
;

531 } 
__ˇn˚l_jmp_buf
[1];

532 *
__∑d
[4];

533 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

536 #i‚de‡
__˛ónup_f˘_©åibuã


537 
	#__˛ónup_f˘_©åibuã


	)

542 
	s__±hªad_˛ónup_‰ame


544 (*
__ˇn˚l_routöe
) (*);

545 *
__ˇn˚l_¨g
;

546 
__do_ô
;

547 
__ˇn˚l_ty≥
;

550 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


551 #ifde‡
__˝lu•lus


553 ˛as†
	c__±hªad_˛ónup_˛ass


555 (*
__ˇn˚l_routöe
) (*);

556 *
__ˇn˚l_¨g
;

557 
__do_ô
;

558 
__ˇn˚l_ty≥
;

560 
public
:

561 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

562 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

563 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

564 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

565 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

566 &
__ˇn˚l_ty≥
); 
	}
}

567 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

577 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

579 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

583 
	#±hªad_˛ónup_p›
(
execuã
) \

584 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

585 } 0)

	)

587 #ifde‡
__USE_GNU


591 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

593 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

594 
__˛‰ame
.
	`__de„r
 ()

	)

599 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

600 
__˛‰ame
.
	`__ª°‹e
 (); \

601 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

602 } 0)

	)

609 
__exã∫_ölöe
 

610 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

612 i‡(
__‰ame
->
__do_ô
)

613 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

614 
	}
}

623 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

625 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

626 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

627 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

628 .
__do_ô
 = 1 };

	)

632 
	#±hªad_˛ónup_p›
(
execuã
) \

633 
__˛‰ame
.
__do_ô
 = (
execuã
); \

634 } 0)

	)

636 #ifde‡
__USE_GNU


640 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

642 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

643 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

644 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

645 .
__do_ô
 = 1 }; \

646 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

647 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

652 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

653 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

654 
__˛‰ame
.
__do_ô
 = (
execuã
); \

655 } 0)

	)

666 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

668 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

669 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

670 *
__ˇn˚l_¨g
 = (
¨g
); \

671 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

672 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

673 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

675 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

676 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

680 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

681 dÿ{

	)

682 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

683 
__˛ónup_f˘_©åibuã
;

687 
	#±hªad_˛ónup_p›
(
execuã
) \

690 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

691 i‡(
execuã
) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 } 0)

	)

694 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

695 
__˛ónup_f˘_©åibuã
;

697 #ifde‡
__USE_GNU


701 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

703 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

704 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

705 *
__ˇn˚l_¨g
 = (
¨g
); \

706 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

707 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

708 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

715 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

716 dÿ{

	)

717 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
;

723 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

726 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

727 i‡(
execuã
) \

728 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

729 
	}
} 0)

	)

730 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

731 
__˛ónup_f˘_©åibuã
;

735 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

736 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

737 #i‚de‡
SHARED


738 
	`__©åibuã__
 ((
__wók__
))

744 
__jmp_buf_èg
;

745 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

751 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

752 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

753 
__THROW
 
	`__n⁄nuŒ
 ((1));

756 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

757 
__THROW
 
	`__n⁄nuŒ
 ((1));

760 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

761 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

764 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

765 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

767 #ifde‡
__USE_XOPEN2K


769 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 c⁄° 
time•ec
 *
__ª°ri˘


771 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

775 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

776 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

780 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

781 
__ª°ri˘
 
__muãx
,

782 *
__ª°ri˘
 
__¥io˚ûög
)

783 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

787 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

788 
__¥io˚ûög
,

789 *
__ª°ri˘
 
__ﬁd_˚ûög
)

790 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

793 #ifde‡
__USE_XOPEN2K8


795 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

796 
__THROW
 
	`__n⁄nuŒ
 ((1));

797 #ifde‡
__USE_GNU


798 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

809 
__THROW
 
	`__n⁄nuŒ
 ((1));

812 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1));

816 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

817 
__ª°ri˘
 
__©å
,

818 *
__ª°ri˘
 
__psh¨ed
)

819 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

822 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

823 
__psh¨ed
)

824 
__THROW
 
	`__n⁄nuŒ
 ((1));

826 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


828 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


829 
__©å
, *
__ª°ri˘
 
__köd
)

830 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

835 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

836 
__THROW
 
	`__n⁄nuŒ
 ((1));

840 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

841 
__ª°ri˘
 
__©å
,

842 *
__ª°ri˘
 
__¥Ÿocﬁ
)

843 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

847 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

848 
__¥Ÿocﬁ
)

849 
__THROW
 
	`__n⁄nuŒ
 ((1));

852 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

853 
__ª°ri˘
 
__©å
,

854 *
__ª°ri˘
 
__¥io˚ûög
)

855 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

858 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

859 
__¥io˚ûög
)

860 
__THROW
 
	`__n⁄nuŒ
 ((1));

862 #ifde‡
__USE_XOPEN2K


864 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

865 *
__robu°√ss
)

866 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

867 #ifde‡
__USE_GNU


868 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

869 *
__robu°√ss
)

870 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

874 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

875 
__robu°√ss
)

876 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 #ifde‡
__USE_GNU


878 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

879 
__robu°√ss
)

880 
__THROW
 
	`__n⁄nuŒ
 ((1));

885 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


890 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


892 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

895 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

896 
__THROW
 
	`__n⁄nuŒ
 ((1));

899 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

900 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

903 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

906 #ifde‡
__USE_XOPEN2K


908 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

909 c⁄° 
time•ec
 *
__ª°ri˘


910 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

914 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

915 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

919 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

921 #ifde‡
__USE_XOPEN2K


923 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

924 c⁄° 
time•ec
 *
__ª°ri˘


925 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

929 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

930 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

936 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

937 
__THROW
 
	`__n⁄nuŒ
 ((1));

940 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

941 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

945 
__ª°ri˘
 
__©å
,

946 *
__ª°ri˘
 
__psh¨ed
)

947 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

950 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

951 
__psh¨ed
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

956 
__ª°ri˘
 
__©å
,

957 *
__ª°ri˘
 
__¥ef
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

961 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

962 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

970 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

971 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

972 
__THROW
 
	`__n⁄nuŒ
 ((1));

975 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

976 
__THROW
 
	`__n⁄nuŒ
 ((1));

979 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

980 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

983 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

984 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

991 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

992 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

993 
	`__n⁄nuŒ
 ((1, 2));

1002 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1003 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1004 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1005 
	`__n⁄nuŒ
 ((1, 2, 3));

1010 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1014 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1015 
__THROW
 
	`__n⁄nuŒ
 ((1));

1018 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1019 
__ª°ri˘
 
__©å
,

1020 *
__ª°ri˘
 
__psh¨ed
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1024 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1025 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1027 #ifde‡
__USE_XOPEN2K


1029 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1030 
__ª°ri˘
 
__©å
,

1031 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1032 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1035 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1036 
__˛ockid_t
 
__˛ock_id
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1041 #ifde‡
__USE_XOPEN2K


1046 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1047 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1051 
__THROW
 
	`__n⁄nuŒ
 ((1));

1054 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1055 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1059 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1063 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1070 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1071 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1072 
__©å
, 
__cou¡
)

1073 
__THROW
 
	`__n⁄nuŒ
 ((1));

1076 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1077 
__THROW
 
	`__n⁄nuŒ
 ((1));

1080 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1081 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1));

1089 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1090 
__THROW
 
	`__n⁄nuŒ
 ((1));

1093 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1094 
__ª°ri˘
 
__©å
,

1095 *
__ª°ri˘
 
__psh¨ed
)

1096 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1099 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1100 
__psh¨ed
)

1101 
__THROW
 
	`__n⁄nuŒ
 ((1));

1113 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1114 (*
__de°r_fun˘i⁄
) (*))

1115 
__THROW
 
	`__n⁄nuŒ
 ((1));

1118 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1121 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1124 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1125 c⁄° *
__poöãr
Ë
__THROW
 ;

1128 #ifde‡
__USE_XOPEN2K


1130 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1131 
__˛ockid_t
 *
__˛ock_id
)

1132 
__THROW
 
	`__n⁄nuŒ
 ((2));

1147 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1148 (*
__∑ª¡
) (),

1149 (*
__chûd
Ë()Ë
__THROW
;

1152 #ifde‡
__USE_EXTERN_INLINES


1154 
__exã∫_ölöe
 

1155 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1157  
__thªad1
 =
__thªad2
;

1158 
	}
}

1161 
	g__END_DECLS


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
__exãnsi⁄__
 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 #ifde‡
__USE_XOPEN2K


31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/bits/sched.h

20 #i‚de‡
__√ed_sched∑øm


22 #i‚de‡
_SCHED_H


28 
	#SCHED_OTHER
 0

	)

29 
	#SCHED_FIFO
 1

	)

30 
	#SCHED_RR
 2

	)

31 #ifde‡
__USE_GNU


32 
	#SCHED_BATCH
 3

	)

33 
	#SCHED_IDLE
 5

	)

35 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

38 #ifde‡
__USE_GNU


40 
	#CSIGNAL
 0x000000f‡

	)

41 
	#CLONE_VM
 0x00000100

	)

42 
	#CLONE_FS
 0x00000200

	)

43 
	#CLONE_FILES
 0x00000400

	)

44 
	#CLONE_SIGHAND
 0x00000800

	)

45 
	#CLONE_PTRACE
 0x00002000

	)

46 
	#CLONE_VFORK
 0x00004000

	)

48 
	#CLONE_PARENT
 0x00008000

	)

50 
	#CLONE_THREAD
 0x00010000

	)

51 
	#CLONE_NEWNS
 0x00020000

	)

52 
	#CLONE_SYSVSEM
 0x00040000

	)

53 
	#CLONE_SETTLS
 0x00080000

	)

54 
	#CLONE_PARENT_SETTID
 0x00100000

	)

56 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

58 
	#CLONE_DETACHED
 0x00400000

	)

59 
	#CLONE_UNTRACED
 0x00800000

	)

61 
	#CLONE_CHILD_SETTID
 0x01000000

	)

63 
	#CLONE_NEWUTS
 0x04000000

	)

64 
	#CLONE_NEWIPC
 0x08000000

	)

65 
	#CLONE_NEWUSER
 0x10000000

	)

66 
	#CLONE_NEWPID
 0x20000000

	)

67 
	#CLONE_NEWNET
 0x40000000

	)

68 
	#CLONE_IO
 0x80000000

	)

72 
	ssched_∑øm


74 
	m__sched_¥i‹ôy
;

77 
	g__BEGIN_DECLS


79 #ifde‡
__USE_GNU


81 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

82 
__Êags
, *
__¨g
, ...Ë
__THROW
;

85 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

88 
	$sched_gë˝u
 (Ë
__THROW
;

91 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

95 
__END_DECLS


99 #i‡!
deföed
 
__deföed_sched∑øm
 \

100 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

101 
	#__deföed_sched∑øm
 1

	)

103 
	s__sched_∑øm


105 
__sched_¥i‹ôy
;

107 #unde‡
__√ed_sched∑øm


111 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


112 
	#__˝u_£t_t_deföed


	)

114 
	#__CPU_SETSIZE
 1024

	)

115 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

118 
	t__˝u_mask
;

121 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

122 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

127 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

128 } 
	t˝u_£t_t
;

131 #i‡
	`__GNUC_PREREQ
 (2, 91)

132 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

133 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

135 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

137 
size_t
 
__i
; \

138 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

139 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

140 
__i
 = 0; __ò< 
__imax
; ++__i) \

141 
__bôs
[
__i
] = 0; \

142 
	}
} 0)

	)

144 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

145 (
__exãnsi⁄__
 \

146 ({ 
size_t
 
__˝u
 = (
˝u
); \

147 
__˝u
 / 8 < (
£tsize
) \

148 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

149 |
	`__CPUMASK
 (
__˝u
)) \

150 : 0; }))

	)

151 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

152 (
__exãnsi⁄__
 \

153 ({ 
size_t
 
__˝u
 = (
˝u
); \

154 
__˝u
 / 8 < (
£tsize
) \

155 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

156 &~
	`__CPUMASK
 (
__˝u
)) \

157 : 0; }))

	)

158 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

159 (
__exãnsi⁄__
 \

160 ({ 
size_t
 
__˝u
 = (
˝u
); \

161 
__˝u
 / 8 < (
£tsize
) \

162 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

163 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

164 : 0; }))

	)

166 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

167 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

169 #i‡
__GNUC_PREREQ
 (2, 91)

170 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

171 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

173 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

174 (
__exãnsi⁄__
 \

175 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

176 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

177 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

178 
size_t
 
__i
; \

179 
__i
 = 0; __ò< 
__imax
; ++__i) \

180 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

182 
__i
 =
__imax
; }))

	)

185 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

186 (
__exãnsi⁄__
 \

187 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

188 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

189 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

190 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

191 
size_t
 
__i
; \

192 
__i
 = 0; __ò< 
__imax
; ++__i) \

193 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

194 
__de°
; }))

	)

196 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

197 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

198 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

199 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

201 
__BEGIN_DECLS


203 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

204 
__THROW
;

205 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

206 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

208 
__END_DECLS


	@
1
.
1
/usr/include
139
3048
arch/Main.c
arch/do_syscall.c
arch/i386/intr-stubs.S
arch/i386/switch.S
arch/interrupt.c
arch/syscall.c
bitmap.c
build/Main.s
device/block.c
device/console.c
device/device.c
device/ide.c
device/kbd.c
device/partition.c
device/pit.c
include/bitmap.h
include/ctype.h
include/debug.h
include/device/block.h
include/device/console.h
include/device/device.h
include/device/ide.h
include/device/io.h
include/device/kbd.h
include/device/partition.h
include/device/pit.h
include/do_syscall.h
include/interrupt.h
include/intr-stubs.h
include/inttypes.h
include/limits.h
include/list.h
include/loader.h
include/mem/malloc.h
include/mem/mm.h
include/mem/paging.h
include/mem/palloc.h
include/packed.h
include/proc/proc.h
include/proc/sched.h
include/proc/switch.h
include/round.h
include/ssulib.h
include/stdarg.h
include/stdbool.h
include/stddef.h
include/stdint.h
include/stdio.h
include/stdlib.h
include/string.h
include/synch.h
include/syscall.h
include/type.h
include/vaddr.h
list.c
mem/malloc.c
mem/mm.c
mem/paging.c
mem/palloc.c
proc/proc.c
proc/sched.c
ssulib.c
stdio.c
string.c
synch.c
vsprintk.c
/usr/include/ctype.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/syscall.h
/usr/include/alloca.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sys/syscall.h
/usr/include/sys/types.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/unistd.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/syscall.h
/usr/include/bits/typesizes.h
/usr/include/gnu/stubs.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/asm/unistd_32.h
/usr/include/asm/unistd_64.h
/usr/include/asm/unistd_x32.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/libc-lock.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sigset.h
/usr/include/bits/time.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/linux/limits.h
/usr/include/wchar.h
/usr/include/bits/timex.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/bits/sched.h
