cscope 15 $HOME/Documents/SSUOS_P4/ssuos/src               0000179129
	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/arch/Main.c

1 
	~<öãºu±.h
>

2 
	~<devi˚/c⁄sﬁe.h
>

3 
	~<devi˚/block.h
>

4 
	~<ty≥.h
>

5 
	~<devi˚/kbd.h
>

6 
	~<devi˚/io.h
>

7 
	~<devi˚/pô.h
>

8 
	~<°d¨g.h
>

9 
	~<ssulib.h
>

10 
	~<mem/∑gög.h
>

11 
	~<¥oc/¥oc.h
>

12 
	~<mem/mm.h
>

13 
	~<sysˇŒ.h
>

14 
	~<devi˚/kbd.h
>

16 
	~<synch.h
>

17 
	~<mem/∑Œoc.h
>

19 
¥o˚ss
 *
cur_¥o˚ss
;

21 
maö_öô
();

22 
¥öt_c⁄åibut‹s
();

24 c⁄° * 
	gVERSION
 = "0.1.02";

25 c⁄° * 
	gAUTHOR
 = "OSLAB";

26 c⁄° * 
	gMODIFIER
 = "You";

28 
	$ssuos_maö
()

30 
	`maö_öô
();

32 
	`idÀ
(
NULL
);

35 
	}
}

37 
	$maö_öô
()

39 
	`öå_dißbÀ
();

41 
	`öô_c⁄sﬁe
();

43 
	`¥öt_c⁄åibut‹s
();

45 
	`dëe˘_mem
();

46 
	`¥ötk
("%s", "Memory Detecting\n");

48 
	`öô_pô
();

49 
	`¥ötk
("%s", "PIT Initialization\n");

51 
	`öô_sysˇŒ
();

52 
	`¥ötk
("%s", "System call Initialization\n");

54 
	`öô_öå
();

55 
	`¥ötk
("%s", "Interrupt Initialization\n");

57 
	`öô_kbd
();

59 
	`öô_∑Œoc
();

60 
	`¥ötk
("%s" "Palloc Initialization\n");

62 
	`öô_∑gög
();

63 
	`¥ötk
("%s", "Paging Initialization\n");

65 
	`öô_¥oc
();

66 
	`¥ötk
("%s", "Process Initialization\n");

68 
	`öå_íabÀ
();

70 
	`¥ötk
("========== initialization complete ==========\n\n");

73 #ifde‡
SCREEN_SCROLL


74 
	`ª‰eshS¸ìn
();

76 
	}
}

78 
	$¥öt_c⁄åibut‹s
()

80 
	`¥ötk
("%s", "SSUOS main start!!!!\n");

81 
	`¥ötk
(" ______ ______ __ __ ______ ______ \n");

82 
	`¥ötk
(" / \\ / \\ / | / | / \\ / \\ \n");

83 
	`¥ötk
(" /$$$$$$ |/$$$$$$ |$$ | $$ | /$$$$$$ |/$$$$$$ |\n");

84 
	`¥ötk
(" $$ \\__$$/ $$ \\__$$/ $$ | $$ | $$ | $$ |$$ \\__$$/ \n");

85 
	`¥ötk
(" $$ \\ $$ \\ $$ | $$ | $$ | $$ |$$ \\ \n");

86 
	`¥ötk
(" $$$$$$ | $$$$$$ |$$ | $$ | $$ | $$ | $$$$$$ |\n");

87 
	`¥ötk
(" / \\__$$ |/ \\__$$ |$$ \\__$$ | $$ \\__$$ |/ \\__$$ |\n");

88 
	`¥ötk
(" $$ $$/ $$ $$/ $$ $$/ $$ $$/ $$ $$/ \n");

89 
	`¥ötk
(" $$$$$$/ $$$$$$/ $$$$$$/ $$$$$$/ $$$$$$/ \n");

90 
	`¥ötk
("\n");

91 
	`¥ötk
("****************Made by OSLAB in SoongSil University*********************\n");

92 
	`¥ötk
("\n");

93 
	`¥ötk
("contributors : Yunkyu Lee , Minwoo Jang , Sanghun Choi , Eunseok Choi\n");

94 
	`¥ötk
(" Hyunho Ji , Giwook Kang , Kisu Kim , Seonguk Lee \n");

95 
	`¥ötk
(" Gibeom Byeon, Jeonghwan Lee, Kyoungmin Kim, Myungjoon Shon\n");

96 
	`¥ötk
(" Jinwoo Lee, Hansol Lee, Mhanwoo Heo, Jeongwoo Choi, Yongmin Kim\n");

97 
	`¥ötk
("\n");

98 
	`¥ötk
("************************ Professor. Jiman Hong ************************\n");

99 
	`¥ötk
(" \n");

100 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/arch/do_syscall.c

1 
	~<¥oc/sched.h
>

2 
	~<¥oc/¥oc.h
>

3 
	~<devi˚/devi˚.h
>

4 
	~<öãºu±.h
>

5 
	~<devi˚/kbd.h
>

7 
pid_t
 
	$do_f‹k
(
¥oc_func
 
func
, * 
aux
)

9 
pid_t
 
pid
;

10 
¥oc_›ti⁄
 
›t
;

12 
›t
.
ni˚
 = 
cur_¥o˚ss
 ->Çice;

13 
›t
.
π_¥i‹ôy
 = 
cur_¥o˚ss
->Ñt_priority;

15 
pid
 = 
	`¥oc_¸óã
(
func
, &
›t
, 
aux
);

17  
pid
;

18 
	}
}

20 
	$do_exô
(
°©us
)

22 
cur_¥o˚ss
->
exô_°©us
 = 
°©us
;

23 
	`¥oc_‰ì
();

24 
	`do_sched_⁄_ªtu∫
();

25 
	}
}

27 
pid_t
 
	$do_waô
(*
°©us
)

29 
cur_¥o˚ss
->
chûd_pid
 != -1)

30 
	`scheduÀ
();

32 
pid
 = 
cur_¥o˚ss
->
chûd_pid
;

33 
cur_¥o˚ss
->
chûd_pid
 = -1;

35 
¥o˚ss
 
¥ocs
[];

36 
¥ocs
[
pid
].
°©e
 = 
PROC_UNUSED
;

38 if(!
°©us
)

39 *
°©us
 = 
¥ocs
[
pid
].
exô_°©us
;

41  
pid
;

42 
	}
}

44 
	$do_shutdown
()

46 
	`dev_shutdown
();

48 
	}
}

50 
	$do_ssuªad
()

52  
	`kbd_ªad_ch¨
();

53 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/arch/i386/intr-stubs.S

1 .
	gãxt


16 .
func
 
öå_íåy


17 
	göå_íåy
:

19 
pushl
 %
ds


20 
pushl
 %
es


21 
pushl
 %
fs


22 
pushl
 %
gs


23 
pushÆ


26 
˛d


30 
ÀÆ
 56(%
e•
), %
ebp


33 
	gpushl
 %
	ge•


34 .
globl
 
öå_comm⁄


35 
ˇŒ
 
öå_comm⁄


36 
addl
 
	g$4
, %
	ge•


37 .
	gídfunc


47 .
globl
 
	göå_exô


48 .
func
 
öå_exô


49 
	göå_exô
:

51 
p›Æ


52 
p›l
 %
gs


53 
p›l
 %
fs


54 
p›l
 %
es


55 
p›l
 %
ds


59 
addl
 
$12
, %
e•


62 
	gúë


63 .
	gídfunc


91 .
	gd©a


92 .
globl
 
öå_°ubs


93 
	göå_°ubs
:

98 
	#zîo
 \

99 
pushl
 %
ebp
; \

100 
pushl
 
$0


	)

105 
	#REAL
 \

106 
	`pushl
 (%
e•
); \

107 
movl
 %
ebp
, 4(%
e•
)

	)

113 
	#STUB
(
NUMBER
, 
TYPE
) \

114 .
ãxt
; \

115 .
func
 
öå
##
NUMBER
##
_°ub
; \

116 
öå
##
NUMBER
##
_°ub
: \

117 
TYPE
; \

118 
push
 
$0x
##
NUMBER
; \

119 
jmp
 
öå_íåy
; \

120 .
ídfunc
; \

122 .
d©a
; \

123 .
öå
##
NUMBER
##
_°ub
;

	)

125 
	$STUB
(00, 
zîo
Ë
	$STUB
(01, 
zîo
Ë
	$STUB
(02, 
zîo
Ë
	$STUB
(03, 
zîo
)

126 
	$STUB
(04, 
zîo
Ë
	$STUB
(05, 
zîo
Ë
	$STUB
(06, 
zîo
Ë
	$STUB
(07, 
zîo
)

127 
	$STUB
(08, 
REAL
Ë
	$STUB
(09, 
zîo
Ë
	$STUB
(0a, 
REAL
Ë
	$STUB
(0b, 
REAL
)

128 
	$STUB
(0c, 
zîo
Ë
	$STUB
(0d, 
REAL
Ë
	$STUB
(0e, 
REAL
Ë
	$STUB
(0f, 
zîo
)

130 
	$STUB
(10, 
zîo
Ë
	$STUB
(11, 
REAL
Ë
	$STUB
(12, 
zîo
Ë
	$STUB
(13, 
zîo
)

131 
	$STUB
(14, 
zîo
Ë
	$STUB
(15, 
zîo
Ë
	$STUB
(16, 
zîo
Ë
	$STUB
(17, 
zîo
)

132 
	$STUB
(18, 
REAL
Ë
	$STUB
(19, 
zîo
Ë
	$STUB
(1a, 
REAL
Ë
	$STUB
(1b, 
REAL
)

133 
	$STUB
(1c, 
zîo
Ë
	$STUB
(1d, 
REAL
Ë
	$STUB
(1e, 
REAL
Ë
	$STUB
(1f, 
zîo
)

135 
	$STUB
(20, 
zîo
Ë
	$STUB
(21, 
zîo
Ë
	$STUB
(22, 
zîo
Ë
	$STUB
(23, 
zîo
)

136 
	$STUB
(24, 
zîo
Ë
	$STUB
(25, 
zîo
Ë
	$STUB
(26, 
zîo
Ë
	$STUB
(27, 
zîo
)

137 
	$STUB
(28, 
zîo
Ë
	$STUB
(29, 
zîo
Ë
	$STUB
(2a, 
zîo
Ë
	$STUB
(2b, 
zîo
)

138 
	$STUB
(2c, 
zîo
Ë
	$STUB
(2d, 
zîo
Ë
	$STUB
(2e, 
zîo
Ë
	$STUB
(2f, 
zîo
)

140 
	$STUB
(30, 
zîo
Ë
	$STUB
(31, 
zîo
Ë
	$STUB
(32, 
zîo
Ë
	$STUB
(33, 
zîo
)

141 
	$STUB
(34, 
zîo
Ë
	$STUB
(35, 
zîo
Ë
	$STUB
(36, 
zîo
Ë
	$STUB
(37, 
zîo
)

142 
	$STUB
(38, 
zîo
Ë
	$STUB
(39, 
zîo
Ë
	$STUB
(3a, 
zîo
Ë
	$STUB
(3b, 
zîo
)

143 
	$STUB
(3c, 
zîo
Ë
	$STUB
(3d, 
zîo
Ë
	$STUB
(3e, 
zîo
Ë
	$STUB
(3f, 
zîo
)

145 
	$STUB
(40, 
zîo
Ë
	$STUB
(41, 
zîo
Ë
	$STUB
(42, 
zîo
Ë
	$STUB
(43, 
zîo
)

146 
	$STUB
(44, 
zîo
Ë
	$STUB
(45, 
zîo
Ë
	$STUB
(46, 
zîo
Ë
	$STUB
(47, 
zîo
)

147 
	$STUB
(48, 
zîo
Ë
	$STUB
(49, 
zîo
Ë
	$STUB
(4a, 
zîo
Ë
	$STUB
(4b, 
zîo
)

148 
	$STUB
(4c, 
zîo
Ë
	$STUB
(4d, 
zîo
Ë
	$STUB
(4e, 
zîo
Ë
	$STUB
(4f, 
zîo
)

150 
	$STUB
(50, 
zîo
Ë
	$STUB
(51, 
zîo
Ë
	$STUB
(52, 
zîo
Ë
	$STUB
(53, 
zîo
)

151 
	$STUB
(54, 
zîo
Ë
	$STUB
(55, 
zîo
Ë
	$STUB
(56, 
zîo
Ë
	$STUB
(57, 
zîo
)

152 
	$STUB
(58, 
zîo
Ë
	$STUB
(59, 
zîo
Ë
	$STUB
(5a, 
zîo
Ë
	$STUB
(5b, 
zîo
)

153 
	$STUB
(5c, 
zîo
Ë
	$STUB
(5d, 
zîo
Ë
	$STUB
(5e, 
zîo
Ë
	$STUB
(5f, 
zîo
)

155 
	$STUB
(60, 
zîo
Ë
	$STUB
(61, 
zîo
Ë
	$STUB
(62, 
zîo
Ë
	$STUB
(63, 
zîo
)

156 
	$STUB
(64, 
zîo
Ë
	$STUB
(65, 
zîo
Ë
	$STUB
(66, 
zîo
Ë
	$STUB
(67, 
zîo
)

157 
	$STUB
(68, 
zîo
Ë
	$STUB
(69, 
zîo
Ë
	$STUB
(6a, 
zîo
Ë
	$STUB
(6b, 
zîo
)

158 
	$STUB
(6c, 
zîo
Ë
	$STUB
(6d, 
zîo
Ë
	$STUB
(6e, 
zîo
Ë
	$STUB
(6f, 
zîo
)

160 
	$STUB
(70, 
zîo
Ë
	$STUB
(71, 
zîo
Ë
	$STUB
(72, 
zîo
Ë
	$STUB
(73, 
zîo
)

161 
	$STUB
(74, 
zîo
Ë
	$STUB
(75, 
zîo
Ë
	$STUB
(76, 
zîo
Ë
	$STUB
(77, 
zîo
)

162 
	$STUB
(78, 
zîo
Ë
	$STUB
(79, 
zîo
Ë
	$STUB
(7a, 
zîo
Ë
	$STUB
(7b, 
zîo
)

163 
	$STUB
(7c, 
zîo
Ë
	$STUB
(7d, 
zîo
Ë
	$STUB
(7e, 
zîo
Ë
	`STUB
(7f, zero)

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/arch/i386/switch.S

2 .
£t
 
	gARG_CUR
, 8

3 .
£t
 
	gARG_NEXT
, 12

5 .
globÆ
 
	gswôch_¥o˚ss


7 .
func
 
swôch_¥o˚ss


8 
	gswôch_¥o˚ss
:

11 
pushl
 %
ebp


12 
movl
 %
e•
, %
ebp


14 
	gpushl
 %
óx


15 
	gpushl
 %
ebx


16 
	gpushl
 %
ecx


17 
	gpushl
 %
edx


18 
	gpushl
 %
esi


19 
	gpushl
 %
	gedi


22 .
globÆ
 
¥o˚ss_°ack_ofs


23 
mov
 
	g¥o˚ss_°ack_ofs
, %
edx


24 
mov
 
	g¥o˚ss_°ack_ofs
, %
ebx


25 
addl
 
	g$4
, %
ebx


28 
movl
 
ARG_CUR
(%
ebp
), %
óx


29 
	gmovl
 %
	ge•
, (%
	góx
, %
	gedx
, 1)

32 
movl
 
ARG_NEXT
(%
ebp
), %
óx


34 
movl
 (%
óx
, %
edx
, 1), %
e•


35 
movl
 (%
óx
, %
ebx
, 1), %
ecx


36 
	gmovl
 %
	gecx
, %
¸3


39 
	gp›l
 %
edi


40 
	gp›l
 %
esi


41 
	gp›l
 %
edx


42 
	gp›l
 %
ecx


43 
	gp›l
 %
ebx


44 
	gp›l
 %
óx


46 
	gp›l
 %
ebp


48 
	gªt


	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/arch/interrupt.c

1 
	~<öãºu±.h
>

2 
	~<devi˚/c⁄sﬁe.h
>

3 
	~<ty≥.h
>

4 
	~<devi˚/pô.h
>

5 
	~<¥oc/sched.h
>

6 
	~<devi˚/io.h
>

7 
	~<devi˚/kbd.h
>

8 
	~<¥oc/¥oc.h
>

9 
	~<ssulib.h
>

10 
	~<¥oc/swôch.h
>

11 
	~<sysˇŒ.h
>

13 #¥agm®
∑ck
(
push
, 1)

15 
	s_ID


17 
	mLowOff£t
;

18 
	mCodeSñe˘‹
;

19 
	mTy≥
;

20 
	mHighOff£t
;

21 } 
	t_ID
;

23 
	s_IDTR


25 
	mSize
;

26 
	mAddªss
;

27 } 
	t_IDTR
;

28 #¥agm®
∑ck
(
p›
)

30 #i‚de‡
ASSERT


31 
	#ASSERT
(
CONDITION
Ë–(*Ë0)

	)

34 
	gticks
;

35 
öå_h™dÀr_func
 *
	gh™dÀrs
[
INTR_MAX
];

36 
boﬁ
 
	gsched_⁄_ªtu∫
;

37 
boﬁ
 
	gö_exã∫Æ_öå
;

38 
_ID
 *
	gidt
;

39 
schedulög
;

40 
	g¥oc_ticks
;

42 
	töå_°ub_func
 ();

43 
deÁu…_h™dÀr
(
öå_‰ame
 *
i‰ame
);

44 
timî_h™dÀr
(
öå_‰ame
 *
i‰ame
);

45 
sysˇŒ_h™dÀr
(
öå_‰ame
 *
i‰ame
);

46 
öå_exô
 ();

47 
öå_°ub_func
 *
öå_°ubs
[
INTR_MAX
];

49 
	$öô_öå
()

51 
i
;

52 
_IDTR
 
IDTR
;

53 
ticks
 = 0;

54 
ö_exã∫Æ_öå
 = 
Ál£
;

55 
sched_⁄_ªtu∫
 = 
Ál£
;

56 
öå_Àvñ
 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
();

58 
__asm__
 
	`__vﬁ©ûe
("sidà%0"::"m" (
IDTR
));

59 
	`¥ötk
("idå sizê: %dáddªs†: 0x%x\n", 
IDTR
.
Size
, IDTR.
Addªss
);

60 
idt
 = (
_ID
 *)
IDTR
.
Addªss
;

62 
i
 = 0; i < 
INTR_MAX
; i++)

64 
idt
[
i
].
LowOff£t
 = ()(()
öå_°ubs
[i] & 0xffff);

65 
idt
[
i
].
CodeSñe˘‹
 = ()
CODE_SEGMENT
;

66 
idt
[
i
].
Ty≥
 = ()0x8e00;

67 
idt
[
i
].
HighOff£t
 = ()((()
öå_°ubs
[i] >> 16) & 0xffff);

69 
h™dÀrs
[
i
] = 
deÁu…_h™dÀr
;

72 
	`ªg_h™dÀr
(32, 
timî_h™dÀr
);

73 
	`¥ötk
("%s", "Timer Handler Registration\n");

74 
	`¥ötk
("%s", "Keyboard Handler Registration\n");

76 
	`ªg_h™dÀr
(0x30, 
sysˇŒ_h™dÀr
);

77 
	`¥ötk
("%s", "System Call Handler Registration\n");

79 
	`öå_£t_Àvñ
 (
ﬁd_Àvñ
);

81 
	}
}

83 
	$öå_comm⁄
(
öå_‰ame
 *
i‰ame
)

85 
ö_exã∫Æ_öå
 = 
i‰ame
->
vec_no
 >= 0x20 && iframe->vec_no < 0x30;

87 if(
ö_exã∫Æ_öå
)

89 
	`ASSERT
 (
	`öå_gë_Àvñ
 (Ë=
INTR_OFF
);

90 
sched_⁄_ªtu∫
 = 
Ál£
;

93 if(
h™dÀrs
[
i‰ame
->
vec_no
] !
NULL
)

94 
h™dÀrs
[
i‰ame
->
vec_no
](iframe);

96 
	`deÁu…_h™dÀr
(
i‰ame
);

98 if(
ö_exã∫Æ_öå
)

100 
	`ASSERT
 (
i‰ame
->
vec_no
 >= 0x20 && iframe->vec_no < 0x30);

101 
ö_exã∫Æ_öå
 = 
Ál£
;

102 
	`outb
(0x20, 0x20);

104 if(
i‰ame
->
vec_no
 >= 0x28)

105 
	`outb
(0xa0, 0x20);

107 if(
sched_⁄_ªtu∫
)

108 
	`scheduÀ
();

110 
	}
}

112 
	$do_sched_⁄_ªtu∫
()

114 
	`ASSERT
 (
	`öå_c⁄ãxt
 ());

115 
sched_⁄_ªtu∫
 = 
åue
;

116 
	}
}

118 
	$ªg_h™dÀr
(
idx
, 
öå_h™dÀr_func
 *
h™dÀr
)

120 
öå_Àvñ
 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
();

121 
h™dÀrs
[
idx
] = 
h™dÀr
;

123 
	`öå_£t_Àvñ
 (
ﬁd_Àvñ
);

125 
	}
}

127 
	#FLAG_MBS
 0x00000002

	)

128 
	#FLAG_IF
 0x00000200

	)

130 
öå_Àvñ
 
	$öå_gë_Àvñ
 ()

132 
uöt32_t
 
Êags
;

133 
asm
 vﬁ©ûê("pushÊ;Ö›»%0" : "=g" (
Êags
));

134  
Êags
 & 
FLAG_IF
 ? 
INTR_ON
 : 
INTR_OFF
;

135 
	}
}

137 
öå_Àvñ
 
	$öå_£t_Àvñ
 (
öå_Àvñ
 
Àvñ
)

139  
Àvñ
 =
INTR_ON
 ? 
	`öå_íabÀ
 (Ë: 
	`öå_dißbÀ
 ();

140 
	}
}

142 
öå_Àvñ
 
	$öå_íabÀ
 ()

144 
öå_Àvñ
 
ﬁd_Àvñ
 = 
	`öå_gë_Àvñ
 ();

145 
	`ASSERT
 (!
	`öå_c⁄ãxt
 ());

147 
asm
 volatile ("sti");

149  
ﬁd_Àvñ
;

150 
	}
}

152 
öå_Àvñ
 
	$öå_dißbÀ
 ()

154 
öå_Àvñ
 
ﬁd_Àvñ
 = 
	`öå_gë_Àvñ
 ();

156 
asm
 volatile ("cli" : : : "memory");

158  
ﬁd_Àvñ
;

159 
	}
}

161 
boﬁ
 
	$öå_c⁄ãxt
 ()

163  
ö_exã∫Æ_öå
;

164 
	}
}

166 
	$gë_ticks
()

168  
ticks
;

169 
	}
}

171 
	$deÁu…_h™dÀr
(
öå_‰ame
 *
i‰ame
)

173 
	`¥ötk
("\n\nöàöå %d\n\n", 
i‰ame
->
vec_no
);

174 
	}
}

176 
	$timî_h™dÀr
(
öå_‰ame
 *
i‰ame
)

178 
ticks
++;

180 i‡((
cur_¥o˚ss
 -> 
pid
 !0Ë&& (!
schedulög
)) {

181 
cur_¥o˚ss
->
time_u£d
++;

182 
cur_¥o˚ss
->
time_¶i˚
++;

183 if(
cur_¥o˚ss
->
time_¶i˚
 >
TIMER_MAX
)

184 
	`do_sched_⁄_ªtu∫
();

187 #ifde‡
SCREEN_SCROLL


188 
ª‰esh_ticks
 = 0;

189 if(++
ª‰esh_ticks
 >(
PIT_FRQ_HZ
/
REFRESH_FPS
)) {

190 
ª‰esh_ticks
 = 0;

191 
	`ª‰eshS¸ìn
();

194 
	}
}

196 
	$sysˇŒ_h™dÀr
(
öå_‰ame
 *
i‰ame
)

198 
sys_num
, 
¨g_num
, 
ªt
;

199 *
±
;

200 
i
;

202 
	#SYSCALL_ARG_MAX
 3

	)

203 
¨g
[
SYSCALL_ARG_MAX
];

205 
±
 = (*Ë((()&
i‰ame
->
ss
) - 4);

206 
sys_num
 = *
±
++;

207 
¨g_num
 = 
sysˇŒ_tbl
[
sys_num
][1];

209 
i
 = 0; i<
¨g_num
; i++)

210 
¨g
[
i
] = *
±
++;

212 
¨g_num
)

215 
ªt
 = (((*)())
sysˇŒ_tbl
[
sys_num
][0])();

218 
ªt
 = (((*)())
sysˇŒ_tbl
[
sys_num
][0])(
¨g
[0]);

221 
ªt
 = (((*)(, ))
sysˇŒ_tbl
[
sys_num
][0])(
¨g
[0],árg[1]);

224 
ªt
 = (((*)(, , ))
sysˇŒ_tbl
[
sys_num
][0]Ë(
¨g
[0],árg[1],árg[2]);

228 *(
±
 + 3Ë
ªt
;

229 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/arch/syscall.c

1 
	~<sysˇŒ.h
>

2 
	~<do_sysˇŒ.h
>

3 
	~<¥oc/¥oc.h
>

6 
	#sysˇŒ0
(
SYS_NUM
) ({ \

7 
ªt
; \

8 
__asm__
 
	`__vﬁ©ûe
( \

13 : [
num
] "g" (
SYS_NUM
) \

15 
ªt
; \

16 })

	)

18 
	#sysˇŒ1
(
SYS_NUM
, 
ARG0
) ({ \

19 
ªt
; \

20 
__asm__
 
	`__vﬁ©ûe
( \

26 : [
num
] "g" (
SYS_NUM
), \

27 [
¨g0
] "g" (
ARG0
) \

29 
ªt
; \

30 })

	)

32 
	#sysˇŒ2
(
SYS_NUM
, 
ARG0
, 
ARG1
) ({ \

33 
ªt
; \

34 
__asm__
 
	`__vﬁ©ûe
( \

41 : [
num
] "g" (
SYS_NUM
), \

42 [
¨g0
] "g" (
ARG0
), \

43 [
¨g1
] "g" (
ARG1
) \

45 
ªt
; \

46 })

	)

48 
	#sysˇŒ3
(
SYS_NUM
, 
ARG0
, 
ARG1
, 
ARG2
) ({ \

49 
ªt
; \

50 
__asm__
 
	`__vﬁ©ûe
( \

58 : [
num
] "g" (
SYS_NUM
), \

59 [
¨g0
] "g" (
ARG0
), \

60 [
¨g1
] "g" (
ARG1
), \

61 [
¨g2
] "g" (
ARG2
) \

63 
ªt
; \

64 })

	)

66 
	gsysˇŒ_tbl
[
SYS_NUM
][2];

68 
	#REGSYS
(
NUM
, 
FUNC
, 
ARG
) \

69 
sysˇŒ_tbl
[
NUM
][0] = ()
FUNC
; \

70 
sysˇŒ_tbl
[
NUM
][1] = 
ARG
;

	)

73 
	$öô_sysˇŒ
()

75 
	`REGSYS
(
SYS_FORK
, 
do_f‹k
, 2);

76 
	`REGSYS
(
SYS_EXIT
, 
do_exô
, 1);

77 
	`REGSYS
(
SYS_WAIT
, 
do_waô
, 1);

78 
	`REGSYS
(
SYS_SSUREAD
, 
do_ssuªad
, 0);

79 
	`REGSYS
(
SYS_SHUTDOWN
, 
do_shutdown
, 0);

80 
	}
}

82 
	$exô
(
°©us
)

84 
	`sysˇŒ1
(
SYS_EXIT
, 
°©us
);

85 
	}
}

87 
pid_t
 
	$f‹k
(
¥oc_func
 
func
, * 
aux
)

89  
	`sysˇŒ2
(
SYS_FORK
, 
func
, 
aux
);

90 
	}
}

92 
pid_t
 
	$waô
(*
°©us
)

94  
	`sysˇŒ1
(
SYS_WAIT
, 
°©us
);

95 
	}
}

97 
	$ssuªad
()

99  
	`sysˇŒ0
(
SYS_SSUREAD
);

100 
	}
}

102 
	$shutdown
()

104 
	`sysˇŒ0
(
SYS_SHUTDOWN
);

105 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/bitmap.c

1 
	~<bôm≠.h
>

2 
	~<limôs.h
>

3 
	~<round.h
>

7 #ifde‡
FILESYS


8 
	~<fûe.h
>

11 #i‚de‡
ASSERT


12 
	#ASSERT
(
COND
Ë;

	)

23 
	tñem_ty≥
;

26 
	#ELEM_BITS
 ( (
ñem_ty≥
Ë* 
CHAR_BIT
)

	)

31 
	sbôm≠


33 
size_t
 
	mbô_˙t
;

34 
ñem_ty≥
 *
	mbôs
;

39 
ölöe
 
size_t


40 
	$ñem_idx
 (
size_t
 
bô_idx
)

42  
bô_idx
 / 
ELEM_BITS
;

43 
	}
}

47 
ölöe
 
ñem_ty≥


48 
	$bô_mask
 (
size_t
 
bô_idx
)

50  (
ñem_ty≥
Ë1 << (
bô_idx
 % 
ELEM_BITS
);

51 
	}
}

54 
ölöe
 
size_t


55 
	$ñem_˙t
 (
size_t
 
bô_˙t
)

57  
	`DIV_ROUND_UP
 (
bô_˙t
, 
ELEM_BITS
);

58 
	}
}

61 
ölöe
 
size_t


62 
	$byã_˙t
 (
size_t
 
bô_˙t
)

64   (
ñem_ty≥
Ë* 
	`ñem_˙t
 (
bô_˙t
);

65 
	}
}

69 
ölöe
 
ñem_ty≥


70 
	$œ°_mask
 (c⁄° 
bôm≠
 *
b
)

72 
œ°_bôs
 = 
b
->
bô_˙t
 % 
ELEM_BITS
;

73  
œ°_bôs
 ? ((
ñem_ty≥
) 1 <<Üast_bits) - 1 : (elem_type) -1;

74 
	}
}

107 
bôm≠
 *

108 
	$bôm≠_¸óã_ö_buf
 (
size_t
 
bô_˙t
, *
block
, size_à
block_size
)

110 
bôm≠
 *
b
 = 
block
;

112 
	`ASSERT
 (
block_size
 >
	`bôm≠_buf_size
 (
bô_˙t
));

114 
b
->
bô_˙t
 = bit_cnt;

115 
b
->
bôs
 = (
ñem_ty≥
 *) (b + 1);

116 
	`bôm≠_£t_Æl
 (
b
, 
Ál£
);

117  
b
;

118 
	}
}

122 
size_t


123 
	$bôm≠_buf_size
 (
size_t
 
bô_˙t
)

125   (
bôm≠
Ë+ 
	`byã_˙t
 (
bô_˙t
);

126 
	}
}

145 
size_t


146 
	$bôm≠_size
 (c⁄° 
bôm≠
 *
b
)

148  
b
->
bô_˙t
;

149 
	}
}

154 
	$bôm≠_£t
 (
bôm≠
 *
b
, 
size_t
 
idx
, 
boﬁ
 
vÆue
)

156 
	`ASSERT
 (
b
 !
NULL
);

157 
	`ASSERT
 (
idx
 < 
b
->
bô_˙t
);

158 i‡(
vÆue
)

159 
	`bôm≠_m¨k
 (
b
, 
idx
);

161 
	`bôm≠_ª£t
 (
b
, 
idx
);

162 
	}
}

166 
	$bôm≠_m¨k
 (
bôm≠
 *
b
, 
size_t
 
bô_idx
)

168 
size_t
 
idx
 = 
	`ñem_idx
 (
bô_idx
);

169 
ñem_ty≥
 
mask
 = 
	`bô_mask
 (
bô_idx
);

175 
b
->
bôs
[
idx
] |
mask
;

176 
	}
}

180 
	$bôm≠_ª£t
 (
bôm≠
 *
b
, 
size_t
 
bô_idx
)

182 
size_t
 
idx
 = 
	`ñem_idx
 (
bô_idx
);

183 
ñem_ty≥
 
mask
 = 
	`bô_mask
 (
bô_idx
);

189 
b
->
bôs
[
idx
] &~
mask
;

190 
	}
}

196 
	$bôm≠_Êù
 (
bôm≠
 *
b
, 
size_t
 
bô_idx
)

198 
size_t
 
idx
 = 
	`ñem_idx
 (
bô_idx
);

199 
ñem_ty≥
 
mask
 = 
	`bô_mask
 (
bô_idx
);

205 
b
->
bôs
[
idx
] ^
mask
;

206 
	}
}

209 
boﬁ


210 
	$bôm≠_ã°
 (c⁄° 
bôm≠
 *
b
, 
size_t
 
idx
)

212 
	`ASSERT
 (
b
 !
NULL
);

213 
	`ASSERT
 (
idx
 < 
b
->
bô_˙t
);

214  (
b
->
bôs
[
	`ñem_idx
 (
idx
)] & 
	`bô_mask
 (idx)) != 0;

215 
	}
}

221 
	$bôm≠_£t_Æl
 (
bôm≠
 *
b
, 
boﬁ
 
vÆue
)

223 
	`ASSERT
 (
b
 !
NULL
);

225 
	`bôm≠_£t_mu…ùÀ
 (
b
, 0, 
	`bôm≠_size
 (b), 
vÆue
);

226 
	}
}

230 
	$bôm≠_£t_mu…ùÀ
 (
bôm≠
 *
b
, 
size_t
 
°¨t
, size_à
˙t
, 
boﬁ
 
vÆue
)

232 
size_t
 
i
;

234 
	`ASSERT
 (
b
 !
NULL
);

235 
	`ASSERT
 (
°¨t
 <
b
->
bô_˙t
);

236 
	`ASSERT
 (
°¨t
 + 
˙t
 <
b
->
bô_˙t
);

238 
i
 = 0; i < 
˙t
; i++)

239 
	`bôm≠_£t
 (
b
, 
°¨t
 + 
i
, 
vÆue
);

240 
	}
}

244 
size_t


245 
	$bôm≠_cou¡
 (c⁄° 
bôm≠
 *
b
, 
size_t
 
°¨t
, size_à
˙t
, 
boﬁ
 
vÆue
)

247 
size_t
 
i
, 
vÆue_˙t
;

249 
	`ASSERT
 (
b
 !
NULL
);

250 
	`ASSERT
 (
°¨t
 <
b
->
bô_˙t
);

251 
	`ASSERT
 (
°¨t
 + 
˙t
 <
b
->
bô_˙t
);

253 
vÆue_˙t
 = 0;

254 
i
 = 0; i < 
˙t
; i++)

255 i‡(
	`bôm≠_ã°
 (
b
, 
°¨t
 + 
i
Ë=
vÆue
)

256 
vÆue_˙t
++;

257  
vÆue_˙t
;

258 
	}
}

262 
boﬁ


263 
	$bôm≠_c⁄èös
 (c⁄° 
bôm≠
 *
b
, 
size_t
 
°¨t
, size_à
˙t
, 
boﬁ
 
vÆue
)

265 
size_t
 
i
;

267 
	`ASSERT
 (
b
 !
NULL
);

268 
	`ASSERT
 (
°¨t
 <
b
->
bô_˙t
);

269 
	`ASSERT
 (
°¨t
 + 
˙t
 <
b
->
bô_˙t
);

271 
i
 = 0; i < 
˙t
; i++)

272 i‡(
	`bôm≠_ã°
 (
b
, 
°¨t
 + 
i
Ë=
vÆue
)

273  
åue
;

274  
Ál£
;

275 
	}
}

279 
boﬁ


280 
	$bôm≠_™y
 (c⁄° 
bôm≠
 *
b
, 
size_t
 
°¨t
, size_à
˙t
)

282  
	`bôm≠_c⁄èös
 (
b
, 
°¨t
, 
˙t
, 
åue
);

283 
	}
}

287 
boﬁ


288 
	$bôm≠_n⁄e
 (c⁄° 
bôm≠
 *
b
, 
size_t
 
°¨t
, size_à
˙t
)

290  !
	`bôm≠_c⁄èös
 (
b
, 
°¨t
, 
˙t
, 
åue
);

291 
	}
}

295 
boﬁ


296 
	$bôm≠_Æl
 (c⁄° 
bôm≠
 *
b
, 
size_t
 
°¨t
, size_à
˙t
)

298  !
	`bôm≠_c⁄èös
 (
b
, 
°¨t
, 
˙t
, 
Ál£
);

299 
	}
}

307 
size_t


308 
	$bôm≠_sˇn
 (c⁄° 
bôm≠
 *
b
, 
size_t
 
°¨t
, size_à
˙t
, 
boﬁ
 
vÆue
)

310 
	`ASSERT
 (
b
 !
NULL
);

311 
	`ASSERT
 (
°¨t
 <
b
->
bô_˙t
);

313 i‡(
˙t
 <
b
->
bô_˙t
)

315 
size_t
 
œ°
 = 
b
->
bô_˙t
 - 
˙t
;

316 
size_t
 
i
;

317 
i
 = 
°¨t
; i <
œ°
; i++)

318 i‡(!
	`bôm≠_c⁄èös
 (
b
, 
i
, 
˙t
, !
vÆue
))

319  
i
;

321  
BITMAP_ERROR
;

322 
	}
}

331 
size_t


332 
	$bôm≠_sˇn_™d_Êù
 (
bôm≠
 *
b
, 
size_t
 
°¨t
, size_à
˙t
, 
boﬁ
 
vÆue
)

334 
size_t
 
idx
 = 
	`bôm≠_sˇn
 (
b
, 
°¨t
, 
˙t
, 
vÆue
);

335 i‡(
idx
 !
BITMAP_ERROR
)

336 
	`bôm≠_£t_mu…ùÀ
 (
b
, 
idx
, 
˙t
, !
vÆue
);

337  
idx
;

338 
	}
}

342 #ifde‡
FILESYS


344 
size_t


345 
	$bôm≠_fûe_size
 (c⁄° 
bôm≠
 *
b
)

347  
	`byã_˙t
 (
b
->
bô_˙t
);

348 
	}
}

352 
boﬁ


353 
	$bôm≠_ªad
 (
bôm≠
 *
b
, 
fûe
 *file)

355 
boﬁ
 
suc˚ss
 = 
åue
;

356 i‡(
b
->
bô_˙t
 > 0)

358 
off_t
 
size
 = 
	`byã_˙t
 (
b
->
bô_˙t
);

359 
suc˚ss
 = 
	`fûe_ªad_©
 (
fûe
, 
b
->
bôs
, 
size
, 0) == size;

360 
b
->
bôs
[
	`ñem_˙t
 (b->
bô_˙t
Ë- 1] &
	`œ°_mask
 (b);

362  
suc˚ss
;

363 
	}
}

367 
boﬁ


368 
	$bôm≠_wrôe
 (c⁄° 
bôm≠
 *
b
, 
fûe
 *file)

370 
off_t
 
size
 = 
	`byã_˙t
 (
b
->
bô_˙t
);

371  
	`fûe_wrôe_©
 (
fûe
, 
b
->
bôs
, 
size
, 0) == size;

372 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/build/Main.s

1 .
	gfûe
 "Main.c"

2 .
	gãxt


3 .
	gLãxt0
:

4 .
comm
 
Glob_x
,4,4

5 .
comm
 
	gGlob_y
,4,4

6 .
globl
 
	gVERSION


7 .
	g£˘i⁄
 .
	grod©a


8 .
	gLC0
:

9 .
°rög
 "0.1.02"

10 .
d©a


11 .
Æign
 4

12 .
ty≥
 
VERSION
, @
	gobje˘


13 .
size
 
	gVERSION
, 4

14 
	gVERSION
:

15 ..
LC0


16 .
globl
 
AUTHOR


17 .
£˘i⁄
 .
rod©a


18 .
LC1
:

19 .
°rög
 "OSLAB"

20 .
d©a


21 .
Æign
 4

22 .
ty≥
 
AUTHOR
, @
	gobje˘


23 .
size
 
	gAUTHOR
, 4

24 
	gAUTHOR
:

25 ..
LC1


26 .
globl
 
MODIFIER


27 .
£˘i⁄
 .
rod©a


28 .
LC2
:

29 .
°rög
 "You"

30 .
d©a


31 .
Æign
 4

32 .
ty≥
 
MODIFIER
, @
	gobje˘


33 .
size
 
	gMODIFIER
, 4

34 
	gMODIFIER
:

35 ..
LC2


36 .
ãxt


37 .
globl
 
ssuos_maö


38 .
ty≥
 
ssuos_maö
, @
fun˘i⁄


39 
	gssuos_maö
:

40 .
LFB3
:

41 .
fûe
 1 "arch/Main.c"

42 .
loc
 1 29 0

43 .
cfi_°¨çroc


44 
pushl
 %
ebp


45 .
cfi_def_cÁ_off£t
 8

46 .
cfi_off£t
 5, -8

47 
	gmovl
 %
	ge•
, %
	gebp


48 .
	gcfi_def_cÁ_ªgi°î
 5

49 
subl
 
	g$8
, %
	ge•


50 .
	gloc
 1 30 0

51 
ˇŒ
 
	gmaö_öô


52 .
	gloc
 1 32 0

53 
subl
 
	g$12
, %
e•


54 
pushl
 
$0


55 
ˇŒ
 
idÀ


56 
addl
 
	g$16
, %
	ge•


57 .
	gloc
 1 34 0

58 
	gn›


59 .
	gloc
 1 35 0

60 
	gÀave


61 .
	gcfi_ª°‹e
 5

62 .
	gcfi_def_cÁ
 4, 4

63 
	gªt


64 .
	gcfi_íd¥oc


65 .
	gLFE3
:

66 .
size
 
ssuos_maö
, .-
	gssuos_maö


67 .
	g£˘i⁄
 .
	grod©a


68 .
	gLC3
:

69 .
°rög
 "Memory Detecting\n"

70 .
LC4
:

71 .
°rög
 "%s"

72 .
LC5
:

73 .
°rög
 "PIT Initialization\n"

74 .
LC6
:

75 .
°rög
 "System call Initialization\n"

76 .
LC7
:

77 .
°rög
 "Interrupt Initialization\n"

78 .
LC8
:

79 .
°rög
 "%sPalloc Initialization\n"

80 .
LC9
:

81 .
°rög
 "Paging Initialization\n"

82 .
LC10
:

83 .
°rög
 "Process Initialization\n"

84 .
Æign
 4

85 .
LC11
:

86 .
°rög
 "========== initialization complete ==========\n\n"

87 .
ãxt


88 .
globl
 
maö_öô


89 .
ty≥
 
maö_öô
, @
fun˘i⁄


90 
	gmaö_öô
:

91 .
LFB4
:

92 .
loc
 1 38 0

93 .
cfi_°¨çroc


94 
pushl
 %
ebp


95 .
cfi_def_cÁ_off£t
 8

96 .
cfi_off£t
 5, -8

97 
	gmovl
 %
	ge•
, %
	gebp


98 .
	gcfi_def_cÁ_ªgi°î
 5

99 
subl
 
	g$8
, %
	ge•


100 .
	gloc
 1 39 0

101 
ˇŒ
 
	göå_dißbÀ


102 .
	gloc
 1 41 0

103 
ˇŒ
 
	göô_c⁄sﬁe


104 .
	gloc
 1 43 0

105 
ˇŒ
 
	g¥öt_c⁄åibut‹s


106 .
	gloc
 1 45 0

107 
ˇŒ
 
	gdëe˘_mem


108 .
	gloc
 1 46 0

109 
subl
 
	g$8
, %
e•


110 
pushl
 
	g$
.
LC3


111 
pushl
 
	g$
.
LC4


112 
ˇŒ
 
¥ötk


113 
addl
 
	g$16
, %
	ge•


114 .
	gloc
 1 48 0

115 
ˇŒ
 
	göô_pô


116 .
	gloc
 1 49 0

117 
subl
 
	g$8
, %
e•


118 
pushl
 
	g$
.
LC5


119 
pushl
 
	g$
.
LC4


120 
ˇŒ
 
¥ötk


121 
addl
 
	g$16
, %
	ge•


122 .
	gloc
 1 51 0

123 
ˇŒ
 
	göô_sysˇŒ


124 .
	gloc
 1 52 0

125 
subl
 
	g$8
, %
e•


126 
pushl
 
	g$
.
LC6


127 
pushl
 
	g$
.
LC4


128 
ˇŒ
 
¥ötk


129 
addl
 
	g$16
, %
	ge•


130 .
	gloc
 1 54 0

131 
ˇŒ
 
	göô_öå


132 .
	gloc
 1 55 0

133 
subl
 
	g$8
, %
e•


134 
pushl
 
	g$
.
LC7


135 
pushl
 
	g$
.
LC4


136 
ˇŒ
 
¥ötk


137 
addl
 
	g$16
, %
	ge•


138 .
	gloc
 1 57 0

139 
ˇŒ
 
	göô_kbd


140 .
	gloc
 1 59 0

141 
ˇŒ
 
	göô_∑Œoc


142 .
	gloc
 1 60 0

143 
subl
 
	g$12
, %
e•


144 
pushl
 
	g$
.
LC8


145 
ˇŒ
 
¥ötk


146 
addl
 
	g$16
, %
	ge•


147 .
	gloc
 1 62 0

148 
ˇŒ
 
	göô_∑gög


149 .
	gloc
 1 63 0

150 
subl
 
	g$8
, %
e•


151 
pushl
 
	g$
.
LC9


152 
pushl
 
	g$
.
LC4


153 
ˇŒ
 
¥ötk


154 
addl
 
	g$16
, %
	ge•


155 .
	gloc
 1 65 0

156 
ˇŒ
 
	göô_¥oc


157 .
	gloc
 1 66 0

158 
subl
 
	g$8
, %
e•


159 
pushl
 
	g$
.
LC10


160 
pushl
 
	g$
.
LC4


161 
ˇŒ
 
¥ötk


162 
addl
 
	g$16
, %
	ge•


163 .
	gloc
 1 68 0

164 
ˇŒ
 
	göå_íabÀ


165 .
	gloc
 1 70 0

166 
subl
 
	g$12
, %
e•


167 
pushl
 
	g$
.
LC11


168 
ˇŒ
 
¥ötk


169 
addl
 
	g$16
, %
	ge•


170 .
	gloc
 1 76 0

171 
n›


172 
	gÀave


173 .
	gcfi_ª°‹e
 5

174 .
	gcfi_def_cÁ
 4, 4

175 
	gªt


176 .
	gcfi_íd¥oc


177 .
	gLFE4
:

178 .
size
 
maö_öô
, .-
	gmaö_öô


179 .
	g£˘i⁄
 .
	grod©a


180 .
	gLC12
:

181 .
°rög
 "SSUOS main start!!!!\n"

182 .
Æign
 4

183 .
LC13
:

184 .
°rög
 " ______ ______ __ __ ______ ______ \n"

185 .
Æign
 4

186 .
LC14
:

187 .
°rög
 " / \\ / \\ / | / | / \\ / \\ \n"

188 .
Æign
 4

189 .
LC15
:

190 .
°rög
 " /$$$$$$ |/$$$$$$ |$$ | $$ | /$$$$$$ |/$$$$$$ |\n"

191 .
Æign
 4

192 .
LC16
:

193 .
°rög
 " $$ \\__$$/ $$ \\__$$/ $$ | $$ | $$ | $$ |$$ \\__$$/ \n"

194 .
Æign
 4

195 .
LC17
:

196 .
°rög
 " $$ \\ $$ \\ $$ | $$ | $$ | $$ |$$ \\ \n"

197 .
Æign
 4

198 .
LC18
:

199 .
°rög
 " $$$$$$ | $$$$$$ |$$ | $$ | $$ | $$ | $$$$$$ |\n"

200 .
Æign
 4

201 .
LC19
:

202 .
°rög
 " / \\__$$ |/ \\__$$ |$$ \\__$$ | $$ \\__$$ |/ \\__$$ |\n"

203 .
Æign
 4

204 .
LC20
:

205 .
°rög
 " $$ $$/ $$ $$/ $$ $$/ $$ $$/ $$ $$/ \n"

206 .
Æign
 4

207 .
LC21
:

208 .
°rög
 " $$$$$$/ $$$$$$/ $$$$$$/ $$$$$$/ $$$$$$/ \n"

209 .
LC22
:

210 .
°rög
 "\n"

211 .
Æign
 4

212 .
LC23
:

213 .
°rög
 "****************Made by OSLAB in SoongSil University*********************\n"

214 .
Æign
 4

215 .
LC24
:

216 .
°rög
 "contributors : Yunkyu Lee , Minwoo Jang , Sanghun Choi , Eunseok Choi\n"

217 .
Æign
 4

218 .
LC25
:

219 .
°rög
 " Hyunho Ji , Giwook Kang , Kisu Kim , Seonguk Lee \n"

220 .
Æign
 4

221 .
LC26
:

222 .
°rög
 " Gibeom Byeon, Jeonghwan Lee, Kyoungmin Kim, Myungjoon Shon\n"

223 .
Æign
 4

224 .
LC27
:

225 .
°rög
 " Jinwoo Lee, Hansol Lee, Mhanwoo Heo, Jeongwoo Choi, Yongmin Kim\n"

226 .
Æign
 4

227 .
LC28
:

228 .
°rög
 "************************ Professor. Jiman Hong ************************\n"

229 .
Æign
 4

230 .
LC29
:

231 .
°rög
 " \n"

232 .
ãxt


233 .
globl
 
¥öt_c⁄åibut‹s


234 .
ty≥
 
¥öt_c⁄åibut‹s
, @
fun˘i⁄


235 
	g¥öt_c⁄åibut‹s
:

236 .
LFB5
:

237 .
loc
 1 79 0

238 .
cfi_°¨çroc


239 
pushl
 %
ebp


240 .
cfi_def_cÁ_off£t
 8

241 .
cfi_off£t
 5, -8

242 
	gmovl
 %
	ge•
, %
	gebp


243 .
	gcfi_def_cÁ_ªgi°î
 5

244 
subl
 
	g$8
, %
	ge•


245 .
	gloc
 1 80 0

246 
subl
 
	g$8
, %
e•


247 
pushl
 
	g$
.
LC12


248 
pushl
 
	g$
.
LC4


249 
ˇŒ
 
¥ötk


250 
addl
 
	g$16
, %
	ge•


251 .
	gloc
 1 81 0

252 
subl
 
	g$12
, %
e•


253 
pushl
 
	g$
.
LC13


254 
ˇŒ
 
¥ötk


255 
addl
 
	g$16
, %
	ge•


256 .
	gloc
 1 82 0

257 
subl
 
	g$12
, %
e•


258 
pushl
 
	g$
.
LC14


259 
ˇŒ
 
¥ötk


260 
addl
 
	g$16
, %
	ge•


261 .
	gloc
 1 83 0

262 
subl
 
	g$12
, %
e•


263 
pushl
 
	g$
.
LC15


264 
ˇŒ
 
¥ötk


265 
addl
 
	g$16
, %
	ge•


266 .
	gloc
 1 84 0

267 
subl
 
	g$12
, %
e•


268 
pushl
 
	g$
.
LC16


269 
ˇŒ
 
¥ötk


270 
addl
 
	g$16
, %
	ge•


271 .
	gloc
 1 85 0

272 
subl
 
	g$12
, %
e•


273 
pushl
 
	g$
.
LC17


274 
ˇŒ
 
¥ötk


275 
addl
 
	g$16
, %
	ge•


276 .
	gloc
 1 86 0

277 
subl
 
	g$12
, %
e•


278 
pushl
 
	g$
.
LC18


279 
ˇŒ
 
¥ötk


280 
addl
 
	g$16
, %
	ge•


281 .
	gloc
 1 87 0

282 
subl
 
	g$12
, %
e•


283 
pushl
 
	g$
.
LC19


284 
ˇŒ
 
¥ötk


285 
addl
 
	g$16
, %
	ge•


286 .
	gloc
 1 88 0

287 
subl
 
	g$12
, %
e•


288 
pushl
 
	g$
.
LC20


289 
ˇŒ
 
¥ötk


290 
addl
 
	g$16
, %
	ge•


291 .
	gloc
 1 89 0

292 
subl
 
	g$12
, %
e•


293 
pushl
 
	g$
.
LC21


294 
ˇŒ
 
¥ötk


295 
addl
 
	g$16
, %
	ge•


296 .
	gloc
 1 90 0

297 
subl
 
	g$12
, %
e•


298 
pushl
 
	g$
.
LC22


299 
ˇŒ
 
¥ötk


300 
addl
 
	g$16
, %
	ge•


301 .
	gloc
 1 91 0

302 
subl
 
	g$12
, %
e•


303 
pushl
 
	g$
.
LC23


304 
ˇŒ
 
¥ötk


305 
addl
 
	g$16
, %
	ge•


306 .
	gloc
 1 92 0

307 
subl
 
	g$12
, %
e•


308 
pushl
 
	g$
.
LC22


309 
ˇŒ
 
¥ötk


310 
addl
 
	g$16
, %
	ge•


311 .
	gloc
 1 93 0

312 
subl
 
	g$12
, %
e•


313 
pushl
 
	g$
.
LC24


314 
ˇŒ
 
¥ötk


315 
addl
 
	g$16
, %
	ge•


316 .
	gloc
 1 94 0

317 
subl
 
	g$12
, %
e•


318 
pushl
 
	g$
.
LC25


319 
ˇŒ
 
¥ötk


320 
addl
 
	g$16
, %
	ge•


321 .
	gloc
 1 95 0

322 
subl
 
	g$12
, %
e•


323 
pushl
 
	g$
.
LC26


324 
ˇŒ
 
¥ötk


325 
addl
 
	g$16
, %
	ge•


326 .
	gloc
 1 96 0

327 
subl
 
	g$12
, %
e•


328 
pushl
 
	g$
.
LC27


329 
ˇŒ
 
¥ötk


330 
addl
 
	g$16
, %
	ge•


331 .
	gloc
 1 97 0

332 
subl
 
	g$12
, %
e•


333 
pushl
 
	g$
.
LC22


334 
ˇŒ
 
¥ötk


335 
addl
 
	g$16
, %
	ge•


336 .
	gloc
 1 98 0

337 
subl
 
	g$12
, %
e•


338 
pushl
 
	g$
.
LC28


339 
ˇŒ
 
¥ötk


340 
addl
 
	g$16
, %
	ge•


341 .
	gloc
 1 99 0

342 
subl
 
	g$12
, %
e•


343 
pushl
 
	g$
.
LC29


344 
ˇŒ
 
¥ötk


345 
addl
 
	g$16
, %
	ge•


346 .
	gloc
 1 100 0

347 
n›


348 
	gÀave


349 .
	gcfi_ª°‹e
 5

350 .
	gcfi_def_cÁ
 4, 4

351 
	gªt


352 .
	gcfi_íd¥oc


353 .
	gLFE5
:

354 .
size
 
¥öt_c⁄åibut‹s
, .-
	g¥öt_c⁄åibut‹s


355 .
	gLëext0
:

356 .
fûe
 2 "./include/device/console.h"

357 .
fûe
 3 "./include/syscall.h"

358 .
£˘i⁄
 .
debug_öfo
,"",@
	g¥ogbôs


359 .
	gLdebug_öfo0
:

361 .
vÆue
 0x4

362 ..
Ldebug_abbªv0


363 .
byã
 0x4

364 .
uÀb128
 0x1

365 ..
LASF22


366 .
byã
 0xc

367 ..
LASF23


368 ..
LASF24


369 ..
Lãxt0


370 ..
Lëext0
-.
Lãxt0


371 ..
Ldebug_löe0


372 .
uÀb128
 0x2

373 .
byã
 0x1

374 .
byã
 0x8

375 ..
LASF0


376 .
uÀb128
 0x2

377 .
byã
 0x1

378 .
byã
 0x6

379 ..
LASF1


380 .
uÀb128
 0x2

381 .
byã
 0x4

382 .
byã
 0x7

383 ..
LASF2


384 .
uÀb128
 0x2

385 .
byã
 0x8

386 .
byã
 0x5

387 ..
LASF3


388 .
uÀb128
 0x2

389 .
byã
 0x1

390 .
byã
 0x6

391 ..
LASF4


392 .
uÀb128
 0x2

393 .
byã
 0x2

394 .
byã
 0x5

395 ..
LASF5


396 .
uÀb128
 0x3

397 .
byã
 0x4

398 .
byã
 0x5

399 .
°rög
 "int"

400 .
uÀb128
 0x2

401 .
byã
 0x2

402 .
byã
 0x7

403 ..
LASF6


404 .
uÀb128
 0x2

405 .
byã
 0x8

406 .
byã
 0x7

407 ..
LASF7


408 .
uÀb128
 0x4

409 ..
LASF25


410 .
byã
 0x4

412 .
byã
 0x3

413 .
byã
 0x4

415 .
uÀb128
 0x5

416 ..
LASF8


417 .
byã
 0

418 .
uÀb128
 0x5

419 ..
LASF9


420 .
byã
 0x1

421 .
uÀb128
 0x5

422 ..
LASF10


423 .
byã
 0x2

424 .
uÀb128
 0x5

425 ..
LASF11


426 .
byã
 0x3

427 .
uÀb128
 0x5

428 ..
LASF12


429 .
byã
 0x4

430 .
uÀb128
 0x5

431 ..
LASF13


432 .
byã
 0x5

433 .
byã
 0

434 .
uÀb128
 0x6

435 ..
LASF14


436 .
byã
 0x1

437 .
byã
 0x1c

438 ..
LFB3


439 ..
LFE3
-.
LFB3


440 .
uÀb128
 0x1

441 .
byã
 0x9c

442 .
uÀb128
 0x6

443 ..
LASF15


444 .
byã
 0x1

445 .
byã
 0x25

446 ..
LFB4


447 ..
LFE4
-.
LFB4


448 .
uÀb128
 0x1

449 .
byã
 0x9c

450 .
uÀb128
 0x6

451 ..
LASF16


452 .
byã
 0x1

453 .
byã
 0x4e

454 ..
LFB5


455 ..
LFE5
-.
LFB5


456 .
uÀb128
 0x1

457 .
byã
 0x9c

458 .
uÀb128
 0x7

459 ..
LASF17


460 .
byã
 0x2

461 .
byã
 0xc

463 .
uÀb128
 0x5

464 .
byã
 0x3

465 .
Glob_x


466 .
uÀb128
 0x7

467 ..
LASF18


468 .
byã
 0x2

469 .
byã
 0xd

471 .
uÀb128
 0x5

472 .
byã
 0x3

473 .
Glob_y


474 .
uÀb128
 0x7

475 ..
LASF19


476 .
byã
 0x1

477 .
byã
 0x18

479 .
uÀb128
 0x5

480 .
byã
 0x3

481 .
VERSION


482 .
uÀb128
 0x8

483 .
byã
 0x4

485 .
uÀb128
 0x9

487 .
uÀb128
 0x7

488 ..
LASF20


489 .
byã
 0x1

490 .
byã
 0x19

492 .
uÀb128
 0x5

493 .
byã
 0x3

494 .
AUTHOR


495 .
uÀb128
 0x7

496 ..
LASF21


497 .
byã
 0x1

498 .
byã
 0x1a

500 .
uÀb128
 0x5

501 .
byã
 0x3

502 .
MODIFIER


503 .
byã
 0

504 .
£˘i⁄
 .
debug_abbªv
,"",@
	g¥ogbôs


505 .
	gLdebug_abbªv0
:

506 .
uÀb128
 0x1

507 .
uÀb128
 0x11

508 .
byã
 0x1

509 .
uÀb128
 0x25

510 .
uÀb128
 0xe

511 .
uÀb128
 0x13

512 .
uÀb128
 0xb

513 .
uÀb128
 0x3

514 .
uÀb128
 0xe

515 .
uÀb128
 0x1b

516 .
uÀb128
 0xe

517 .
uÀb128
 0x11

518 .
uÀb128
 0x1

519 .
uÀb128
 0x12

520 .
uÀb128
 0x6

521 .
uÀb128
 0x10

522 .
uÀb128
 0x17

523 .
byã
 0

524 .
byã
 0

525 .
uÀb128
 0x2

526 .
uÀb128
 0x24

527 .
byã
 0

528 .
uÀb128
 0xb

529 .
uÀb128
 0xb

530 .
uÀb128
 0x3e

531 .
uÀb128
 0xb

532 .
uÀb128
 0x3

533 .
uÀb128
 0xe

534 .
byã
 0

535 .
byã
 0

536 .
uÀb128
 0x3

537 .
uÀb128
 0x24

538 .
byã
 0

539 .
uÀb128
 0xb

540 .
uÀb128
 0xb

541 .
uÀb128
 0x3e

542 .
uÀb128
 0xb

543 .
uÀb128
 0x3

544 .
uÀb128
 0x8

545 .
byã
 0

546 .
byã
 0

547 .
uÀb128
 0x4

548 .
uÀb128
 0x4

549 .
byã
 0x1

550 .
uÀb128
 0x3

551 .
uÀb128
 0xe

552 .
uÀb128
 0xb

553 .
uÀb128
 0xb

554 .
uÀb128
 0x49

555 .
uÀb128
 0x13

556 .
uÀb128
 0x3a

557 .
uÀb128
 0xb

558 .
uÀb128
 0x3b

559 .
uÀb128
 0xb

560 .
uÀb128
 0x1

561 .
uÀb128
 0x13

562 .
byã
 0

563 .
byã
 0

564 .
uÀb128
 0x5

565 .
uÀb128
 0x28

566 .
byã
 0

567 .
uÀb128
 0x3

568 .
uÀb128
 0xe

569 .
uÀb128
 0x1c

570 .
uÀb128
 0xb

571 .
byã
 0

572 .
byã
 0

573 .
uÀb128
 0x6

574 .
uÀb128
 0x2e

575 .
byã
 0

576 .
uÀb128
 0x3f

577 .
uÀb128
 0x19

578 .
uÀb128
 0x3

579 .
uÀb128
 0xe

580 .
uÀb128
 0x3a

581 .
uÀb128
 0xb

582 .
uÀb128
 0x3b

583 .
uÀb128
 0xb

584 .
uÀb128
 0x27

585 .
uÀb128
 0x19

586 .
uÀb128
 0x11

587 .
uÀb128
 0x1

588 .
uÀb128
 0x12

589 .
uÀb128
 0x6

590 .
uÀb128
 0x40

591 .
uÀb128
 0x18

592 .
uÀb128
 0x2116

593 .
uÀb128
 0x19

594 .
byã
 0

595 .
byã
 0

596 .
uÀb128
 0x7

597 .
uÀb128
 0x34

598 .
byã
 0

599 .
uÀb128
 0x3

600 .
uÀb128
 0xe

601 .
uÀb128
 0x3a

602 .
uÀb128
 0xb

603 .
uÀb128
 0x3b

604 .
uÀb128
 0xb

605 .
uÀb128
 0x49

606 .
uÀb128
 0x13

607 .
uÀb128
 0x3f

608 .
uÀb128
 0x19

609 .
uÀb128
 0x2

610 .
uÀb128
 0x18

611 .
byã
 0

612 .
byã
 0

613 .
uÀb128
 0x8

614 .
uÀb128
 0xf

615 .
byã
 0

616 .
uÀb128
 0xb

617 .
uÀb128
 0xb

618 .
uÀb128
 0x49

619 .
uÀb128
 0x13

620 .
byã
 0

621 .
byã
 0

622 .
uÀb128
 0x9

623 .
uÀb128
 0x26

624 .
byã
 0

625 .
uÀb128
 0x49

626 .
uÀb128
 0x13

627 .
byã
 0

628 .
byã
 0

629 .
byã
 0

630 .
£˘i⁄
 .
debug_¨™ges
,"",@
	g¥ogbôs


632 .
	gvÆue
 0x2

633 ..
	gLdebug_öfo0


634 .
	gbyã
 0x4

635 .
	gbyã
 0

636 .
	gvÆue
 0

637 .
	gvÆue
 0

638 ..
	gLãxt0


639 ..
	gLëext0
-.
	gLãxt0


642 .
	g£˘i⁄
 .
	gdebug_löe
,"",@
	g¥ogbôs


643 .
	gLdebug_löe0
:

644 .
£˘i⁄
 .
debug_°r
,"MS",@
	g¥ogbôs
,1

645 .
	gLASF3
:

646 .
°rög
 "longÜong int"

647 .
LASF2
:

648 .
°rög
 "unsigned int"

649 .
LASF0
:

650 .
°rög
 "unsigned char"

651 .
LASF14
:

652 .
°rög
 "ssuos_main"

653 .
LASF7
:

654 .
°rög
 "longÜong unsigned int"

655 .
LASF18
:

656 .
°rög
 "Glob_y"

657 .
LASF23
:

658 .
°rög
 "arch/Main.c"

659 .
LASF12
:

660 .
°rög
 "SYS_SHUTDOWN"

661 .
LASF11
:

662 .
°rög
 "SYS_SSUREAD"

663 .
LASF19
:

664 .
°rög
 "VERSION"

665 .
LASF1
:

666 .
°rög
 "char"

667 .
LASF20
:

668 .
°rög
 "AUTHOR"

669 .
LASF15
:

670 .
°rög
 "main_init"

671 .
LASF25
:

672 .
°rög
 "SYS_LIST"

673 .
LASF24
:

674 .
°rög
 "/home/psm/Documents/SSUOS_P4/ssuos/src/kernel"

675 .
LASF8
:

676 .
°rög
 "SYS_FORK"

677 .
LASF22
:

678 .
°rög
 "GNU C11 5.4.0 20160609 -m32 -mtune=generic -march=i686 -g -O0 -ffreestanding -fno-stack-protector"

679 .
LASF9
:

680 .
°rög
 "SYS_EXIT"

681 .
LASF6
:

682 .
°rög
 "short unsigned int"

683 .
LASF4
:

684 .
°rög
 "signed char"

685 .
LASF16
:

686 .
°rög
 "print_contributors"

687 .
LASF10
:

688 .
°rög
 "SYS_WAIT"

689 .
LASF5
:

690 .
°rög
 "short int"

691 .
LASF21
:

692 .
°rög
 "MODIFIER"

693 .
LASF13
:

694 .
°rög
 "SYS_NUM"

695 .
LASF17
:

696 .
°rög
 "Glob_x"

697 .
idít
 "GCC: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609"

698 .
£˘i⁄
 .
nŸe
.
GNU
-
°ack
,"",@
	g¥ogbôs


	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/device/block.c

1 
	~<devi˚/block.h
>

2 
	~<li°.h
>

3 
	~<°rög.h
>

4 
	~<devi˚/ide.h
>

5 
	~<mem/mÆloc.h
>

8 
	sblock


10 
li°_ñem
 
	mli°_ñem
;

12 
	m«me
[16];

13 
block_ty≥
 
	mty≥
;

14 
block_£˘‹_t
 
	msize
;

16 c⁄° 
block_›î©i⁄s
 *
	m›s
;

17 *
	maux
;

19 
	mªad_˙t
;

20 
	mwrôe_˙t
;

24 
li°
 
	gÆl_blocks
 = 
LIST_INITIALIZER
 (
Æl_blocks
);

27 
block
 *
	gblock_by_rﬁe
[
BLOCK_ROLE_CNT
];

29 
block
 *
li°_ñem_to_block
 (
li°_ñem
 *);

34 
	$block_ty≥_«me
 (
block_ty≥
 
ty≥
)

36 c⁄° *
block_ty≥_«mes
[
BLOCK_CNT
] =

47  
block_ty≥_«mes
[
ty≥
];

48 
	}
}

52 
block
 *

53 
	$block_gë_rﬁe
 (
block_ty≥
 
rﬁe
)

56  
block_by_rﬁe
[
rﬁe
];

57 
	}
}

61 
	$block_£t_rﬁe
 (
block_ty≥
 
rﬁe
, 
block
 *block)

64 
block_by_rﬁe
[
rﬁe
] = 
block
;

65 
	}
}

69 
block
 *

70 
	$block_fú°
 ()

72  
	`li°_ñem_to_block
 (
	`li°_begö
 (&
Æl_blocks
));

73 
	}
}

77 
block
 *

78 
	$block_√xt
 (
block
 *block)

80  
	`li°_ñem_to_block
 (
	`li°_√xt
 (&
block
->
li°_ñem
));

81 
	}
}

85 
block
 *

86 
	$block_gë_by_«me
 (c⁄° *
«me
)

88 
li°_ñem
 *
e
;

90 
e
 = 
	`li°_begö
 (&
Æl_blocks
);É !
	`li°_íd
 (&all_blocks);

91 
e
 = 
	`li°_√xt
 (e))

93 
block
 *block = 
	`li°_íåy
 (
e
, block, 
li°_ñem
);

94 i‡(!
	`°rcmp
 (
«me
, 
block
->name))

95  
block
;

98  
NULL
;

99 
	}
}

104 
	$check_£˘‹
 (
block
 *block, 
block_£˘‹_t
 
£˘‹
)

106 i‡(
£˘‹
 >
block
->
size
)

110 ; ("Ac˚s†∑°Énd o‡devi˚ %†(£˘‹=%"
PRDSNu
", "

111 "size=%"
PRDSNu
")\n", 
	`block_«me
 (
block
), 
£˘‹
, block->
size
);

113 
	}
}

120 
	$block_ªad
 (
block
 *block, 
block_£˘‹_t
 
£˘‹
, *
buf„r
)

122 
	`check_£˘‹
 (
block
, 
£˘‹
);

123 
block
->
›s
->
	`ªad
 (block->
aux
, 
£˘‹
, 
buf„r
);

124 
block
->
ªad_˙t
++;

125 
	}
}

133 
	$block_wrôe
 (
block
 *block, 
block_£˘‹_t
 
£˘‹
, c⁄° *
buf„r
)

135 
	`check_£˘‹
 (
block
, 
£˘‹
);

137 
block
->
›s
->
	`wrôe
 (block->
aux
, 
£˘‹
, 
buf„r
);

138 
block
->
wrôe_˙t
++;

139 
	}
}

142 
block_£˘‹_t


143 
	$block_size
 (
block
 *block)

145  
block
->
size
;

146 
	}
}

150 
	$block_«me
 (
block
 *block)

152  
block
->
«me
;

153 
	}
}

156 
block_ty≥


157 
	$block_ty≥
 (
block
 *block)

159  
block
->
ty≥
;

160 
	}
}

164 
	$block_¥öt_°©s
 ()

166 
i
;

168 
i
 = 0; i < 
BLOCK_ROLE_CNT
; i++)

170 
block
 *block = 
block_by_rﬁe
[
i
];

171 i‡(
block
 !
NULL
)

173 
	`¥ötf
 ("%s (%s): %lluÑeads, %llu writes\n",

174 
block
->
«me
, 
	`block_ty≥_«me
 (block->
ty≥
),

175 
block
->
ªad_˙t
, block->
wrôe_˙t
);

178 
	}
}

185 
block
 *

186 
	$block_ªgi°î
 (c⁄° *
«me
, 
block_ty≥
 
ty≥
,

187 c⁄° *
exåa_öfo
, 
block_£˘‹_t
 
size
,

188 c⁄° 
block_›î©i⁄s
 *
›s
, *
aux
)

190 
block
 *block = 
	`mÆloc
 ( *block);

191 i‡(
block
 =
NULL
)

194 
	`li°_push_back
 (&
Æl_blocks
, &
block
->
li°_ñem
);

195 
	`°æ˝y
 (
block
->
«me
,Çame,  block->name);

196 
block
->
ty≥
 =Åype;

197 
block
->
size
 = size;

198 
block
->
›s
 = ops;

199 
block
->
aux
 =áux;

200 
block
->
ªad_˙t
 = 0;

201 
block
->
wrôe_˙t
 = 0;

203 
	`¥ötf
 ("%s: %'"
PRDSNu
" se˘‹†(", 
block
->
«me
, block->
size
);

204 
	`¥öt_hum™_ªadabÀ_size
 ((
uöt64_t
Ë
block
->
size
 * 
BLOCK_SECTOR_SIZE
);

205 
	`¥ötf
 (")");

206 i‡(
exåa_öfo
 !
NULL
)

207 
	`¥ötf
 (", %s", 
exåa_öfo
);

208 
	`¥ötf
 ("\n");

210  
block
;

211 
	}
}

215 
block
 *

216 
	$li°_ñem_to_block
 (
li°_ñem
 *list_elem)

218  (
li°_ñem
 !
	`li°_íd
 (&
Æl_blocks
)

219 ? 
	`li°_íåy
 (
li°_ñem
, 
block
,Üist_elem)

220 : 
NULL
);

221 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/device/console.c

1 
	~<öãºu±.h
>

2 
	~<devi˚/c⁄sﬁe.h
>

3 
	~<ty≥.h
>

4 
	~<devi˚/kbd.h
>

5 
	~<devi˚/io.h
>

6 
	~<devi˚/pô.h
>

7 
	~<°d¨g.h
>

9 
	#HSCREEN
 80

	)

10 
	#VSCREEN
 25

	)

11 
	#SIZE_SCREEN
 
HSCREEN
 * 
VSCREEN


	)

12 
	#NSCROLL
 30

	)

13 
	#SIZE_SCROLL
 
NSCROLL
 * 
HSCREEN


	)

14 
	#VIDIO_MEMORY
 0xB8000

	)

16 
	#IO_BASE
 0x3F8

	)

17 
	#FIRST_SPORT
 (
IO_BASE
)

	)

18 
	#LINE_STATUS
 (
IO_BASE
 + 5)

	)

19 
	#THR_EMPTY
 0x20

	)

21 #ifde‡
SCREEN_SCROLL


22 
	#buf_e
 (
buf_w
 + 
SIZE_NSCROLL
)

	)

23 
	#SCROLL_END
 
buf_s
 + 
SIZE_SCROLL


	)

25 
	gbuf_s
[
SIZE_SCROLL
];

26 *
	gbuf_w
;

27 *
	gbuf_p
;

28 * 
	gs¸_íd
;

29 
boﬁ
 
	ga_s
 = 
TRUE
;

33 
	g√xt_löe
[2];

35 
	$öô_c⁄sﬁe
()

37 
Glob_x
 = 0;

38 
Glob_y
 = 2;

40 
√xt_löe
[0] = '\r';

41 
√xt_löe
[1] = '\n';

43 #ifde‡
SCREEN_SCROLL


44 
buf_w
 = 
buf_s
;

45 
buf_p
 = 
buf_s
;

46 
a_s
 = 
TRUE
;

47 
s¸_íd
 = 
buf_s
 + 
SIZE_SCROLL
;

50 
	}
}

52 
	$PrötCh¨ToS¸ìn
(
x
, 
y
, c⁄° *
pSåög
)

54 
Glob_x
 = 
x
;

55 
Glob_y
 = 
y
;

56 
i
 = 0;

57 
pSåög
[
i
] != 0)

59 
	`PrötCh¨
(
Glob_x
++, 
Glob_y
, 
pSåög
[
i
++]);

61 
	}
}

63 
	$PrötCh¨
(
x
, 
y
, c⁄° 
Såög
)

65 #ifde‡
SCREEN_SCROLL


66 i‡(
Såög
 == '\n') {

67 if((
y
+1Ë> 
VSCREEN
) {

68 
	`s¸ﬁl
();

69 
y
--;

71 
Glob_x
 = 0;

72 
Glob_y
 = 
y
+1;

76 i‡((
y
 >
VSCREEN
Ë&& (
x
 >= 0)) {

77 
	`s¸ﬁl
();

78 
x
 = 0; 
y
--;

81 * 
b
 = &
buf_w
[
y
 * 
HSCREEN
 + 
x
];

82 if(
b
 >
SCROLL_END
)

83 
b
-
SIZE_SCROLL
;

84 *
b
 = 
Såög
;

86 if(
Glob_x
 >
HSCREEN
)

88 
Glob_x
 = 0;

89 
Glob_y
++;

93 
CHAR
 *
pS¸ìn
 = (CHAR *)
VIDIO_MEMORY
;

95 i‡(
Såög
 == '\n') {

96 if((
y
+1) > 24) {

97 
	`s¸ﬁl
();

98 
y
--;

100 
pS¸ìn
 +((
y
+1) * 80);

101 
Glob_x
 = 0;

102 
Glob_y
 = 
y
+1;

106 i‡((
y
 > 24Ë&& (
x
 >= 0)) {

107 
	`s¸ﬁl
();

108 
x
 = 0; 
y
--;

111 
pS¸ìn
 +–
y
 * 80Ë+ 
x
;

112 
pS¸ìn
[0].
bAâ
 = 0x07;

113 
pS¸ìn
[0].
bCh
 = 
Såög
;

115 if(
Glob_x
 > 79)

117 
Glob_x
 = 0;

118 
Glob_y
++;

122 
	}
}

124 
	$˛rS¸ìn
()

126 
CHAR
 *
pS¸ìn
 = (CHAR *Ë
VIDIO_MEMORY
;

127 
i
;

129 
i
 = 0; i < 80*25; i++) {

130 (*
pS¸ìn
).
bAâ
 = 0x07;

131 (*
pS¸ìn
++).
bCh
 = ' ';

133 
Glob_x
 = 0;

134 
Glob_y
 = 0;

135 
	}
}

137 
	$s¸ﬁl
()

139 #ifde‡
SCREEN_SCROLL


140 
buf_w
 +
HSCREEN
;

141 
buf_w
 > 
SCROLL_END
)

142 
buf_w
 -
SIZE_SCROLL
;

144 
i
;

145 
i
 = 0; i < 
HSCREEN
; i++)

146 
buf_w
[
i
] = 0;

148 
CHAR
 *
pS¸ìn
 = (CHAR *Ë
VIDIO_MEMORY
;

149 
CHAR
 *
pS¸Buf
 = (CHAR *Ë(
VIDIO_MEMORY
 + 2*80);

150 
i
;

151 
i
 = 0; i < 80*24; i++) {

152 (*
pS¸ìn
).
bAâ
 = (*
pS¸Buf
).bAtt;

153 (*
pS¸ìn
++).
bCh
 = (*
pS¸Buf
++).bCh;

155 
i
 = 0; i < 80; i++) {

156 (*
pS¸ìn
).
bAâ
 = 0x07;

157 (*
pS¸ìn
++).
bCh
 = ' ';

160 
Glob_y
--;

162 
	}
}

164 #ifde‡
SERIAL_STDOUT


165 
	$¥ötCh¨ToSîül
(c⁄° *
pSåög
)

167 
i
;

168 
öå_Àvñ
 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
();

169 ;*
pSåög
 !
NULL
;ÖString++)

171 if(*
pSåög
 != '\n'){

172 (
	`öb
(
LINE_STATUS
Ë& 
THR_EMPTY
) == 0)

174 
	`outb
(
FIRST_SPORT
, *
pSåög
);

178 
i
=0; i<2; i++){

179 (
	`öb
(
LINE_STATUS
Ë& 
THR_EMPTY
) == 0)

181 
	`outb
(
FIRST_SPORT
, 
√xt_löe
[
i
]);

185 
	`öå_£t_Àvñ
 (
ﬁd_Àvñ
);

186 
	}
}

190 
	$¥ötk
(c⁄° *
fmt
, ...)

192 
buf
[1024];

193 
va_li°
 
¨gs
;

194 
Àn
;

196 
	`va_°¨t
(
¨gs
, 
fmt
);

197 
Àn
 = 
	`v•rötk
(
buf
, 
fmt
, 
¨gs
);

198 
	`va_íd
(
¨gs
);

200 #ifde‡
SERIAL_STDOUT


201 
	`¥ötCh¨ToSîül
(
buf
);

203 
	`PrötCh¨ToS¸ìn
(
Glob_x
, 
Glob_y
, 
buf
);

205  
Àn
;

206 
	}
}

208 #ifde‡
SCREEN_SCROLL


209 
	$s¸ﬁl_s¸ìn
(
off£t
)

211 if(
a_s
 =
TRUE
 && 
off£t
 > 0 && 
buf_p
 =
buf_w
)

214 
a_s
 = 
FALSE
;

216 
buf_p
 = (*)(()buf_∞+ (
HSCREEN
 * 
off£t
));

217 if(
buf_p
 >
SCROLL_END
)

218 
buf_p
 = (*)(()buf_∞- 
SIZE_SCROLL
);

219 if(
buf_p
 < 
buf_s
)

220 
buf_p
 = (*)(()buf_∞+ 
SIZE_SCROLL
);

221 
	}
}

223 
	$£t_ÁŒow
()

225 
a_s
 = 
TRUE
;

226 
	}
}

228 
	$ª‰eshS¸ìn
()

230 
CHAR
 *
p_s
(CHAR *Ë
VIDIO_MEMORY
;

231 
i
;

233 if(
a_s
)

234 
buf_p
 = 
buf_w
;

236 * 
b
 = 
buf_p
;

238 
i
 = 0; i < 
SIZE_SCREEN
; i++, 
b
++, 
p_s
++)

240 if(
b
 >
SCROLL_END
)

241 
b
 -
SIZE_SCROLL
;

242 
p_s
->
bAâ
 = 0x07;

243 
p_s
->
bCh
 = *
b
;

245 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/device/device.c

1 
	~<devi˚/c⁄sﬁe.h
>

2 
	~<devi˚/devi˚.h
>

3 
	~<devi˚/io.h
>

5 
	$dev_shutdown
()

7 c⁄° 
s
[] = "Shutdown";

8 c⁄° *
p
;

9 
	`¥ötk
 ("Powering off...\n");

11 
p
 = 
s
; *p != '\0';Ö++)

12 
	`outb
 (0x8900, *
p
);

14 
asm
 volatile ("cli; hlt" : : : "memory");

16 
	`¥ötk
 ("stillÑunning...\n");

18 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/device/kbd.c

1 
	~<devi˚/kbd.h
>

2 
	~<ty≥.h
>

3 
	~<devi˚/c⁄sﬁe.h
>

4 
	~<öãºu±.h
>

5 
	~<devi˚/io.h
>

6 
	~<ssulib.h
>

8 
Key_Sètus
 
	gKSèt
;

9 
	gkbd_buf
[
BUFSIZ
];

10 
	gbuf_hód
, 
	gbuf_èû
;

12 
BYTE
 
	gKbd_M≠
[4][
KBDMAPSIZE
] = {

47 
	$öô_kbd
()

49 
KSèt
.
Shi·Fœg
 = 0;

50 
KSèt
.
C≠¶ockFœg
 = 0;

51 
KSèt
.
NumlockFLag
 = 0;

52 
KSèt
.
S¸ﬁŒockFœg
 = 0;

53 
KSèt
.
Exã¡edFœg
 = 0;

54 
KSèt
.
Pau£Fœg
 = 0;

56 
buf_hód
 = 0;

57 
buf_èû
 = 0;

59 
	`ªg_h™dÀr
(33, 
kbd_h™dÀr
);

60 
	}
}

62 
	$Upd©eKeySèt
(
BYTE
 
Sˇncode
)

64 if(
Sˇncode
 & 0x80)

66 if(
Sˇncode
 == 0xB6 || Scancode == 0xAA)

68 
KSèt
.
Shi·Fœg
 = 
FALSE
;

74 if(
Sˇncode
 =0x3A && 
KSèt
.
C≠¶ockFœg
)

76 
KSèt
.
C≠¶ockFœg
 = 
FALSE
;

78 if(
Sˇncode
 == 0x3A)

79 
KSèt
.
C≠¶ockFœg
 = 
TRUE
;

80 if(
Sˇncode
 == 0x36 || Scancode == 0x2A)

82 
KSèt
.
Shi·Fœg
 = 
TRUE
;

86 if(
Sˇncode
 == 0xE0)

88 
KSèt
.
Exã¡edFœg
 = 
TRUE
;

90 if(
KSèt
.
Exã¡edFœg
 =
TRUE
 && 
Sˇncode
 != 0xE0)

92 
KSèt
.
Exã¡edFœg
 = 
FALSE
;

94 
	}
}

96 
BOOL
 
	$C⁄vîtSˇncodeToASCII
(
BYTE
 
Sˇncode
, BYTE *
Asciicode
)

98 if(
KSèt
.
Pau£Fœg
 > 0)

100 
KSèt
.
Pau£Fœg
--;

101  
FALSE
;

104 if(
Sˇncode
 == 0xE1)

106 *
Asciicode
 = 0x00;

107 
KSèt
.
Pau£Fœg
 = 2;

108  
FALSE
;

111 if(
Sˇncode
 == 0xE0)

113 *
Asciicode
 = 0x00;

114  
FALSE
;

117 if(!(
Sˇncode
 & 0x80))

119 if(
KSèt
.
Shi·Fœg
 & KSèt.
C≠¶ockFœg
)

121 *
Asciicode
 = 
Kbd_M≠
[3][
Sˇncode
 & 0x7F];

123 if(
KSèt
.
Shi·Fœg
)

125 *
Asciicode
 = 
Kbd_M≠
[2][
Sˇncode
 & 0x7F];

127 if(
KSèt
.
C≠¶ockFœg
)

129 *
Asciicode
 = 
Kbd_M≠
[1][
Sˇncode
 & 0x7F];

133 *
Asciicode
 = 
Kbd_M≠
[0][
Sˇncode
];

136  
TRUE
;

138  
FALSE
;

139 
	}
}

141 
boﬁ
 
	$isFuŒ
()

143  (
buf_hód
+1Ë% 
BUFSIZ
 =
buf_èû
;

144 
	}
}

146 
boﬁ
 
	$isEm±y
()

148  
buf_hód
 =
buf_èû
;

149 
	}
}

151 
	$kbd_h™dÀr
(
öå_‰ame
 *
i‰ame
)

153 
BYTE
 
asciicode
;

154 
BYTE
 
d©a
 = 
	`öb
(0x60);

156 
	`Upd©eKeySèt
(
d©a
);

157 if(
	`C⁄vîtSˇncodeToASCII
(
d©a
, &
asciicode
))

159 if–!
	`isFuŒ
(Ë&& 
asciicode
 != 0)

161 
	`¥ötk
("%c", 
asciicode
);

162 
kbd_buf
[
buf_èû
] = 
asciicode
;

163 
buf_èû
 = (buf_èû + 1Ë% 
BUFSIZ
;

166 #ifde‡
SCREEN_SCROLL


167 
asciicode
)

170 
	`s¸ﬁl_s¸ìn
(-1);

173 
	`s¸ﬁl_s¸ìn
(+1);

176 
	`£t_ÁŒow
();

183 
	}
}

185 
	$kbd_ªad_ch¨
()

187 if–
	`isEm±y
())

190 
ªt
;

191 
ªt
 = 
kbd_buf
[
buf_hód
];

192 
buf_hód
 = (buf_hód + 1)%
BUFSIZ
;

193  
ªt
;

194 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/device/partition.c

1 
	~<devi˚/∑πôi⁄.h
>

2 
	~<∑cked.h
>

3 
	~<°dlib.h
>

4 
	~<°rög.h
>

5 
	~<devi˚/block.h
>

6 
	~<mem/mÆloc.h
>

10 
	s∑πôi⁄


12 
block
 *
	mblock
;

13 
block_£˘‹_t
 
	m°¨t
;

16 
block_›î©i⁄s
 
	g∑πôi⁄_›î©i⁄s
;

18 
ªad_∑πôi⁄_èbÀ
 (
block
 *, 
block_£˘‹_t
 
£˘‹
,

19 
block_£˘‹_t
 
¥im¨y_exãnded_£˘‹
,

20 *
∑π_ƒ
);

21 
found_∑πôi⁄
 (
block
 *, 
uöt8_t
 
ty≥
,

22 
block_£˘‹_t
 
°¨t
, block_£˘‹_à
size
,

23 
∑π_ƒ
);

24 c⁄° *
∑πôi⁄_ty≥_«me
 (
uöt8_t
);

28 
	$∑πôi⁄_sˇn
 (
block
 *block)

30 
∑π_ƒ
 = 0;

31 
	`ªad_∑πôi⁄_èbÀ
 (
block
, 0, 0, &
∑π_ƒ
);

32 i‡(
∑π_ƒ
 == 0)

33 
	`¥ötf
 ("%s: Devi˚ c⁄èö†nÿ∑πôi⁄s\n", 
	`block_«me
 (
block
));

34 
	}
}

50 
	$ªad_∑πôi⁄_èbÀ
 (
block
 *block, 
block_£˘‹_t
 
£˘‹
,

51 
block_£˘‹_t
 
¥im¨y_exãnded_£˘‹
,

52 *
∑π_ƒ
)

55 
	s∑πôi⁄_èbÀ_íåy


57 
uöt8_t
 
boŸabÀ
;

58 
uöt8_t
 
°¨t_chs
[3];

59 
uöt8_t
 
ty≥
;

60 
uöt8_t
 
íd_chs
[3];

61 
uöt32_t
 
off£t
;

62 
uöt32_t
 
size
;

64 
PACKED
;

67 
	s∑πôi⁄_èbÀ


69 
uöt8_t
 
lﬂdî
[446];

70 
∑πôi⁄_èbÀ_íåy
 
∑πôi⁄s
[4];

71 
uöt16_t
 
sig«tuª
;

73 
PACKED
;

75 
∑πôi⁄_èbÀ
 *
±
;

76 
size_t
 
i
;

79 i‡(
£˘‹
 >
	`block_size
 (
block
))

81 
	`¥ötf
 ("%s: P¨tôi⁄ÅabÀáà£˘‹ %"
PRDSNu
"ÖastÉnd of device.\n",

82 
	`block_«me
 (
block
), 
£˘‹
);

87 
	`ASSERT
 ( *
±
 =
BLOCK_SECTOR_SIZE
);

88 
±
 = 
	`mÆloc
 ( *pt);

89 i‡(
±
 =
NULL
)

91 
	`block_ªad
 (
block
, 0, 
±
);

94 i‡(
±
->
sig«tuª
 != 0xaa55)

96 i‡(
¥im¨y_exãnded_£˘‹
 == 0)

97 
	`¥ötf
 ("%s: InvÆidÖ¨tôi⁄ÅabÀ sig«tuª\n", 
	`block_«me
 (
block
));

99 
	`¥ötf
 ("%s: InvÆidÉxãndedÖ¨tôi⁄ÅabÀ i¿£˘‹ %"
PRDSNu
"\n",

100 
	`block_«me
 (
block
), 
£˘‹
);

101 
	`‰ì
 (
±
);

106 
i
 = 0; i <  
±
->
∑πôi⁄s
 /  *pt->partitions; i++)

108 
∑πôi⁄_èbÀ_íåy
 *
e
 = &
±
->
∑πôi⁄s
[
i
];

110 i‡(
e
->
size
 =0 ||É->
ty≥
 == 0)

114 i‡(
e
->
ty≥
 == 0x05

115 || 
e
->
ty≥
 == 0x0f

116 || 
e
->
ty≥
 == 0x85

117 || 
e
->
ty≥
 == 0xc5)

119 
	`¥ötf
 ("%s: ExãndedÖ¨tôi⁄ i¿£˘‹ %"
PRDSNu
"\n",

120 
	`block_«me
 (
block
), 
£˘‹
);

130 i‡(
£˘‹
 == 0)

131 
	`ªad_∑πôi⁄_èbÀ
 (
block
, 
e
->
off£t
,É->off£t, 
∑π_ƒ
);

133 
	`ªad_∑πôi⁄_èbÀ
 (
block
, 
e
->
off£t
 + 
¥im¨y_exãnded_£˘‹
,

134 
¥im¨y_exãnded_£˘‹
, 
∑π_ƒ
);

138 ++*
∑π_ƒ
;

140 
	`found_∑πôi⁄
 (
block
, 
e
->
ty≥
,É->
off£t
 + 
£˘‹
,

141 
e
->
size
, *
∑π_ƒ
);

145 
	`‰ì
 (
±
);

146 
	}
}

154 
	$found_∑πôi⁄
 (
block
 *block, 
uöt8_t
 
∑π_ty≥
,

155 
block_£˘‹_t
 
°¨t
, block_£˘‹_à
size
,

156 
∑π_ƒ
)

158 i‡(
°¨t
 >
	`block_size
 (
block
))

159 
	`¥ötf
 ("%s%d: P¨tôi⁄ sèπ†∑°Énd o‡devi˚ (£˘‹ %"
PRDSNu
")\n",

160 
	`block_«me
 (
block
), 
∑π_ƒ
, 
°¨t
);

161 i‡(
°¨t
 + 
size
 < sèπ || sèπ + sizê> 
	`block_size
 (
block
))

162 
	`¥ötf
 ("%s%d: P¨tôi⁄Énd (%"
PRDSNu
")ÖastÉnd of device (%"PRDSNu")\n",

163 
	`block_«me
 (
block
), 
∑π_ƒ
, 
°¨t
 + 
size
, 
	`block_size
 (block));

166 
block_ty≥
 
ty≥
 = (
∑π_ty≥
 =0x20 ? 
BLOCK_KERNEL


167 : 
∑π_ty≥
 =0x21 ? 
BLOCK_FILESYS


168 : 
∑π_ty≥
 =0x22 ? 
BLOCK_SCRATCH


169 : 
∑π_ty≥
 =0x23 ? 
BLOCK_SWAP


170 : 
BLOCK_FOREIGN
);

171 
∑πôi⁄
 *
p
;

172 
exåa_öfo
[128];

173 
«me
[16];

175 
p
 = 
	`mÆloc
 ( *p);

176 i‡(
p
 =
NULL
)

178 
p
->
block
 = block;

179 
p
->
°¨t
 = start;

181 
	`¢¥ötf
 (
«me
, Çame, "%s%d", 
	`block_«me
 (
block
), 
∑π_ƒ
);

182 
	`¢¥ötf
 (
exåa_öfo
, Éxtra_info, "%s (%02x)",

183 
	`∑πôi⁄_ty≥_«me
 (
∑π_ty≥
),Öart_type);

184 
	`block_ªgi°î
 (
«me
, 
ty≥
, 
exåa_öfo
, 
size
, &
∑πôi⁄_›î©i⁄s
, 
p
);

186 
	}
}

190 
	$∑πôi⁄_ty≥_«me
 (
uöt8_t
 
ty≥
)

196 c⁄° *
ty≥_«mes
[256] =

298  
ty≥_«mes
[
ty≥
] !
NULL
 ?Åype_names[type] : "Unknown";

299 
	}
}

304 
	$∑πôi⁄_ªad
 (*
p_
, 
block_£˘‹_t
 
£˘‹
, *
buf„r
)

306 
∑πôi⁄
 *
p
 = 
p_
;

307 
	`block_ªad
 (
p
->
block
,Ö->
°¨t
 + 
£˘‹
, 
buf„r
);

308 
	}
}

314 
	$∑πôi⁄_wrôe
 (*
p_
, 
block_£˘‹_t
 
£˘‹
, c⁄° *
buf„r
)

316 
∑πôi⁄
 *
p
 = 
p_
;

317 
	`block_wrôe
 (
p
->
block
,Ö->
°¨t
 + 
£˘‹
, 
buf„r
);

318 
	}
}

320 
block_›î©i⁄s
 
	g∑πôi⁄_›î©i⁄s
 =

322 
∑πôi⁄_ªad
,

323 
∑πôi⁄_wrôe


	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/device/pit.c

2 
	~<devi˚/pô.h
>

3 
	~<devi˚/io.h
>

4 
	~<öãºu±.h
>

6 
	$öô_pô
()

8 
öå_Àvñ
 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
();

9 
	`outb
(
PIT_COMMAND
, (
PIT_COUNTER0
 | 
PIT_RW_LMBYTE
 | 
PIT_MODE2
 | 
PIT_BINARY
) );

10 
	`outb
(
PIT_CHANNEL0
, (
PIT_HZ
/
PIT_FRQ_HZ
)%0xff);

11 
	`outb
(
PIT_CHANNEL0
, (
PIT_HZ
/
PIT_FRQ_HZ
)>>8);

12 
	`öå_£t_Àvñ
 (
ﬁd_Àvñ
);

13 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/bitmap.h

1 #i‚de‡
__BITMAP_H__


2 
	#__BITMAP_H__


	)

4 
	~<ty≥.h
>

6 
bôm≠
 *
bôm≠_¸óã_ö_buf
 (
size_t
 
bô_˙t
, *, size_à
byã_˙t
);

7 
size_t
 
bôm≠_buf_size
 (size_à
bô_˙t
);

8 
bôm≠_de°roy
 (
bôm≠
 *);

10 
size_t
 
bôm≠_size
 (c⁄° 
bôm≠
 *);

12 
bôm≠_£t
 (
bôm≠
 *, 
size_t
 
idx
, 
boﬁ
);

13 
bôm≠_m¨k
 (
bôm≠
 *, 
size_t
 
idx
);

14 
bôm≠_ª£t
 (
bôm≠
 *, 
size_t
 
idx
);

15 
bôm≠_Êù
 (
bôm≠
 *, 
size_t
 
idx
);

16 
boﬁ
 
bôm≠_ã°
 (c⁄° 
bôm≠
 *, 
size_t
 
idx
);

18 
bôm≠_£t_Æl
 (
bôm≠
 *, 
boﬁ
);

19 
bôm≠_£t_mu…ùÀ
 (
bôm≠
 *, 
size_t
 
°¨t
, size_à
˙t
, 
boﬁ
);

20 
size_t
 
bôm≠_cou¡
 (c⁄° 
bôm≠
 *, size_à
°¨t
, size_à
˙t
, 
boﬁ
);

21 
boﬁ
 
bôm≠_c⁄èös
 (c⁄° 
bôm≠
 *, 
size_t
 
°¨t
, size_à
˙t
, bool);

22 
boﬁ
 
bôm≠_™y
 (c⁄° 
bôm≠
 *, 
size_t
 
°¨t
, size_à
˙t
);

23 
boﬁ
 
bôm≠_n⁄e
 (c⁄° 
bôm≠
 *, 
size_t
 
°¨t
, size_à
˙t
);

24 
boﬁ
 
bôm≠_Æl
 (c⁄° 
bôm≠
 *, 
size_t
 
°¨t
, size_à
˙t
);

26 
	#BITMAP_ERROR
 
SIZE_MAX


	)

27 
size_t
 
bôm≠_sˇn
 (c⁄° 
bôm≠
 *, size_à
°¨t
, size_à
˙t
, 
boﬁ
);

28 
size_t
 
bôm≠_sˇn_™d_Êù
 (
bôm≠
 *, size_à
°¨t
, size_à
˙t
, 
boﬁ
);

30 #ifde‡
FILESYS


31 
	gfûe
;

32 
size_t
 
bôm≠_fûe_size
 (c⁄° 
bôm≠
 *);

33 
boﬁ
 
bôm≠_ªad
 (
bôm≠
 *, 
fûe
 *);

34 
boﬁ
 
bôm≠_wrôe
 (c⁄° 
bôm≠
 *, 
fûe
 *);

37 
bôm≠_dump
 (c⁄° 
bôm≠
 *);

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/ctype.h

1 #i‚de‡
__LIB_CTYPE_H


2 
	#__LIB_CTYPE_H


	)

4 
ölöe
 
	$i¶owî
 (
c
Ë{  c >'a' && c <'z'; 
	}
}

5 
ölöe
 
	$isuµî
 (
c
Ë{  c >'A' && c <'Z'; 
	}
}

6 
ölöe
 
	$ißÕha
 (
c
Ë{  
	`i¶owî
 (cË|| 
	`isuµî
 (c); 
	}
}

7 
ölöe
 
	$isdigô
 (
c
Ë{  c >'0' && c <'9'; 
	}
}

8 
ölöe
 
	$iß um
 (
c
Ë{  
	`ißÕha
 (cË|| 
	`isdigô
 (c); 
	}
}

9 
ölöe
 
	$isxdigô
 (
c
) {

10  
	`isdigô
 (
c
) || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F');

11 
	}
}

12 
ölöe
 
	$is•a˚
 (
c
) {

13  (
c
 == ' ' || c == '\f' || c == '\n'

14 || 
c
 == '\r' || c == '\t' || c == '\v');

15 
	}
}

16 
ölöe
 
	$isbœnk
 (
c
Ë{  c =' ' || c ='\t'; 
	}
}

17 
ölöe
 
	$isgøph
 (
c
Ë{  c > 32 && c < 127; 
	}
}

18 
ölöe
 
	$i•röt
 (
c
Ë{  c >32 && c < 127; 
	}
}

19 
ölöe
 
	$is˙ål
 (
c
Ë{  (¯>0 && c < 32Ë|| c =127; 
	}
}

20 
ölöe
 
	$ißscii
 (
c
Ë{  c >0 && c < 128; 
	}
}

21 
ölöe
 
	$i•un˘
 (
c
) {

22  
	`i•röt
 (
c
Ë&& !
	`iß um
 (cË&& !
	`is•a˚
 (c);

23 
	}
}

25 
ölöe
 
	$tﬁowî
 (
c
Ë{  
	`isuµî
 (cË? c - 'A' + 'a' : c; 
	}
}

26 
ölöe
 
	$touµî
 (
c
Ë{  
	`i¶owî
 (cË? c - 'a' + 'A' : c; 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/debug.h

1 #i‚de‡
__LIB_DEBUG_H


2 
	#__LIB_DEBUG_H


	)

4 
	#UNUSED
 
	`__©åibuã__
 ((
unu£d
))

	)

5 
	#NO_RETURN
 
	`__©åibuã__
 ((
n‹ëu∫
))

	)

6 
	#NO_INLINE
 
	`__©åibuã__
 ((
noölöe
))

	)

7 
	#PRINTF_FORMAT
(
FMT
, 
FIRST
Ë
	`__©åibuã__
 ((
	`f‹m©
 (
¥ötf
, FMT, FIRST)))

	)

9 
	#PANIC
(...Ë
	`debug_∑nic
 (
__FILE__
, 
__LINE__
, 
__func__
, 
__VA_ARGS__
)

	)

11 
	$debug_∑nic
 (c⁄° *
fûe
, 
löe
, c⁄° *
fun˘i⁄
,

12 c⁄° *
mesßge
, ...Ë
	$PRINTF_FORMAT
 (4, 5Ë
NO_RETURN
;

13 
	`debug_backåa˚
 ();

14 
	`debug_backåa˚_Æl
 ();

18 #unde‡
ASSERT


19 #unde‡
NOT_REACHED


21 #i‚de‡
NDEBUG


22 
	#ASSERT
(
CONDITION
) \

23 i‡(
CONDITION
Ë{ 
	}
} { \

24 
	`PANIC
 ("assertion `%s' failed.", #CONDITION); \

25 }

	)

26 
	#NOT_REACHED
(Ë
	`PANIC
 ("execuãdá¿uƒóchabÀ sèãmít");

	)

28 
	#ASSERT
(
CONDITION
Ë((Ë0)

	)

29 
	#NOT_REACHED
(Ë;;)

	)

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/device/block.h

1 #i‚de‡
DEVICES_BLOCK_H


2 
	#DEVICES_BLOCK_H


	)

4 
	~<°ddef.h
>

5 
	~<öây≥s.h
>

11 
	#BLOCK_SECTOR_SIZE
 512

	)

15 
uöt32_t
 
	tblock_£˘‹_t
;

19 
	#PRDSNu
 
PRIu32


	)

23 
	gblock
;

26 
	eblock_ty≥


29 
	mBLOCK_KERNEL
,

30 
	mBLOCK_FILESYS
,

31 
	mBLOCK_SCRATCH
,

32 
	mBLOCK_SWAP
,

33 
	mBLOCK_ROLE_CNT
,

37 
	mBLOCK_RAW
 = 
BLOCK_ROLE_CNT
,

38 
	mBLOCK_FOREIGN
,

39 
	mBLOCK_CNT


42 c⁄° *
block_ty≥_«me
 (
block_ty≥
);

45 
block
 *
block_gë_rﬁe
 (
block_ty≥
);

46 
block_£t_rﬁe
 (
block_ty≥
, 
block
 *);

47 
block
 *
block_gë_by_«me
 (c⁄° *
«me
);

49 
block
 *
block_fú°
 ();

50 
block
 *
block_√xt
 (block *);

53 
block_£˘‹_t
 
block_size
 (
block
 *);

54 
block_ªad
 (
block
 *, 
block_£˘‹_t
, *);

55 
block_wrôe
 (
block
 *, 
block_£˘‹_t
, const *);

56 c⁄° *
block_«me
 (
block
 *);

57 
block_ty≥
 block_ty≥ (
block
 *);

60 
block_¥öt_°©s
 ();

64 
	sblock_›î©i⁄s


66 (*
	mªad
Ë(*
	maux
, 
	mblock_£˘‹_t
, *
	mbuf„r
);

67 (*
	mwrôe
Ë(*
	maux
, 
	mblock_£˘‹_t
, c⁄° *
	mbuf„r
);

70 
block
 *
block_ªgi°î
 (c⁄° *
«me
, 
block_ty≥
,

71 c⁄° *
exåa_öfo
, 
block_£˘‹_t
 
size
,

72 c⁄° 
block_›î©i⁄s
 *, *
aux
);

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/device/console.h

1 #i‚de‡
__CONSOLE_H__


2 
	#__CONSOLE_H__


	)

4 #¥agm®
∑ck
(
push
, 1)

6 
	skChSåu˘


8 
	mbCh
;

9 
	mbAâ
;

10 } 
	tCHAR
;

12 
	gGlob_x
;

13 
	gGlob_y
;

15 #¥agm®
∑ck
(
p›
)

17 
	#SERIAL_STDOUT


	)

19 
öô_c⁄sﬁe
();

21 
PrötCh¨ToS¸ìn
(
x
, 
y
, c⁄° *
pSåög
);

22 
PrötCh¨
(
x
, 
y
, c⁄° 
Såög
);

24 
˛rS¸ìn
();

25 
s¸ﬁl
();

26 
¥ötk
(c⁄° *
fmt
, ...);

28 #ifde‡
SCREEN_SCROLL


29 
ª‰eshS¸ìn
();

30 
s¸ﬁl_s¸ìn
(
off£t
);

31 
£t_ÁŒow
();

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/device/device.h

1 #i‚def 
__DEVICE_H__


2 
	#__DEVICE_H__


	)

4 
dev_shutdown
();

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/device/io.h

1 #i‚def 
__IO_H__


2 
	#__IO_H__


	)

4 
	~<°ddef.h
>

5 
	~<°döt.h
>

7 
outb
(
p‹t
, 
d©a
);

8 
öb
(
p‹t
);

9 
oué
(
p‹t
, 
d©a
);

10 
öl
(
p‹t
);

11 
iowaô
();

13 
ªad_¸0
();

14 
wrôe_¸0
(
d©a
);

15 
ªad_¸3
();

16 
wrôe_¸3
(
d©a
);

17 
ªad_¸4
();

18 
wrôe_¸4
(
d©a
);

20 
dev_shutdown
();

22 
ölöe
 

23 
	$ösw
 (
uöt16_t
 
p‹t
, *
addr
, 
size_t
 
˙t
)

25 
asm
 vﬁ©ûê("ª∞ösw" : "+D" (
addr
), "+c" (
˙t
Ë: "d" (
p‹t
) : "memory");

26 
	}
}

28 
ölöe
 

29 
	$outsw
 (
uöt16_t
 
p‹t
, c⁄° *
addr
, 
size_t
 
˙t
)

31 
asm
 vﬁ©ûê("ª∞outsw" : "+S" (
addr
), "+c" (
˙t
Ë: "d" (
p‹t
));

32 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/device/kbd.h

1 #i‚de‡
__KDB_H__


2 
	#__KDB_H__


	)

4 
	~<ty≥.h
>

5 
	~<öãºu±.h
>

7 
	#KBDMAPSIZE
 86

	)

9 
	#KEY_ESC
 0x1B

	)

10 
	#KEY_RSHIFT
 0x02

	)

11 
	#KEY_PRTSCN
 0x03

	)

12 
	#KEY_LALT
 0x04

	)

13 
	#KEY_SPACE
 0x05

	)

14 
	#KEY_CAPS
 0x06

	)

15 
	#KEY_F1
 0X07

	)

16 
	#KEY_F2
 0x08

	)

17 
	#KEY_F3
 0x09

	)

18 
	#KEY_F4
 0x0A

	)

19 
	#KEY_F5
 0x0B

	)

20 
	#KEY_F6
 0x0C

	)

21 
	#KEY_F7
 0x0D

	)

22 
	#KEY_F8
 0x0E

	)

23 
	#KEY_F9
 0x0F

	)

24 
	#KEY_F10
 0x10

	)

25 
	#KEY_F11
 0x11

	)

26 
	#KEY_F12
 0x12

	)

27 
	#KEY_BSPACE
 0x13

	)

28 
	#KEY_TAB
 0x14

	)

30 
	sKey_Sètus_Såu˘
 {

31 
BOOL
 
	mShi·Fœg
;

32 
BOOL
 
	mC≠¶ockFœg
;

33 
BOOL
 
	mNumlockFLag
;

34 
BOOL
 
	mS¸ﬁŒockFœg
;

36 
BOOL
 
	mExã¡edFœg
;

37 
	mPau£Fœg
;

38 } 
	tKey_Sètus
;

40 
Upd©eKeySèt
(
BYTE
);

41 
BOOL
 
C⁄vîtSˇncodeToASCII
(
BYTE
, BYTE *);

42 
öô_kbd
();

43 
kbd_h™dÀr
(
öå_‰ame
 *
i‰ame
);

45 
kbd_ªad_ch¨
();

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/device/partition.h

1 #i‚de‡
DEVICES_PARTITION_H


2 
	#DEVICES_PARTITION_H


	)

4 
	gblock
;

6 
∑πôi⁄_sˇn
 (
block
 *);

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/device/pit.h

1 #i‚def 
__PIT_H__


2 
	#__PIT_H__


	)

4 
	#PIT_CHANNEL0
 0x40

	)

5 
	#PIT_CHANNEL1
 0x41

	)

6 
	#PIT_CHANNEL2
 0x42

	)

7 
	#PIT_COMMAND
 0x43

	)

9 
	#PIT_COUNTER0
 0x00

	)

10 
	#PIT_COUNTER1
 0x40

	)

11 
	#PIT_COUNTER2
 0x80

	)

12 
	#PIT_READBACK
 0xA0

	)

14 
	#PIT_RW_COUNTER_LATCH
 0x00

	)

15 
	#PIT_RW_LBYTE
 0x10

	)

16 
	#PIT_RW_MBYTE
 0x20

	)

17 
	#PIT_RW_LMBYTE
 0x30

	)

19 
	#PIT_MODE0
 
Ox00


	)

20 
	#PIT_MODE1
 0x02

	)

21 
	#PIT_MODE2
 0x04

	)

22 
	#PIT_MODE3
 0x06

	)

23 
	#PIT_MODE4
 0x08

	)

24 
	#PIT_MODE5
 0x0A

	)

26 
	#PIT_BINARY
 0x00

	)

27 
	#PIT_BCD
 0x01

	)

29 
	#PIT_HZ
 1193181

	)

30 
	#PIT_FRQ_HZ
 1000

	)

32 
öô_pô
();

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/do_syscall.h

1 #i‚def 
__DO_SYSCALL_H__


2 
	#__DO_SYSCALL_H__


	)

4 
pid_t
 
do_f‹k
(
¥oc_func
 
func
, * 
aux
);

5 
do_exô
(
°©us
);

6 
pid_t
 
do_waô
(*
°©us
);

7 
do_ssuªad
(
ty≥
, * 
buf
, 
Àn
);

8 
do_shutdown
();

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/interrupt.h

1 #i‚de‡
__INTERRUPT_H__


2 
	#__INTERRUPT_H__


	)

4 
	#HLT
(Ë
__asm__
 
	`__vﬁ©ûe
("h…");

	)

6 
	~<ty≥.h
>

8 
	#INTR_MAX
 256

	)

9 
	#TIMER_MAX
 40

	)

10 
	#REFRESH_FPS
 20

	)

11 
	#CODE_SEGMENT
 0x08

	)

13 
	eöå_Àvñ


15 
	mINTR_OFF
,

16 
	mINTR_ON


19 
öå_Àvñ
 
öå_gë_Àvñ
 ();

20 
öå_Àvñ
 
öå_£t_Àvñ
 (intr_level);

21 
öå_Àvñ
 
öå_íabÀ
 ();

22 
öå_Àvñ
 
öå_dißbÀ
 ();

24 #¥agm®
∑ck
(
push
, 1)

26 
	söå_‰ame


28 
uöt32_t
 
	medi
;

29 
uöt32_t
 
	mesi
;

30 
uöt32_t
 
	mebp
;

31 
uöt32_t
 
	me•_dummy
;

32 
uöt32_t
 
	mebx
;

33 
uöt32_t
 
	medx
;

34 
uöt32_t
 
	mecx
;

35 
uöt32_t
 
	móx
;

36 
uöt16_t
 
	mgs
, :16;

37 
uöt16_t
 
	mfs
, :16;

38 
uöt16_t
 
	mes
, :16;

39 
uöt16_t
 
	mds
, :16;

41 
uöt32_t
 
	mvec_no
;

42 
uöt32_t
 
	mîr‹_code
;

44 *
	m‰ame_poöãr
;

46 (*
	meù
) ();

47 
uöt16_t
 
	mcs
, :16;

48 
uöt32_t
 
	meÊags
;

49 *
	me•
;

50 
uöt16_t
 
	mss
, :16;

53 #¥agm®
∑ck
(
p›
)

55 
	töå_h™dÀr_func
 (
	töå_‰ame
 *);

56 
boﬁ
 
öå_c⁄ãxt
 ();

57 
do_sched_⁄_ªtu∫
();

59 
öô_öå
();

60 
ªg_h™dÀr
(
idx
, 
öå_h™dÀr_func
 *
h™dÀr
);

61 
gë_ticks
();

63 #i‚de‡
__ASSEMBLER__


	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/intr-stubs.h

1 #i‚de‡
_INTR_STUBS_H_


2 
	#_INTR_STUBS_H_


	)

4 
	#INTR_MAX
 256

	)

6 
	töå_°ub_func
 ();

7 
öå_°ub_func
 *
öå_°ubs
[
INTR_MAX
];

9 
öå_exô
 ();

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/inttypes.h

1 #i‚de‡
__LIB_INTTYPES_H


2 
	#__LIB_INTTYPES_H


	)

4 
	~<°döt.h
>

6 
	#PRId8
 "hhd"

	)

7 
	#PRIi8
 "hhi"

	)

8 
	#PRIo8
 "hho"

	)

9 
	#PRIu8
 "hhu"

	)

10 
	#PRIx8
 "hhx"

	)

11 
	#PRIX8
 "hhX"

	)

13 
	#PRId16
 "hd"

	)

14 
	#PRIi16
 "hi"

	)

15 
	#PRIo16
 "ho"

	)

16 
	#PRIu16
 "hu"

	)

17 
	#PRIx16
 "hx"

	)

18 
	#PRIX16
 "hX"

	)

20 
	#PRId32
 "d"

	)

21 
	#PRIi32
 "i"

	)

22 
	#PRIo32
 "o"

	)

23 
	#PRIu32
 "u"

	)

24 
	#PRIx32
 "x"

	)

25 
	#PRIX32
 "X"

	)

27 
	#PRId64
 "Œd"

	)

28 
	#PRIi64
 "Œi"

	)

29 
	#PRIo64
 "Œo"

	)

30 
	#PRIu64
 "Œu"

	)

31 
	#PRIx64
 "Œx"

	)

32 
	#PRIX64
 "ŒX"

	)

34 
	#PRIdMAX
 "jd"

	)

35 
	#PRIiMAX
 "ji"

	)

36 
	#PRIoMAX
 "jo"

	)

37 
	#PRIuMAX
 "ju"

	)

38 
	#PRIxMAX
 "jx"

	)

39 
	#PRIXMAX
 "jX"

	)

41 
	#PRIdPTR
 "td"

	)

42 
	#PRIiPTR
 "ti"

	)

43 
	#PRIoPTR
 "to"

	)

44 
	#PRIuPTR
 "tu"

	)

45 
	#PRIxPTR
 "tx"

	)

46 
	#PRIXPTR
 "tX"

	)

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/limits.h

1 #i‚de‡
__LIMITS_H__


2 
	#__LIMITS_H__


	)

4 
	#CHAR_BIT
 8

	)

6 
	#SCHAR_MAX
 127

	)

7 
	#SCHAR_MIN
 (-
SCHAR_MAX
 - 1)

	)

8 
	#UCHAR_MAX
 255

	)

10 #ifde‡
__CHAR_UNSIGNED__


11 
	#CHAR_MIN
 0

	)

12 
	#CHAR_MAX
 
UCHAR_MAX


	)

14 
	#CHAR_MIN
 
SCHAR_MIN


	)

15 
	#CHAR_MAX
 
SCHAR_MAX


	)

18 
	#SHRT_MAX
 32767

	)

19 
	#SHRT_MIN
 (-
SHRT_MAX
 - 1)

	)

20 
	#USHRT_MAX
 65535

	)

22 
	#INT_MAX
 2147483647

	)

23 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

24 
	#UINT_MAX
 4294967295U

	)

26 
	#LONG_MAX
 2147483647L

	)

27 
	#LONG_MIN
 (-
LONG_MAX
 - 1)

	)

28 
	#ULONG_MAX
 4294967295UL

	)

30 
	#LLONG_MAX
 9223372036854775807LL

	)

31 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1)

	)

32 
	#ULLONG_MAX
 18446744073709551615ULL

	)

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/list.h

1 #i‚de‡
__LIST_H__


2 
	#__LIST_H__


	)

85 
	~<ssulib.h
>

86 
	~<ty≥.h
>

89 
	sli°_ñem


91 
li°_ñem
 *
	m¥ev
;

92 
li°_ñem
 *
	m√xt
;

96 
	sli°


98 
li°_ñem
 
	mhód
;

99 
li°_ñem
 
	mèû
;

107 
	#li°_íåy
(
LIST_ELEM
, 
STRUCT
, 
MEMBER
) \

108 ((
STRUCT
 *Ë((
uöt8_t
 *Ë&(
LIST_ELEM
)->
√xt
 \

109 - 
	`off£tof
 (
STRUCT
, 
MEMBER
.
√xt
)))

	)

121 
	#LIST_INITIALIZER
(
NAME
Ë{ { 
NULL
, &(NAME).
èû
 }, \

122 { &(
NAME
).
hód
, 
NULL
 } }

	)

124 
li°_öô
 (
li°
 *);

127 
li°_ñem
 *
li°_begö
 (
li°
 *);

128 
li°_ñem
 *
li°_√xt
 (list_elem *);

129 
li°_ñem
 *
li°_íd
 (
li°
 *);

131 
li°_ñem
 *
li°_rbegö
 (
li°
 *);

132 
li°_ñem
 *
li°_¥ev
 (list_elem *);

133 
li°_ñem
 *
li°_ªnd
 (
li°
 *);

135 
li°_ñem
 *
li°_hód
 (
li°
 *);

136 
li°_ñem
 *
li°_èû
 (
li°
 *);

139 
li°_ö£π
 (
li°_ñem
 *, list_elem *);

140 
li°_•li˚
 (
li°_ñem
 *
bef‹e
,

141 
li°_ñem
 *
fú°
, li°_ñem *
œ°
);

142 
li°_push_‰⁄t
 (
li°
 *, 
li°_ñem
 *);

143 
li°_push_back
 (
li°
 *, 
li°_ñem
 *);

146 
li°_ñem
 *
li°_ªmove
 (list_elem *);

147 
li°_ñem
 *
li°_p›_‰⁄t
 (
li°
 *);

148 
li°_ñem
 *
li°_p›_back
 (
li°
 *);

151 
li°_ñem
 *
li°_‰⁄t
 (
li°
 *);

152 
li°_ñem
 *
li°_back
 (
li°
 *);

155 
size_t
 
li°_size
 (
li°
 *);

156 
boﬁ
 
li°_em±y
 (
li°
 *);

159 
li°_ªvî£
 (
li°
 *);

164 
boﬁ
 
	tli°_Àss_func
 (c⁄° 
	tli°_ñem
 *
	ta
,

165 c⁄° 
	tli°_ñem
 *
	tb
,

166 *
	taux
);

169 
li°_s‹t
 (
li°
 *,

170 
li°_Àss_func
 *, *
aux
);

171 
li°_ö£π_‹dîed
 (
li°
 *, 
li°_ñem
 *,

172 
li°_Àss_func
 *, *
aux
);

173 
li°_unique
 (
li°
 *, li° *
du∂iˇãs
,

174 
li°_Àss_func
 *, *
aux
);

177 
li°_ñem
 *
li°_max
 (
li°
 *, 
li°_Àss_func
 *, *
aux
);

178 
li°_ñem
 *
li°_mö
 (
li°
 *, 
li°_Àss_func
 *, *
aux
);

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/loader.h

1 #i‚de‡
THREADS_LOADER_H


2 
	#THREADS_LOADER_H


	)

4 
	#LOADER_BASE
 0x7c00

	)

5 
	#LOADER_END
 0x7e00

	)

7 
	#LOADER_KERN_BASE
 0x20000

	)

9 
	#LOADER_PHYS_BASE
 0xc0000000

	)

11 
	#LOADER_SIG
 (
LOADER_END
 - 
LOADER_SIG_LEN
)

	)

12 
	#LOADER_PARTS
 (
LOADER_SIG
 - 
LOADER_PARTS_LEN
)

	)

13 
	#LOADER_ARGS
 (
LOADER_PARTS
 - 
LOADER_ARGS_LEN
)

	)

14 
	#LOADER_ARG_CNT
 (
LOADER_ARGS
 - 
LOADER_ARG_CNT_LEN
)

	)

16 
	#LOADER_SIG_LEN
 2

	)

17 
	#LOADER_PARTS_LEN
 64

	)

18 
	#LOADER_ARGS_LEN
 128

	)

19 
	#LOADER_ARG_CNT_LEN
 4

	)

21 
	#SEL_NULL
 0x00

	)

22 
	#SEL_KCSEG
 0x08

	)

23 
	#SEL_KDSEG
 0x10

	)

25 #i‚de‡
__ASSEMBLER__


26 
	~<°döt.h
>

28 
uöt32_t
 
öô_øm_∑ges
;

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/mem/malloc.h

1 #i‚def 
__MALLOC_H__


2 
	#__MALLOC_H__


	)

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/mem/mm.h

1 #i‚def 
__MEM_H__


2 
	#__MEM_H__


	)

4 
mem_size
();

5 
dëe˘_mem
();

6 * 
mem£t
(* 
d°_
, 
vÆue
, 
size
);

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/mem/paging.h

1 #i‚de‡
__PAGING_H__


2 
	#__PAGING_H__


	)

4 
	~<ty≥.h
>

5 
	~<¥oc/¥oc.h
>

7 
	#CR0_FLAG_PG
 0x80000000

	)

8 
	#CR0_FLAG_PE
 0x00000001

	)

10 
	#PAGE_FLAG_PRESENT
 0x01

	)

11 
	#PAGE_FLAG_RW
 0x02

	)

12 
	#PAGE_FLAG_USER
 0x04

	)

13 
	#PAGE_FLAG_WRITE
 0x08

	)

14 
	#PAGE_FLAG_CACHE
 0x10

	)

15 
	#PAGE_FLAG_ACCESS
 0x20

	)

16 
	#PAGE_FLAG_AVAIL
 0x40

	)

17 
	#PAGE_FLAG_DIRTY
 0x40

	)

18 
	#PAGE_FLAG_SIZE
 0x80

	)

19 
	#PAGE_FLAG_PTA
 0x80

	)

20 
	#PAGE_FLAG_GLOB
 0x100

	)

21 
	#PAGE_ADDR_AVAIL
 0x200

	)

22 
	#PAGE_ADDR_BASE
 0x1000

	)

24 
	#PAGE_MASK_BASE
 0xFFFFF000

	)

25 
	#PAGE_MASK_PDE
 0xFFC00000

	)

26 
	#PAGE_MASK_PTE
 0x003FF000

	)

27 
	#PAGE_OFFSET_PDE
 22

	)

28 
	#PAGE_OFFSET_PTE
 12

	)

30 
	#PAGE_SIZE
 4096

	)

31 
	#PAGE_TBL_SIZE
 4096

	)

32 
	#PAGE_DIR_SIZE
 4096

	)

34 
	#KERNEL_ADDR
 0x00100000

	)

35 
	#KERNEL_HEAP
 0x00400000

	)

37 
ölöe
 
uöt32_t
 
	$pg_no
(c⁄° 
uöt32_t
 *
∑ge
){

38  (
uöt32_t
)
∑ge
 >> 
PAGE_OFFSET_PTE
;

39 
	}
}

41 
öô_∑gög
();

42 
uöt32_t
* 
pd_¸óã
 (
pid_t
 
pid
);

43 
uöt32_t
 
pde_idx_addr
(uöt32_t* 
addr
);

44 
uöt32_t
 
±e_idx_addr
(uöt32_t* 
addr
);

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/mem/palloc.h

1 #i‚de‡
__PALLOC_H__


2 
	#__PALLOC_H__


	)

4 
	~<ssulib.h
>

6 
öô_∑Œoc
 ();

7 
uöt32_t
 *
∑Œoc_gë_∑ge
 ();

8 
uöt32_t
 *
∑Œoc_gë_mu…ùÀ
 (
size_t
 
∑ge_˙t
);

9 
∑Œoc_‰ì_∑ge
 (*);

10 
∑Œoc_‰ì_mu…ùÀ
 (*, 
size_t
 
∑ge_˙t
);

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/packed.h

1 #i‚de‡
__LIB_PACKED_H


2 
	#__LIB_PACKED_H


	)

4 
	#PACKED
 
	`__©åibuã__
 ((
∑cked
))

	)

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/proc/proc.h

1 #i‚def 
__PROC_H__


2 
	#__PROC_H__


	)

4 
	~<li°.h
>

6 
	#PROC_NUM_MAX
 16

	)

8 
	tpid_t
;

10 
	ep_°©e
 {

11 
	mPROC_UNUSED
,

12 
	mPROC_RUN
,

13 
	mPROC_STOP
,

14 
	mPROC_ZOMBIE
,

15 
	mPROC_BLOCK
,

18 #¥agm®
∑ck
(
push
, 1)

20 
	s¥oc_›ti⁄


22 
	mni˚
;

23 
	mπ_¥i‹ôy
;

27 
	s¥o˚ss


29 
pid_t
 
	mpid
;

30 *
	m°ack
;

31 *
	mpd
;

32 
p_°©e
 
	m°©e
;

33 
	mtime_¶ìp
;

34 
¥o˚ss
* 
	m∑ª¡
;

35 
	msim∂e_lock
;

36 
	mchûd_pid
;

37 
	mexô_°©us
;

38 
	mque_Àvñ
;

40 
	m¥i‹ôy
;

41 
	mπ_¥i‹ôy
;

42 
	mni˚
;

44 
boﬁ
 
	mﬁd_¥oc
;

45 
	mmembî
;

46 
	mtime_¶i˚
;

47 
	mtime_u£d
;

50 
li°_ñem
 
	mñem_Æl
;

51 
li°_ñem
 
	mñem_°©
;

54 #¥agm®
∑ck
(
p›
)

56 
¥o˚ss
 *
cur_¥o˚ss
;

57 
¥oc_ticks
;

59 
	t¥oc_func
(* 
	taux
);

60 
¥oc_func
 
	g¥öt_pid
;

61 
¥oc_func
 
	gidÀ
;

63 
scheduÀ
();

64 
¥o˚ss
* 
sched_föd_£t
();

66 
öô_¥oc
();

67 
¥oc_‰ì
();

68 
pid_t
 
¥oc_¸óã
(
¥oc_func
 
func
, 
¥oc_›ti⁄
 *
¥i‹ôy
, * 
aux
);

69 
¥oc_wake
();

70 
¥oc_¶ìp
(
ticks
);

71 
¥oc_block
();

72 
¥oc_unblock
(
¥o˚ss
* 
¥oc
);

73 
¥oc_¥öt_d©a
();

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/proc/sched.h

1 #i‚def 
__SCHED_H__


2 
	#__SCHED_H__


	)

4 
	~<li°.h
>

5 
	~<¥oc/¥oc.h
>

7 
scheduÀ
();

9 
	#QUE_LV_MAX
 3

	)

10 
	#LV0_TIMER
 40

	)

11 
	#LV1_TIMER
 80

	)

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/proc/switch.h

1 #i‚de‡
_SWITCH_H_


2 
	#_SWITCH_H_


	)

4 
	~<¥oc/¥oc.h
>

5 
	~<ty≥.h
>

7 
swôch_¥o˚ss
(
¥o˚ss
 *
cur
, ¥o˚s†*
√xt
);

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/round.h

1 #i‚de‡
__LIB_ROUND_H


2 
	#__LIB_ROUND_H


	)

4 
	#ROUND_UP
(
X
, 
STEP
Ë(((XË+ (STEPË- 1Ë/ (STEPË* (STEP))

	)

6 
	#DIV_ROUND_UP
(
X
, 
STEP
Ë(((XË+ (STEPË- 1Ë/ (STEP))

	)

8 
	#ROUND_DOWN
(
X
, 
STEP
Ë((XË/ (STEPË* (STEP))

	)

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/ssulib.h

1 #i‚de‡
__SSULIB_H__


2 
	#__SSULIB_H__


	)

4 
	~<ty≥.h
>

5 
	#off£tof
(
TYPE
, 
MEMBER
Ë((
size_t
Ë&((TYPE *Ë0)->MEMBER)

	)

7 
	#BUFSIZ
 512

	)

9 
mem˝y
(* 
‰om
, * 
to
, 
uöt32_t
 
Àn
);

10 
°∫cmp
(* 
b1
, * 
b2
, 
Àn
);

11 
gëch¨
();

12 
gëTokí
(* 
buf
, 
Àn
);

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/stdarg.h

1 #i‚de‡
__STDARG_H__


2 
	#__STDARG_H__


	)

4 *
	tva_li°
;

6 
	#_ADDRESSOF
(
v
Ë–&(vË)

	)

7 
	#_INTSIZEOF
(
n
Ë–(“Ë+ (Ë- 1Ë& ~((Ë- 1Ë)

	)

9 
	#va_°¨t
(
≠
,
v
Ë–≠ = (
va_li°
)
	`_ADDRESSOF
(vË+ 
	`_INTSIZEOF
(vË)

	)

10 
	#va_¨g
(
≠
,
t
Ë–*— *)(◊∞+
	`_INTSIZEOF
—)Ë- _INTSIZEOF—)Ë)

	)

11 
	#va_íd
(
≠
Ë–≠ = (
va_li°
)0 )

	)

13 
°æí
(c⁄° *
°rög
);

14 *
numbî
(* 
°r
, 
num
, 
ba£
, 
size
, 
¥ecisi⁄
, 
ty≥
);

15 
skù_©oi
(c⁄° **
s
);

16 
v•rötk
(*
buf
, c⁄° *
fmt
, 
va_li°
 
¨gs
);

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/stdbool.h

1 #i‚de‡
__LIB_STDBOOL_H


2 
	#__LIB_STDBOOL_H


	)

5 
	#åue
 1

	)

6 
	#Ál£
 0

	)

7 
	#__boﬁ_åue_Ál£_¨e_deföed
 1

	)

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/stddef.h

1 #i‚de‡
__LIB_STDDEF_H


2 
	#__LIB_STDDEF_H


	)

4 
	#off£tof
(
TYPE
, 
MEMBER
Ë((
size_t
Ë&((TYPE *Ë0)->MEMBER)

	)

6 
__PTRDIFF_TYPE__
 
	t±rdiff_t
;

7 
__SIZE_TYPE__
 
	tsize_t
;

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/stdint.h

1 #i‚de‡
__LIB_STDINT_H


2 
	#__LIB_STDINT_H


	)

4 sig√d 
	töt8_t
;

5 
	#INT8_MAX
 127

	)

6 
	#INT8_MIN
 (-
INT8_MAX
 - 1)

	)

8 sig√d 
	töt16_t
;

9 
	#INT16_MAX
 32767

	)

10 
	#INT16_MIN
 (-
INT16_MAX
 - 1)

	)

12 sig√d 
	töt32_t
;

13 
	#INT32_MAX
 2147483647

	)

14 
	#INT32_MIN
 (-
INT32_MAX
 - 1)

	)

16 sig√d 
	töt64_t
;

17 
	#INT64_MAX
 9223372036854775807LL

	)

18 
	#INT64_MIN
 (-
INT64_MAX
 - 1)

	)

20 
	tuöt8_t
;

21 
	#UINT8_MAX
 255

	)

23 
	tuöt16_t
;

24 
	#UINT16_MAX
 65535

	)

26 
	tuöt32_t
;

27 
	#UINT32_MAX
 4294967295U

	)

29 
	tuöt64_t
;

30 
	#UINT64_MAX
 18446744073709551615ULL

	)

32 
öt32_t
 
	töçå_t
;

33 
	#INTPTR_MIN
 
INT32_MIN


	)

34 
	#INTPTR_MAX
 
INT32_MAX


	)

36 
uöt32_t
 
	tuöçå_t
;

37 
	#UINTPTR_MAX
 
UINT32_MAX


	)

39 
öt64_t
 
	tötmax_t
;

40 
	#INTMAX_MIN
 
INT64_MIN


	)

41 
	#INTMAX_MAX
 
INT64_MAX


	)

43 
	tuötmax_t
;

44 
	#UINTMAX_MAX
 
UINT64_MAX


	)

46 
	#PTRDIFF_MIN
 
INT32_MIN


	)

47 
	#PTRDIFF_MAX
 
INT32_MAX


	)

49 
	#SIZE_MAX
 
UINT32_MAX


	)

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/stdlib.h

1 #i‚de‡
__LIB_STDLIB_H


2 
	#__LIB_STDLIB_H


	)

4 
	~<°ddef.h
>

6 
©oi
 (const *);

7 
qs‹t
 (*
¨øy
, 
size_t
 
˙t
, size_à
size
,

8 (*
com∑ª
) (const *, const *));

9 *
	`b£¨ch
 (c⁄° *
key
, c⁄° *
¨øy
, 
size_t
 
˙t
,

10 
size_t
 
size
, (*
com∑ª
) (const *, const *));

12 
	`s‹t
 (*
¨øy
, 
size_t
 
˙t
, size_à
size
,

13 (*
com∑ª
Ë(c⁄° *, c⁄° *, *
aux
),

14 *
aux
);

15 *
	`bö¨y_£¨ch
 (c⁄° *
key
, c⁄° *
¨øy
, 
size_t
 
˙t
,

16 
size_t
 
size
,

17 (*
com∑ª
Ë(c⁄° *, c⁄° *, *
aux
),

18 *
aux
);

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/string.h

1 #i‚de‡
__LIB_STRING_H


2 
	#__LIB_STRING_H


	)

4 
	~<°ddef.h
>

6 *
memmove
 (*, c⁄° *, 
size_t
);

7 *
°∫ˇt
 (*, c⁄° *, 
size_t
);

8 
memcmp
 (c⁄° *, c⁄° *, 
size_t
);

9 
°rcmp
 (const *, const *);

10 *
memchr
 (c⁄° *, , 
size_t
);

11 *
°rchr
 (const *, );

12 
size_t
 
°rc•n
 (const *, const *);

13 *
°Ωbrk
 (const *, const *);

14 *
°ºchr
 (const *, );

15 
size_t
 
°r•n
 (const *, const *);

16 *
°r°r
 (const *, const *);

17 *
mem£t
 (*, , 
size_t
);

18 
size_t
 
°æ˝y
 (*, const *, size_t);

19 
size_t
 
°æˇt
 (*, const *, size_t);

20 *
°πok_r
 (*, const *, **);

21 
size_t
 
°∫Àn
 (const *, size_t);

23 
	#°r˝y
 
d⁄t_u£_°r˝y_u£_°æ˝y


	)

24 
	#°∫˝y
 
d⁄t_u£_°∫˝y_u£_°æ˝y


	)

25 
	#°rˇt
 
d⁄t_u£_°rˇt_u£_°æˇt


	)

26 
	#°∫ˇt
 
d⁄t_u£_°∫ˇt_u£_°æˇt


	)

27 
	#°πok
 
d⁄t_u£_°πok_u£_°πok_r


	)

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/synch.h

1 #i‚de‡
__SYNCH_H__


2 
	#__SYNCH_H__


	)

4 
	~<li°.h
>

5 
	~<ty≥.h
>

8 
	s£m≠h‹e


10 
	mvÆue
;

11 
li°
 
	mwaôîs
;

14 
£ma_öô
 (
£m≠h‹e
 *, 
vÆue
);

15 
£ma_down
 (
£m≠h‹e
 *);

16 
boﬁ
 
£ma_åy_down
 (
£m≠h‹e
 *);

17 
£ma_up
 (
£m≠h‹e
 *);

18 
£ma_£lf_ã°
 ();

20 
	slock


22 
¥o˚ss
 *
	mhﬁdî
;

23 
£m≠h‹e
 
	m£m≠h‹e
;

26 
lock_öô
 (
lock
 *);

27 
lock_acquúe
 (
lock
 *);

28 
boﬁ
 
lock_åy_acquúe
 (
lock
 *);

29 
lock_ªÀa£
 (
lock
 *);

30 
boﬁ
 
lock_hñd_by_cuºít_¥o˚ss
 (c⁄° 
lock
 *);

32 
	sc⁄dôi⁄


34 
li°
 
	mwaôîs
;

37 
c⁄d_öô
 (
c⁄dôi⁄
 *);

38 
c⁄d_waô
 (
c⁄dôi⁄
 *, 
lock
 *);

39 
c⁄d_sig«l
 (
c⁄dôi⁄
 *, 
lock
 *);

40 
c⁄d_brﬂdˇ°
 (
c⁄dôi⁄
 *, 
lock
 *);

42 
	#b¨rõr
(Ë
asm
 vﬁ©ûê("" : : : "mem‹y")

	)

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/syscall.h

1 #i‚de‡ 
__SYSCALL_H__


2 
	#__SYSCALL_H__


	)

4 
	eSYS_LIST
 {

5 
	mSYS_FORK
 = 0,

6 
	mSYS_EXIT
,

7 
	mSYS_WAIT
,

8 
	mSYS_SSUREAD
,

9 
	mSYS_SHUTDOWN
,

10 
	mSYS_NUM
,

13 
	~<¥oc/¥oc.h
>

14 
öô_sysˇŒ
();

16 
exô
(
°©us
);

17 
pid_t
 
f‹k
(
¥oc_func
 
func
, * 
aux
);

18 
pid_t
 
waô
(*
°©us
);

19 
ssuªad
();

20 
shutdown
();

22 
sysˇŒ_tbl
[
SYS_NUM
][2];

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/type.h

1 #i‚de‡
__TYPE_H__


2 
	#__TYPE_H__


	)

4 
	tBYTE
;

5 #i‚de‡
BOOL


6 
	tBOOL
;

8 
	tboﬁ
;

9 
	tsize_t
;

10 
	tqw‹d
;

12 
	#TRUE
 1

	)

13 
	#FALSE
 0

	)

15 #i‚de‡
NULL


16 
	#NULL
 0

	)

18 #i‚de‡
åue


19 
	#åue
 1

	)

21 #i‚de‡
Ál£


22 
	#Ál£
 0

	)

29 sig√d 
	töt8_t
;

30 
	#INT8_MAX
 127

	)

31 
	#INT8_MIN
 (-
INT8_MAX
 - 1)

	)

33 sig√d 
	töt16_t
;

34 
	#INT16_MAX
 32767

	)

35 
	#INT16_MIN
 (-
INT16_MAX
 - 1)

	)

37 sig√d 
	töt32_t
;

38 
	#INT32_MAX
 2147483647

	)

39 
	#INT32_MIN
 (-
INT32_MAX
 - 1)

	)

41 sig√d 
	töt64_t
;

42 
	#INT64_MAX
 9223372036854775807LL

	)

43 
	#INT64_MIN
 (-
INT64_MAX
 - 1)

	)

45 
	tuöt8_t
;

46 
	#UINT8_MAX
 255

	)

48 
	tuöt16_t
;

49 
	#UINT16_MAX
 65535

	)

51 
	tuöt32_t
;

52 
	#UINT32_MAX
 4294967295U

	)

54 
	tuöt64_t
;

55 
	#UINT64_MAX
 18446744073709551615ULL

	)

57 
öt32_t
 
	töçå_t
;

58 
	#INTPTR_MIN
 
INT32_MIN


	)

59 
	#INTPTR_MAX
 
INT32_MAX


	)

61 
uöt32_t
 
	tuöçå_t
;

62 
	#UINTPTR_MAX
 
UINT32_MAX


	)

64 
öt64_t
 
	tötmax_t
;

65 
	#INTMAX_MIN
 
INT64_MIN


	)

66 
	#INTMAX_MAX
 
INT64_MAX


	)

68 
	tuötmax_t
;

69 
	#UINTMAX_MAX
 
UINT64_MAX


	)

71 
	#PTRDIFF_MIN
 
INT32_MIN


	)

72 
	#PTRDIFF_MAX
 
INT32_MAX


	)

74 
	#SIZE_MAX
 
UINT32_MAX


	)

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/vaddr.h

1 #i‚de‡
THREADS_VADDR_H


2 
	#THREADS_VADDR_H


	)

4 
	~<debug.h
>

5 
	~<°döt.h
>

6 
	~<°dboﬁ.h
>

8 
	~<lﬂdî.h
>

15 
	#BITMASK
(
SHIFT
, 
CNT
Ë(((1u»<< (CNT)Ë- 1Ë<< (SHIFT))

	)

18 
	#PGSHIFT
 0

	)

19 
	#PGBITS
 12

	)

20 
	#PGSIZE
 (1 << 
PGBITS
Ë

	)

21 
	#PGMASK
 
	`BITMASK
(
PGSHIFT
, 
PGBITS
Ë

	)

24 
ölöe
 
	$pg_ofs
 (c⁄° *
va
) {

25  (
uöçå_t
Ë
va
 & 
PGMASK
;

26 
	}
}

29 
ölöe
 
uöçå_t
 
	$pg_no
 (c⁄° *
va
) {

30  (
uöçå_t
Ë
va
 >> 
PGBITS
;

31 
	}
}

34 
ölöe
 *
	$pg_round_up
 (c⁄° *
va
) {

35  (*Ë(((
uöçå_t
Ë
va
 + 
PGSIZE
 - 1Ë& ~
PGMASK
);

36 
	}
}

39 
ölöe
 *
	$pg_round_down
 (c⁄° *
va
) {

40  (*Ë((
uöçå_t
Ë
va
 & ~
PGMASK
);

41 
	}
}

53 
	#PHYS_BASE
 ((*Ë
LOADER_PHYS_BASE
)

	)

56 
ölöe
 
boﬁ


57 
	$is_u£r_vaddr
 (c⁄° *
vaddr
)

59  
vaddr
 < 
PHYS_BASE
;

60 
	}
}

63 
ölöe
 
boﬁ


64 
	$is_kî√l_vaddr
 (c⁄° *
vaddr
)

66  
vaddr
 >
PHYS_BASE
;

67 
	}
}

71 
ölöe
 *

72 
	$±ov
 (
uöçå_t
 
∑ddr
)

74 
	`ASSERT
 ((*Ë
∑ddr
 < 
PHYS_BASE
);

76  (*Ë(
∑ddr
 + 
PHYS_BASE
);

77 
	}
}

81 
ölöe
 
uöçå_t


82 
	$vt›
 (c⁄° *
vaddr
)

84 
	`ASSERT
 (
	`is_kî√l_vaddr
 (
vaddr
));

86  (
uöçå_t
Ë
vaddr
 - (uöçå_tË
PHYS_BASE
;

87 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/list.c

1 
	~<li°.h
>

3 #i‚de‡
ASSERT


4 
	#ASSERT
(
COND
Ë;

	)

37 
boﬁ
 
is_s‹ãd
 (
li°_ñem
 *
a
, li°_ñem *
b
,

38 
li°_Àss_func
 *
Àss
, *
aux
);

41 
ölöe
 
boﬁ


42 
	$is_hód
 (
li°_ñem
 *
ñem
)

44  
ñem
 !
NULL
 &&ÉÀm->
¥ev
 =NULL &&ÉÀm->
√xt
 != NULL;

45 
	}
}

49 
ölöe
 
boﬁ


50 
	$is_öãri‹
 (
li°_ñem
 *
ñem
)

52  
ñem
 !
NULL
 &&ÉÀm->
¥ev
 !NULL &&ÉÀm->
√xt
 != NULL;

53 
	}
}

56 
ölöe
 
boﬁ


57 
	$is_èû
 (
li°_ñem
 *
ñem
)

59  
ñem
 !
NULL
 &&ÉÀm->
¥ev
 !NULL &&ÉÀm->
√xt
 == NULL;

60 
	}
}

64 
	$li°_öô
 (
li°
 *list)

66 
	`ASSERT
 (
li°
 !
NULL
);

67 
li°
->
hód
.
¥ev
 = 
NULL
;

68 
li°
->
hód
.
√xt
 = &li°->
èû
;

69 
li°
->
èû
.
¥ev
 = &li°->
hód
;

70 
li°
->
èû
.
√xt
 = 
NULL
;

71 
	}
}

74 
li°_ñem
 *

75 
	$li°_begö
 (
li°
 *list)

77 
	`ASSERT
 (
li°
 !
NULL
);

78  
li°
->
hód
.
√xt
;

79 
	}
}

84 
li°_ñem
 *

85 
	$li°_√xt
 (
li°_ñem
 *
ñem
)

87 
	`ASSERT
 (
	`is_hód
 (
ñem
Ë|| 
	`is_öãri‹
 (elem));

88  
ñem
->
√xt
;

89 
	}
}

96 
li°_ñem
 *

97 
	$li°_íd
 (
li°
 *list)

99 
	`ASSERT
 (
li°
 !
NULL
);

100  &
li°
->
èû
;

101 
	}
}

105 
li°_ñem
 *

106 
	$li°_rbegö
 (
li°
 *list)

108 
	`ASSERT
 (
li°
 !
NULL
);

109  
li°
->
èû
.
¥ev
;

110 
	}
}

115 
li°_ñem
 *

116 
	$li°_¥ev
 (
li°_ñem
 *
ñem
)

118 
	`ASSERT
 (
	`is_öãri‹
 (
ñem
Ë|| 
	`is_èû
 (elem));

119  
ñem
->
¥ev
;

120 
	}
}

135 
li°_ñem
 *

136 
	$li°_ªnd
 (
li°
 *list)

138 
	`ASSERT
 (
li°
 !
NULL
);

139  &
li°
->
hód
;

140 
	}
}

153 
li°_ñem
 *

154 
	$li°_hód
 (
li°
 *list)

156 
	`ASSERT
 (
li°
 !
NULL
);

157  &
li°
->
hód
;

158 
	}
}

161 
li°_ñem
 *

162 
	$li°_èû
 (
li°
 *list)

164 
	`ASSERT
 (
li°
 !
NULL
);

165  &
li°
->
èû
;

166 
	}
}

172 
	$li°_ö£π
 (
li°_ñem
 *
bef‹e
, li°_ñem *
ñem
)

174 
	`ASSERT
 (
	`is_öãri‹
 (
bef‹e
Ë|| 
	`is_èû
 (before));

175 
	`ASSERT
 (
ñem
 !
NULL
);

177 if(
ñem
->
¥ev
 !
NULL
)

178 
ñem
->
¥ev
->
√xt
 =Élem->next;

179 if(
ñem
->
√xt
 !
NULL
)

180 
ñem
->
√xt
->
¥ev
 =Élem->prev;

182 
ñem
->
¥ev
 = 
bef‹e
->prev;

183 
ñem
->
√xt
 = 
bef‹e
;

184 
bef‹e
->
¥ev
->
√xt
 = 
ñem
;

185 
bef‹e
->
¥ev
 = 
ñem
;

186 
	}
}

192 
	$li°_•li˚
 (
li°_ñem
 *
bef‹e
,

193 
li°_ñem
 *
fú°
, li°_ñem *
œ°
)

195 
	`ASSERT
 (
	`is_öãri‹
 (
bef‹e
Ë|| 
	`is_èû
 (before));

196 i‡(
fú°
 =
œ°
)

198 
œ°
 = 
	`li°_¥ev
 (last);

200 
	`ASSERT
 (
	`is_öãri‹
 (
fú°
));

201 
	`ASSERT
 (
	`is_öãri‹
 (
œ°
));

204 
fú°
->
¥ev
->
√xt
 = 
œ°
->next;

205 
œ°
->
√xt
->
¥ev
 = 
fú°
->prev;

208 
fú°
->
¥ev
 = 
bef‹e
->prev;

209 
œ°
->
√xt
 = 
bef‹e
;

210 
bef‹e
->
¥ev
->
√xt
 = 
fú°
;

211 
bef‹e
->
¥ev
 = 
œ°
;

212 
	}
}

217 
	$li°_push_‰⁄t
 (
li°
 *li°, 
li°_ñem
 *
ñem
)

219 
	`li°_ö£π
 (
	`li°_begö
 (
li°
), 
ñem
);

220 
	}
}

225 
	$li°_push_back
 (
li°
 *li°, 
li°_ñem
 *
ñem
)

227 
	`li°_ö£π
 (
	`li°_íd
 (
li°
), 
ñem
);

228 
	}
}

256 
li°_ñem
 *

257 
	$li°_ªmove
 (
li°_ñem
 *
ñem
)

259 
	`ASSERT
 (
	`is_öãri‹
 (
ñem
));

260 
ñem
->
¥ev
->
√xt
 =Élem->next;

261 
ñem
->
√xt
->
¥ev
 =Élem->prev;

262  
ñem
->
√xt
;

263 
	}
}

267 
li°_ñem
 *

268 
	$li°_p›_‰⁄t
 (
li°
 *list)

270 
li°_ñem
 *
‰⁄t
 = 
	`li°_‰⁄t
 (
li°
);

271 
	`li°_ªmove
 (
‰⁄t
);

272  
‰⁄t
;

273 
	}
}

277 
li°_ñem
 *

278 
	$li°_p›_back
 (
li°
 *list)

280 
li°_ñem
 *
back
 = 
	`li°_back
 (
li°
);

281 
	`li°_ªmove
 (
back
);

282  
back
;

283 
	}
}

287 
li°_ñem
 *

288 
	$li°_‰⁄t
 (
li°
 *list)

290 
	`ASSERT
 (!
	`li°_em±y
 (
li°
));

291  
li°
->
hód
.
√xt
;

292 
	}
}

296 
li°_ñem
 *

297 
	$li°_back
 (
li°
 *list)

299 
	`ASSERT
 (!
	`li°_em±y
 (
li°
));

300  
li°
->
èû
.
¥ev
;

301 
	}
}

305 
size_t


306 
	$li°_size
 (
li°
 *list)

308 
li°_ñem
 *
e
;

309 
size_t
 
˙t
 = 0;

311 
e
 = 
	`li°_begö
 (
li°
);É !
	`li°_íd
 (li°);É = 
	`li°_√xt
 (e))

312 
˙t
++;

313  
˙t
;

314 
	}
}

317 
boﬁ


318 
	$li°_em±y
 (
li°
 *list)

320  
	`li°_begö
 (
li°
Ë=
	`li°_íd
 (list);

321 
	}
}

325 
	$sw≠
 (
li°_ñem
 **
a
, li°_ñem **
b
)

327 
li°_ñem
 *
t
 = *
a
;

328 *
a
 = *
b
;

329 *
b
 = 
t
;

330 
	}
}

334 
	$li°_ªvî£
 (
li°
 *list)

336 i‡(!
	`li°_em±y
 (
li°
))

338 
li°_ñem
 *
e
;

340 
e
 = 
	`li°_begö
 (
li°
);É !
	`li°_íd
 (li°);É =É->
¥ev
)

341 
	`sw≠
 (&
e
->
¥ev
, &e->
√xt
);

342 
	`sw≠
 (&
li°
->
hód
.
√xt
, &li°->
èû
.
¥ev
);

343 
	`sw≠
 (&
li°
->
hód
.
√xt
->
¥ev
, &li°->
èû
.prev->next);

345 
	}
}

349 
boﬁ


350 
	$is_s‹ãd
 (
li°_ñem
 *
a
, li°_ñem *
b
,

351 
li°_Àss_func
 *
Àss
, *
aux
)

353 i‡(
a
 !
b
)

354 (
a
 = 
	`li°_√xt
 (a)Ë!
b
)

355 i‡(
	`Àss
 (
a
, 
	`li°_¥ev
 (a), 
aux
))

356  
Ál£
;

357  
åue
;

358 
	}
}

365 
li°_ñem
 *

366 
	$föd_íd_of_run
 (
li°_ñem
 *
a
, li°_ñem *
b
,

367 
li°_Àss_func
 *
Àss
, *
aux
)

369 
	`ASSERT
 (
a
 !
NULL
);

370 
	`ASSERT
 (
b
 !
NULL
);

371 
	`ASSERT
 (
Àss
 !
NULL
);

372 
	`ASSERT
 (
a
 !
b
);

376 
a
 = 
	`li°_√xt
 (a);

378 
a
 !
b
 && !
	`Àss
 (a, 
	`li°_¥ev
 (a), 
aux
));

379  
a
;

380 
	}
}

388 
	$ö∂a˚_mîge
 (
li°_ñem
 *
a0
, li°_ñem *
a1b0
,

389 
li°_ñem
 *
b1
,

390 
li°_Àss_func
 *
Àss
, *
aux
)

392 
	`ASSERT
 (
a0
 !
NULL
);

393 
	`ASSERT
 (
a1b0
 !
NULL
);

394 
	`ASSERT
 (
b1
 !
NULL
);

395 
	`ASSERT
 (
Àss
 !
NULL
);

396 
	`ASSERT
 (
	`is_s‹ãd
 (
a0
, 
a1b0
, 
Àss
, 
aux
));

397 
	`ASSERT
 (
	`is_s‹ãd
 (
a1b0
, 
b1
, 
Àss
, 
aux
));

399 
a0
 !
a1b0
 &&á1b0 !
b1
)

400 i‡(!
	`Àss
 (
a1b0
, 
a0
, 
aux
))

401 
a0
 = 
	`li°_√xt
 (a0);

404 
a1b0
 = 
	`li°_√xt
 (a1b0);

405 
	`li°_•li˚
 (
a0
, 
	`li°_¥ev
 (
a1b0
),á1b0);

407 
	}
}

413 
	$li°_s‹t
 (
li°
 *li°, 
li°_Àss_func
 *
Àss
, *
aux
)

415 
size_t
 
ouçut_run_˙t
;

417 
	`ASSERT
 (
li°
 !
NULL
);

418 
	`ASSERT
 (
Àss
 !
NULL
);

424 
li°_ñem
 *
a0
;

425 
li°_ñem
 *
a1b0
;

426 
li°_ñem
 *
b1
;

428 
ouçut_run_˙t
 = 0;

429 
a0
 = 
	`li°_begö
 (
li°
);á0 !
	`li°_íd
 (li°);á0 = 
b1
)

432 
ouçut_run_˙t
++;

436 
a1b0
 = 
	`föd_íd_of_run
 (
a0
, 
	`li°_íd
 (
li°
), 
Àss
, 
aux
);

437 i‡(
a1b0
 =
	`li°_íd
 (
li°
))

439 
b1
 = 
	`föd_íd_of_run
 (
a1b0
, 
	`li°_íd
 (
li°
), 
Àss
, 
aux
);

442 
	`ö∂a˚_mîge
 (
a0
, 
a1b0
, 
b1
, 
Àss
, 
aux
);

445 
ouçut_run_˙t
 > 1);

447 
	`ASSERT
 (
	`is_s‹ãd
 (
	`li°_begö
 (
li°
), 
	`li°_íd
 (li°), 
Àss
, 
aux
));

448 
	}
}

454 
	$li°_ö£π_‹dîed
 (
li°
 *li°, 
li°_ñem
 *
ñem
,

455 
li°_Àss_func
 *
Àss
, *
aux
)

457 
li°_ñem
 *
e
;

459 
	`ASSERT
 (
li°
 !
NULL
);

460 
	`ASSERT
 (
ñem
 !
NULL
);

461 
	`ASSERT
 (
Àss
 !
NULL
);

463 
e
 = 
	`li°_begö
 (
li°
);É !
	`li°_íd
 (li°);É = 
	`li°_√xt
 (e))

464 i‡(
	`Àss
 (
ñem
, 
e
, 
aux
))

466  
	`li°_ö£π
 (
e
, 
ñem
);

467 
	}
}

474 
	$li°_unique
 (
li°
 *li°, li° *
du∂iˇãs
,

475 
li°_Àss_func
 *
Àss
, *
aux
)

477 
li°_ñem
 *
ñem
, *
√xt
;

479 
	`ASSERT
 (
li°
 !
NULL
);

480 
	`ASSERT
 (
Àss
 !
NULL
);

481 i‡(
	`li°_em±y
 (
li°
))

484 
ñem
 = 
	`li°_begö
 (
li°
);

485 (
√xt
 = 
	`li°_√xt
 (
ñem
)Ë!
	`li°_íd
 (
li°
))

486 i‡(!
	`Àss
 (
ñem
, 
√xt
, 
aux
) && !less (next,Élem,áux))

488 
	`li°_ªmove
 (
√xt
);

489 i‡(
du∂iˇãs
 !
NULL
)

490 
	`li°_push_back
 (
du∂iˇãs
, 
√xt
);

493 
ñem
 = 
√xt
;

494 
	}
}

500 
li°_ñem
 *

501 
	$li°_max
 (
li°
 *li°, 
li°_Àss_func
 *
Àss
, *
aux
)

503 
li°_ñem
 *
max
 = 
	`li°_begö
 (
li°
);

504 i‡(
max
 !
	`li°_íd
 (
li°
))

506 
li°_ñem
 *
e
;

508 
e
 = 
	`li°_√xt
 (
max
);É !
	`li°_íd
 (
li°
);É =Üist_next (e))

509 i‡(
	`Àss
 (
max
, 
e
, 
aux
))

510 
max
 = 
e
;

512  
max
;

513 
	}
}

519 
li°_ñem
 *

520 
	$li°_mö
 (
li°
 *li°, 
li°_Àss_func
 *
Àss
, *
aux
)

522 
li°_ñem
 *
mö
 = 
	`li°_begö
 (
li°
);

523 i‡(
mö
 !
	`li°_íd
 (
li°
))

525 
li°_ñem
 *
e
;

527 
e
 = 
	`li°_√xt
 (
mö
);É !
	`li°_íd
 (
li°
);É =Üist_next (e))

528 i‡(
	`Àss
 (
e
, 
mö
, 
aux
))

529 
mö
 = 
e
;

531  
mö
;

532 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/mem/malloc.c

1 
	~<mem/mÆloc.h
>

2 
	~<debug.h
>

3 
	~<li°.h
>

4 
	~<round.h
>

5 
	~<°döt.h
>

6 
	~<°rög.h
>

7 
	~<mem/∑Œoc.h
>

8 
	~<synch.h
>

9 
	~<vaddr.h
>

37 
	sdesc


39 
size_t
 
	mblock_size
;

40 
size_t
 
	mblocks_≥r_¨ía
;

41 
li°
 
	m‰ì_li°
;

42 
lock
 
	mlock
;

46 
	#ARENA_MAGIC
 0x9a548ìd

	)

49 
	s¨ía


51 
	mmagic
;

52 
desc
 *
	mdesc
;

53 
size_t
 
	m‰ì_˙t
;

57 
	sblock


59 
li°_ñem
 
	m‰ì_ñem
;

63 
desc
 
	gdescs
[10];

64 
size_t
 
	gdesc_˙t
;

66 
¨ía
 *
block_to_¨ía
 (
block
 *);

67 
block
 *
¨ía_to_block
 (
¨ía
 *, 
size_t
 
idx
);

71 
	$mÆloc_öô
 ()

73 
size_t
 
block_size
;

75 
block_size
 = 16; block_sizê< 
PGSIZE
 / 2; block_size *= 2)

77 
desc
 *
d
 = &
descs
[
desc_˙t
++];

79 
d
->
block_size
 = block_size;

80 
d
->
blocks_≥r_¨ía
 = (
PGSIZE
 -  (
¨ía
)Ë/ 
block_size
;

81 
	`li°_öô
 (&
d
->
‰ì_li°
);

82 
	`lock_öô
 (&
d
->
lock
);

84 
	}
}

89 
	$mÆloc
 (
size_t
 
size
)

91 
desc
 *
d
;

92 
block
 *
b
;

93 
¨ía
 *
a
;

96 i‡(
size
 == 0)

97  
NULL
;

101 
d
 = 
descs
; d < desc†+ 
desc_˙t
; d++)

102 i‡(
d
->
block_size
 >
size
)

104 i‡(
d
 =
descs
 + 
desc_˙t
)

108 
size_t
 
∑ge_˙t
 = 
	`DIV_ROUND_UP
 (
size
 +  *
a
, 
PGSIZE
);

109 
a
 = 
	`∑Œoc_gë_mu…ùÀ
 (
∑ge_˙t
);

110 i‡(
a
 =
NULL
)

111  
NULL
;

115 
a
->
magic
 = 
ARENA_MAGIC
;

116 
a
->
desc
 = 
NULL
;

117 
a
->
‰ì_˙t
 = 
∑ge_˙t
;

118  
a
 + 1;

121 
	`lock_acquúe
 (&
d
->
lock
);

124 i‡(
	`li°_em±y
 (&
d
->
‰ì_li°
))

126 
size_t
 
i
;

129 
a
 = 
	`∑Œoc_gë_∑ge
 ();

130 i‡(
a
 =
NULL
)

132 
	`lock_ªÀa£
 (&
d
->
lock
);

133  
NULL
;

137 
a
->
magic
 = 
ARENA_MAGIC
;

138 
a
->
desc
 = 
d
;

139 
a
->
‰ì_˙t
 = 
d
->
blocks_≥r_¨ía
;

140 
i
 = 0; i < 
d
->
blocks_≥r_¨ía
; i++)

142 
block
 *
b
 = 
	`¨ía_to_block
 (
a
, 
i
);

143 
	`li°_push_back
 (&
d
->
‰ì_li°
, &
b
->
‰ì_ñem
);

148 
b
 = 
	`li°_íåy
 (
	`li°_p›_‰⁄t
 (&
d
->
‰ì_li°
), 
block
, 
‰ì_ñem
);

149 
a
 = 
	`block_to_¨ía
 (
b
);

150 
a
->
‰ì_˙t
--;

151 
	`lock_ªÀa£
 (&
d
->
lock
);

152  
b
;

153 
	}
}

158 
	$ˇŒoc
 (
size_t
 
a
, size_à
b
)

160 *
p
;

161 
size_t
 
size
;

164 
size
 = 
a
 * 
b
;

165 i‡(
size
 < 
a
 || sizê< 
b
)

166  
NULL
;

169 
p
 = 
	`mÆloc
 (
size
);

170 i‡(
p
 !
NULL
)

171 
	`mem£t
 (
p
, 0, 
size
);

173  
p
;

174 
	}
}

177 
size_t


178 
	$block_size
 (*
block
)

180 
block
 *
b
 = block;

181 
¨ía
 *
a
 = 
	`block_to_¨ía
 (
b
);

182 
desc
 *
d
 = 
a
->desc;

184  
d
 !
NULL
 ? d->
block_size
 : 
PGSIZE
 * 
a
->
‰ì_˙t
 - 
	`pg_ofs
 (
block
);

185 
	}
}

194 
	$ªÆloc
 (*
ﬁd_block
, 
size_t
 
√w_size
)

196 i‡(
√w_size
 == 0)

198 
	`‰ì
 (
ﬁd_block
);

199  
NULL
;

203 *
√w_block
 = 
	`mÆloc
 (
√w_size
);

204 i‡(
ﬁd_block
 !
NULL
 && 
√w_block
 != NULL)

206 
size_t
 
ﬁd_size
 = 
	`block_size
 (
ﬁd_block
);

207 
size_t
 
mö_size
 = 
√w_size
 < 
ﬁd_size
 ?Çew_size : old_size;

208 
	`mem˝y
 (
√w_block
, 
ﬁd_block
, 
mö_size
);

209 
	`‰ì
 (
ﬁd_block
);

211  
√w_block
;

213 
	}
}

218 
	$‰ì
 (*
p
)

220 i‡(
p
 !
NULL
)

222 
block
 *
b
 = 
p
;

223 
¨ía
 *
a
 = 
	`block_to_¨ía
 (
b
);

224 
desc
 *
d
 = 
a
->desc;

226 i‡(
d
 !
NULL
)

230 #i‚de‡
NDEBUG


232 
	`mem£t
 (
b
, 0xcc, 
d
->
block_size
);

235 
	`lock_acquúe
 (&
d
->
lock
);

238 
	`li°_push_‰⁄t
 (&
d
->
‰ì_li°
, &
b
->
‰ì_ñem
);

241 i‡(++
a
->
‰ì_˙t
 >
d
->
blocks_≥r_¨ía
)

243 
size_t
 
i
;

246 
i
 = 0; i < 
d
->
blocks_≥r_¨ía
; i++)

248 
block
 *
b
 = 
	`¨ía_to_block
 (
a
, 
i
);

249 
	`li°_ªmove
 (&
b
->
‰ì_ñem
);

251 
	`∑Œoc_‰ì_∑ge
 (
a
);

254 
	`lock_ªÀa£
 (&
d
->
lock
);

259 
	`∑Œoc_‰ì_mu…ùÀ
 (
a
,á->
‰ì_˙t
);

263 
	}
}

266 
¨ía
 *

267 
	$block_to_¨ía
 (
block
 *
b
)

269 
¨ía
 *
a
 = 
	`pg_round_down
 (
b
);

279  
a
;

280 
	}
}

283 
block
 *

284 
	$¨ía_to_block
 (
¨ía
 *
a
, 
size_t
 
idx
)

289  (
block
 *Ë((
uöt8_t
 *Ë
a


290 +  *
a


291 + 
idx
 * 
a
->
desc
->
block_size
);

292 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/mem/mm.c

1 
	~<mem/mm.h
>

3 
gëMemSize
();

4 
nGëMemSize
();

6 
	gMEM_SIZE
;

8 
	$dëe˘_mem
()

10 
MEM_SIZE
 = 
	`nGëMemSize
();

12 
	}
}

14 
	$nGëMemSize
()

16 *
pAddr
 = (*)0x20000;

17 
tmp
;

19 
pAddr
 += (4*1024*1024);

20 
tmp
 = *
pAddr
;

21 *
pAddr
 = 0x12345678;

22 if(*
pAddr
 != 0x12345678) {

23 
pAddr
 -= (4*1024*1024);

25 
pAddr
 += (4*1024);

26 
tmp
 = *
pAddr
;

27 *
pAddr
 = 0x87654321;

28 if(*
pAddr
 != 0x87654321)

30 *
pAddr
 = 
tmp
;

34 *
pAddr
 = 
tmp
;

37  ()
pAddr
;

38 
	}
}

40 
	$mem_size
()

42  
MEM_SIZE
;

43 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/mem/paging.c

1 
	~<devi˚/io.h
>

2 
	~<mem/mm.h
>

3 
	~<mem/∑gög.h
>

4 
	~<devi˚/c⁄sﬁe.h
>

5 
	~<¥oc/¥oc.h
>

6 
	~<öãºu±.h
>

7 
	~<mem/∑Œoc.h
>

8 
	~<ssulib.h
>

10 
uöt32_t
 *
	gPID0_PAGE_DIR
;

12 
öå_h™dÀr_func
 
	gpf_h™dÀr
;

14 
uöt32_t
 
	$sˇÀ_up
(
uöt32_t
 
ba£
, uöt32_à
size
)

16 
uöt32_t
 
mask
 = ~(
size
-1);

17 if(
ba£
 & 
mask
 != 0)

18 
ba£
 = ba£ & 
mask
 + 
size
;

19  
ba£
;

20 
	}
}

22 
uöt32_t
 
	$sˇÀ_down
(
uöt32_t
 
ba£
, uöt32_à
size
)

24 
uöt32_t
 
mask
 = ~(
size
-1);

25 if(
ba£
 & 
mask
 != 0)

26 
ba£
 = ba£ & 
mask
 - 
size
;

27  
ba£
;

28 
	}
}

30 
	$öô_∑gög
()

32 
uöt32_t
 *
∑ge_dú
 = 
	`∑Œoc_gë_∑ge
();

33 
uöt32_t
 *
∑ge_tbl
 = 
	`∑Œoc_gë_∑ge
();

34 
PID0_PAGE_DIR
 = 
∑ge_dú
;

36 
NUM_PT
, 
NUM_PE
;

37 
uöt32_t
 
¸0_∑gög_£t
;

38 
i
;

40 
NUM_PE
 = 
	`mem_size
(Ë/ 
PAGE_SIZE
;

41 
NUM_PT
 = 
NUM_PE
 / 1024;

43 
	`¥ötk
("-PE=%d, PT=%d\n", 
NUM_PE
, 
NUM_PT
);

44 
	`¥ötk
("-∑gêdú=%xÖagêtbl=%x\n", 
∑ge_dú
, 
∑ge_tbl
);

46 
∑ge_dú
[0] = (
uöt32_t
)
∑ge_tbl
 | 
PAGE_FLAG_RW
 | 
PAGE_FLAG_PRESENT
;

48 
NUM_PE
 = 
KERNEL_HEAP
 / 
PAGE_SIZE
;

50  
i
 = 0; i < 
NUM_PE
; i++ ) {

51 
∑ge_tbl
[
i
] = (
PAGE_SIZE
 * i)

52 | 
PAGE_FLAG_RW


53 | 
PAGE_FLAG_PRESENT
;

56 
¸0_∑gög_£t
 = 
	`ªad_¸0
(Ë| 
CR0_FLAG_PG
;

58 
	`wrôe_¸3
–()
∑ge_dú
 );

59 
	`wrôe_¸0
–
¸0_∑gög_£t
 );

61 
	`ªg_h™dÀr
(14, 
pf_h™dÀr
);

62 
	}
}

64 
	$mem˝y_h¨d
(* 
‰om
, * 
to
, 
uöt32_t
 
Àn
)

66 
	`wrôe_¸0
–
	`ªad_¸0
(Ë& ~
CR0_FLAG_PG
);

68 
	`mem˝y
(
‰om
, 
to
, 
Àn
);

70 
	`wrôe_¸0
–
	`ªad_¸0
(Ë| 
CR0_FLAG_PG
);

71 
	}
}

73 
uöt32_t
* 
	$gë_cur_pd
()

75  (
uöt32_t
*)
	`ªad_¸3
();

76 
	}
}

78 
uöt32_t
 
	$pde_idx_addr
(
uöt32_t
* 
addr
)

80 
uöt32_t
 
ªt
 = ((uöt32_t)
addr
 & 
PAGE_MASK_PDE
Ë>> 
PAGE_OFFSET_PDE
;

81  
ªt
;

82 
	}
}

84 
uöt32_t
 
	$±e_idx_addr
(
uöt32_t
* 
addr
)

86 
uöt32_t
 
ªt
 = ((uöt32_t)
addr
 & 
PAGE_MASK_PTE
Ë>> 
PAGE_OFFSET_PTE
;

87  
ªt
;

88 
	}
}

90 
uöt32_t
* 
	$±_pde
(
uöt32_t
 
pde
)

92 
uöt32_t
 * 
ªt
 = (uöt32_t*)(
pde
 & 
PAGE_MASK_BASE
);

93  
ªt
;

94 
	}
}

96 
uöt32_t
* 
	$±_addr
(
uöt32_t
* 
addr
)

98 
uöt32_t
 
idx
 = 
	`pde_idx_addr
(
addr
);

99 
uöt32_t
* 
pd
 = 
	`gë_cur_pd
();

100  
	`±_pde
(
pd
[
idx
]);

101 
	}
}

103 
uöt32_t
* 
	$pg_addr
(
uöt32_t
* 
addr
)

105 
uöt32_t
 *
±
 = 
	`±_addr
(
addr
);

106 
uöt32_t
 
idx
 = 
	`±e_idx_addr
(
addr
);

107 
uöt32_t
 *
ªt
 = (uöt32_t*)(
±
[
idx
] & 
PAGE_MASK_BASE
);

108  
ªt
;

109 
	}
}

111 
uöt32_t
 
	$±_c›y
(
uöt32_t
 *
pd
, uöt32_à*
de°_pd
, uöt32_à
idx
, uöt32_t* 
°¨t
, uöt32_t* 
íd
, 
boﬁ
 
sh¨e
)

113 
uöt32_t
 *
±
 = 
	`±_pde
(
pd
[
idx
]);

114 
uöt32_t
 *
√w_±
;

115 
uöt32_t
 *
±e_s
 = 
°¨t
;

116 
uöt32_t
 *
±e_e
 = 
íd
;

117 
uöt32_t
 
s
, 
e
, 
i
;

118 
uöt32_t
 
size
 = 
PAGE_SIZE
;

120 
√w_±
 = 
	`∑Œoc_gë_∑ge
();

121 
de°_pd
[
idx
] = (
uöt32_t
)
√w_±
 | (
pd
[idx] & ~
PAGE_MASK_BASE
 & ~
PAGE_FLAG_ACCESS
);

123 if(
°¨t
 =
íd
)

126 
±e_s
 = (
uöt32_t
*)
	`sˇÀ_down
((uöt32_tÌã_s, 
size
);

127 
±e_e
 = (
uöt32_t
*)
	`sˇÀ_up
((uöt32_tÌã_e, 
size
);

129 
s
 = 
	`±e_idx_addr
(
±e_s
);

130 
e
 = 
	`±e_idx_addr
(
±e_e
);

132 if(
e
 =0 && 
°¨t
 !
íd
)

133 
e
 = 
PAGE_TBL_SIZE
/(
uöt32_t
);

135 
i
 = 
s
; i<
e
; i++)

137 if(
±
[
i
] & 
PAGE_FLAG_PRESENT
)

139 if(!
sh¨e
)

141 
uöt32_t
* 
pg
 = 
	`∑Œoc_gë_∑ge
();

142 
√w_±
[
i
] = (
uöt32_t
)
pg
 | (
±
[i] & ~
PAGE_MASK_BASE
 & ~
PAGE_FLAG_ACCESS
);

143 
	`mem˝y_h¨d
((*)(
±
[
i
] & 
PAGE_MASK_BASE
), (*)
pg
, 
PAGE_SIZE
);

146 
√w_±
[
i
] = 
±
[i];

149  
de°_pd
[
idx
];

150 
	}
}

152 
	$pd_c›y
(
uöt32_t
* 
‰om
, uöt32_t* 
to
, uöt32_t* 
°¨t
, uöt32_t* 
íd
, 
boﬁ
 
sh¨e
)

154 
uöt32_t
 *
pde_s
 = 
°¨t
;

155 
uöt32_t
 *
pde_e
 = 
íd
;

156 
uöt32_t
 
s
, 
e
, 
i
;

157 
uöt32_t
 
size
 = 
PAGE_SIZE
 * 
PAGE_TBL_SIZE
/(uint32_t);

159 
pde_s
 = (
uöt32_t
*)
	`sˇÀ_down
((uöt32_tÌde_s, 
size
);

160 
pde_e
 = (
uöt32_t
*)
	`sˇÀ_up
((uöt32_tÌde_e, 
size
);

162 
s
 = 
	`pde_idx_addr
(
pde_s
);

163 
e
 = 
	`pde_idx_addr
(
pde_e
);

165 
i
 = 
s
; i<
e
; i++)

167 if(
‰om
[
i
] & 
PAGE_FLAG_PRESENT
)

168 
	`±_c›y
(
‰om
, 
to
, 
i
, 
°¨t
, 
íd
, 
sh¨e
);

170 
	}
}

172 
uöt32_t
* 
	$pd_¸óã
 (
pid_t
 
pid
)

174 
uöt32_t
 *
pd
 = 
	`∑Œoc_gë_∑ge
();

175 
	`pd_c›y
(
PID0_PAGE_DIR
, 
pd
, (
uöt32_t
*)0, (uöt32_t*)
KERNEL_HEAP
, 
åue
);

176  
pd
;

177 
	}
}

179 
	$pf_h™dÀr
(
öå_‰ame
 *
i‰ame
)

181 *
Áu…_addr
;

183 
	`asm
 ("mov»%%¸2, %0" : "Ù" (
Áu…_addr
));

185 
	`¥ötk
("PagêÁu… : %X\n",
Áu…_addr
);

188 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/mem/palloc.c

1 
	~<mem/∑Œoc.h
>

2 
	~<bôm≠.h
>

3 
	~<ty≥.h
>

4 
	~<round.h
>

5 
	~<mem/mm.h
>

6 
	~<synch.h
>

7 
	~<devi˚/c⁄sﬁe.h
>

8 
	~<mem/∑gög.h
>

10 
	spoﬁ


12 
lock
 
	mlock
;

13 
bôm≠
 *
	mu£d_m≠
;

14 
uöt32_t
 *
	mba£
;

17 
poﬁ
 
	gmem_poﬁ
;

19 
öô_poﬁ
 (
poﬁ
 *, *
ba£
, 
size_t
 
∑ge_˙t
,

20 c⁄° *
«me
);

22 
	$öô_∑Œoc
 ()

24 
uöt32_t
 *
‰ì_°¨t
 = (uöt32_t*)
KERNEL_ADDR
;

25 
uöt32_t
 *
‰ì_íd
 = (uöt32_t*)
	`mem_size
();

26 
size_t
 
‰ì_∑ges
 = (()
‰ì_íd
 - ()
‰ì_°¨t
Ë/ 
PAGE_SIZE
;

28 
	`öô_poﬁ
 (&
mem_poﬁ
, 
‰ì_°¨t
, 
‰ì_∑ges
, "memoryÖool");

29 
	}
}

31 
uöt32_t
 * 
	$∑Œoc_gë_mu…ùÀ
 (
size_t
 
∑ge_˙t
)

33 
poﬁ
 *poﬁ = &
mem_poﬁ
;

34 *
∑ges
;

35 
size_t
 
∑ge_idx
;

37 i‡(
∑ge_˙t
 == 0)

38  
NULL
;

40 
	`lock_acquúe
 (&
poﬁ
->
lock
);

41 
∑ge_idx
 = 
	`bôm≠_sˇn_™d_Êù
 (
poﬁ
->
u£d_m≠
, 0, 
∑ge_˙t
, 
Ál£
);

42 
	`lock_ªÀa£
 (&
poﬁ
->
lock
);

44 i‡(
∑ge_idx
 !
BITMAP_ERROR
)

45 
∑ges
 = 
poﬁ
->
ba£
 + 
PAGE_SIZE
 * 
∑ge_idx
/(
uöt32_t
);

47 
∑ges
 = 
NULL
;

49 i‡(
∑ges
 !
NULL
)

51 
	`mem£t
 (
∑ges
, 0, 
PAGE_SIZE
 * 
∑ge_˙t
);

54  (
uöt32_t
*)
∑ges
;

55 
	}
}

57 
uöt32_t
 * 
	$∑Œoc_gë_∑ge
 ()

59  
	`∑Œoc_gë_mu…ùÀ
 (1);

60 
	}
}

62 
	$∑Œoc_‰ì_mu…ùÀ
 (*
∑ges
, 
size_t
 
∑ge_˙t
)

64 
poﬁ
 *pool;

65 
size_t
 
∑ge_idx
;

67 i‡(
∑ges
 =
NULL
 || 
∑ge_˙t
 == 0)

70 
poﬁ
 = &
mem_poﬁ
;

72 
∑ge_idx
 = 
	`pg_no
 (
∑ges
Ë-Ög_nÿ(
poﬁ
->
ba£
);

74 
	`bôm≠_£t_mu…ùÀ
 (
poﬁ
->
u£d_m≠
, 
∑ge_idx
, 
∑ge_˙t
, 
Ál£
);

75 
	}
}

77 
	$∑Œoc_‰ì_∑ge
 (*
∑ge
)

79 
	`∑Œoc_‰ì_mu…ùÀ
 (
∑ge
, 1);

80 
	}
}

82 
	$öô_poﬁ
 (
poﬁ
 *
p
, *
ba£
, 
size_t
 
∑ge_˙t
, c⁄° *
«me
)

84 
size_t
 
bm_∑ges
 = 
	`DIV_ROUND_UP
 (
	`bôm≠_buf_size
 (
∑ge_˙t
), 
PAGE_SIZE
);

85 i‡(
bm_∑ges
 > 
∑ge_˙t
)

86 
	`¥ötk
("NŸÉnough mem‹y i¿%†f‹ bôm≠.", 
«me
);

87 
∑ge_˙t
 -
bm_∑ges
;

89 
	`¥ötk
 ("%uÖage†avaûabÀ i¿%s.\n", 
∑ge_˙t
, 
«me
);

91 
	`lock_öô
 (&
p
->
lock
);

92 
p
->
u£d_m≠
 = 
	`bôm≠_¸óã_ö_buf
 (
∑ge_˙t
, 
ba£
, 
bm_∑ges
 * 
PAGE_SIZE
);

93 
p
->
ba£
 = ba£ + 
bm_∑ges
 * 
PAGE_SIZE
;

94 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/proc/proc.c

1 
	~<li°.h
>

2 
	~<¥oc/sched.h
>

3 
	~<mem/mÆloc.h
>

4 
	~<¥oc/¥oc.h
>

5 
	~<ssulib.h
>

6 
	~<öãºu±.h
>

7 
	~<¥oc/sched.h
>

8 
	~<sysˇŒ.h
>

9 
	~<mem/∑Œoc.h
>

10 
	~<devi˚/c⁄sﬁe.h
>

13 
	#STACK_SIZE
 512

	)

15 
li°
 
	g∂i°
;

16 
li°
 
	gÀvñ_que
[
QUE_LV_MAX
];

17 
li°
 
	g¶i°
;

18 
li°
 
	gdli°
;

19 
¥o˚ss
 
	g¥ocs
[
PROC_NUM_MAX
];

20 
¥o˚ss
 *
	gcur_¥o˚ss
;

21 
¥o˚ss
 *
	gidÀ_¥o˚ss
;

22 
	gpid_num_max
;

23 
uöt32_t
 
	g¥o˚ss_°ack_ofs
;

24 
	glock_pid_sim∂e
;

25 
	gœãly_pid
;

27 
boﬁ
 
m‹e_¥io
(c⁄° 
li°_ñem
 *
a
, c⁄° li°_ñem *
b
, *
aux
);

28 
boﬁ
 
Àss_time_¶ìp
(c⁄° 
li°_ñem
 *
a
, c⁄° li°_ñem *
b
, *
aux
);

29 
pid_t
 
gëVÆidPid
(*
idx
);

30 
¥oc_°¨t
();

31 
¥oc_íd
();

34 
kî√l1_¥oc
(*
aux
);

35 
kî√l2_¥oc
(*
aux
);

36 
kî√l3_¥oc
(*
aux
);

37 
kî√l4_¥oc
(*
aux
);

38 
kî√l5_¥oc
(*
aux
);

39 
kî√l6_¥oc
(*
aux
);

40 
kî√l7_¥oc
(*
aux
);

41 
kî√l8_¥oc
(*
aux
);

42 
kî√l9_¥oc
(*
aux
);

43 
kî√l10_¥oc
(*
aux
);

45 
	$öô_¥oc
()

47 
i
, 
j
;

48 
¥o˚ss_°ack_ofs
 = 
	`off£tof
 (
¥o˚ss
, 
°ack
);

50 
lock_pid_sim∂e
 = 0;

51 
œãly_pid
 = -1;

53 
	`li°_öô
(&
∂i°
);

55 
i
 = 0; i < 3 ; i++) {

56 
	`li°_öô
(&
Àvñ_que
[
i
]);

57 
	`¥ötk
("¸óãÜevñ_que[%d]", 
i
);

60 
	`li°_öô
(&
¶i°
);

61 
	`li°_öô
(&
dli°
);

63 
i
 = 0; i < 
PROC_NUM_MAX
; i++)

65 
¥ocs
[
i
].
pid
 = i;

66 
¥ocs
[
i
].
°©e
 = 
PROC_UNUSED
;

67 
¥ocs
[
i
].
∑ª¡
 = 
NULL
;

70 
pid_t
 
pid
 = 
	`gëVÆidPid
(&
i
);

71 
cur_¥o˚ss
 = &
¥ocs
[0];

72 
idÀ_¥o˚ss
 = &
¥ocs
[0];

74 
cur_¥o˚ss
->
pid
 =Öid;

75 
cur_¥o˚ss
->
∑ª¡
 = 
NULL
;

76 
cur_¥o˚ss
->
°©e
 = 
PROC_RUN
;

78 
cur_¥o˚ss
 -> 
ni˚
 = 0;

79 
cur_¥o˚ss
 -> 
π_¥i‹ôy
 = 0;

80 
cur_¥o˚ss
 -> 
¥i‹ôy
 = cur_¥o˚s†-> 
ni˚
 + cur_¥o˚s†-> 
π_¥i‹ôy
;

82 
cur_¥o˚ss
->
°ack
 = 0;

83 
cur_¥o˚ss
->
pd
 = (*)
	`ªad_¸3
();

84 
cur_¥o˚ss
 -> 
ñem_Æl
.
¥ev
 = 
NULL
;

85 
cur_¥o˚ss
 -> 
ñem_Æl
.
√xt
 = 
NULL
;

86 
cur_¥o˚ss
 -> 
ñem_°©
.
¥ev
 = 
NULL
;

87 
cur_¥o˚ss
 -> 
ñem_°©
.
√xt
 = 
NULL
;

89 
cur_¥o˚ss
->
que_Àvñ
 = 0 ;

90 
	`li°_push_back
(&
∂i°
, &
cur_¥o˚ss
->
ñem_Æl
);

91 
	`li°_push_back
(&
Àvñ_que
[0], &
cur_¥o˚ss
->
ñem_°©
);

93 
	}
}

95 
pid_t
 
	$gëVÆidPid
(*
idx
) {

96 
pid_t
 
pid
 = -1;

97 
i
;

99 
lock_pid_sim∂e
);

101 
lock_pid_sim∂e
++;

103 
i
 = 0; i < 
PROC_NUM_MAX
; i++)

105 
tmp
 = 
i
 + 
œãly_pid
 + 1;

106 if(
¥ocs
[
tmp
 % 
PROC_NUM_MAX
].
°©e
 =
PROC_UNUSED
) {

107 
pid
 = 
œãly_pid
 + 1;

108 *
idx
 = 
tmp
 % 
PROC_NUM_MAX
;

113 if(
pid
 != -1)

114 
œãly_pid
 = 
pid
;

116 
lock_pid_sim∂e
 = 0;

118  
pid
;

119 
	}
}

121 
pid_t
 
	$¥oc_¸óã
(
¥oc_func
 
func
, 
¥oc_›ti⁄
 *
›t
, * 
aux
)

123 
¥o˚ss
 *
p
;

124 
idx
;

125 
i
,
j
;

127 
öå_Àvñ
 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
();

129 
pid_t
 
pid
 = 
	`gëVÆidPid
(&
idx
);

130 
p
 = &
¥ocs
[
pid
];

131 
p
->
pid
 =Öid;

132 
p
->
°©e
 = 
PROC_RUN
;

134 if(
›t
 !
NULL
) {

135 
p
 -> 
ni˚
 = 
›t
 ->Çice;

136 
p
 -> 
π_¥i‹ôy
 = 
›t
 ->Ñt_priority;

139 
p
 -> 
ni˚
 = 20;

140 
p
 -> 
π_¥i‹ôy
 = ()45;

143 
p
 -> 
¥i‹ôy
 =Ö -> 
ni˚
 +Ö -> 
π_¥i‹ôy
;

144 
p
 -> 
que_Àvñ
 = 1;

145 
p
 -> 
ﬁd_¥oc
 = 0;

146 
p
->
time_u£d
 = 0;

147 
p
->
time_¶i˚
 = 0;

148 
p
->
∑ª¡
 = 
cur_¥o˚ss
;

149 
p
->
sim∂e_lock
 = 0;

150 
p
->
chûd_pid
 = -1;

151 
p
->
pd
 = 
	`pd_¸óã
’->
pid
);

154 *
t›
 = (*)
	`∑Œoc_gë_∑ge
();

155 
°ack
 = ()
t›
;

156 
t›
 = (*)
°ack
 + 
STACK_SIZE
 - 1;

158 *(--
t›
Ë()
aux
;

159 *(--
t›
Ë()
¥oc_íd
;

160 *(--
t›
Ë()
func
;

161 *(--
t›
Ë()
¥oc_°¨t
;

166 *(--
t›
Ë()((*)
°ack
 + 
STACK_SIZE
 - 1);

167 *(--
t›
) = 1;

168 *(--
t›
) = 2;

169 *(--
t›
) = 3;

170 *(--
t›
) = 4;

171 *(--
t›
) = 5;

172 *(--
t›
) = 6;

174 
p
 -> 
°ack
 = 
t›
;

175 
p
 -> 
ñem_Æl
.
¥ev
 = 
NULL
;

176 
p
 -> 
ñem_Æl
.
√xt
 = 
NULL
;

177 
p
 -> 
ñem_°©
.
¥ev
 = 
NULL
;

178 
p
 -> 
ñem_°©
.
√xt
 = 
NULL
;

180 
	`li°_push_back
(&
∂i°
, &
p
->
ñem_Æl
);

181 
	`li°_push_back
(&
Àvñ_que
[
p
->
que_Àvñ
], &p->
ñem_°©
);

184 
	`öå_£t_Àvñ
 (
ﬁd_Àvñ
);

185  
p
->
pid
;

186 
	}
}

188 * 
	$gëEIP
()

190  
	`__buûtö_ªtu∫_addªss
(0);

191 
	}
}

193 
	$¥oc_°¨t
()

195 
	`öå_íabÀ
 ();

197 
	}
}

199 
	$¥oc_‰ì
()

201 
uöt32_t
 
±
 = *(uöt32_t*)
cur_¥o˚ss
->
pd
;

202 
cur_¥o˚ss
->
∑ª¡
->
chûd_pid
 = cur_¥o˚ss->
pid
;

203 
cur_¥o˚ss
->
∑ª¡
->
sim∂e_lock
 = 0;

205 
cur_¥o˚ss
->
°©e
 = 
PROC_ZOMBIE
;

206 
	`li°_push_back
(&
dli°
, &
cur_¥o˚ss
->
ñem_°©
);

208 
	`∑Œoc_‰ì_∑ge
(
cur_¥o˚ss
->
°ack
);

209 
	`∑Œoc_‰ì_∑ge
((*)
±
);

210 
	`∑Œoc_‰ì_∑ge
(
cur_¥o˚ss
->
pd
);

212 
	`li°_ªmove
(&
cur_¥o˚ss
->
ñem_°©
);

213 
	`li°_ªmove
(&
cur_¥o˚ss
->
ñem_Æl
);

214 
	}
}

216 
	$¥oc_íd
()

218 
	`¥oc_‰ì
();

219 
	`scheduÀ
();

221 
	}
}

223 
	$¥oc_wake
()

225 
¥o˚ss
* 
p
;

226 
que_Àvñ
;

227 
ﬁd_Àvñ
;

228 
t
 = 
	`gë_ticks
();

229 
li°_ñem
 *
e
;

230 
e
 = 
	`li°_begö
 (&
¶i°
);É !
	`li°_íd
 (&slist);

231 
e
 = 
	`li°_√xt
 (e))

233 
¥o˚ss
* 
p
 = 
	`li°_íåy
(
e
, ¥o˚ss, 
ñem_°©
);

235 !
	`li°_em±y
(&
¶i°
))

237 
p
 = 
	`li°_íåy
(
	`li°_‰⁄t
(&
¶i°
), 
¥o˚ss
, 
ñem_°©
);

238 if(
p
->
time_¶ìp
 > 
t
)

241 
	`li°_ªmove
(&
p
->
ñem_°©
);

242 
que_Àvñ
 = 1;

243 
p
->
que_Àvñ
 = 1;

244 
	`li°_push_back
(&
Àvñ_que
[
que_Àvñ
], &
p
->
ñem_°©
);

245 
p
->
°©e
 = 
PROC_RUN
;

248 
	}
}

250 
	$¥oc_¶ìp
(
ticks
)

252 
cur_ticks
 = 
	`gë_ticks
();

254 
cur_¥o˚ss
->
time_¶ìp
 = 
ticks
 + 
cur_ticks
;

255 
cur_¥o˚ss
->
°©e
 = 
PROC_STOP
;

256 
cur_¥o˚ss
->
time_¶i˚
 = 0;

257 
li°_ñem
 *
e
;

259 
	`li°_ªmove
(&
cur_¥o˚ss
->
ñem_°©
);

261 
	`li°_ö£π_‹dîed
(&
¶i°
, &
cur_¥o˚ss
->
ñem_°©
,

262 
Àss_time_¶ìp
, 
NULL
);

264 
	`li°_s‹t
 (&
¶i°
,
Àss_time_¶ìp
, 
NULL
);

266 
	`scheduÀ
();

267 
	}
}

269 
	$¥oc_block
()

271 
cur_¥o˚ss
->
°©e
 = 
PROC_BLOCK
;

272 
	`scheduÀ
();

273 
	}
}

275 
	$¥oc_unblock
(
¥o˚ss
* 
¥oc
)

277 
öå_Àvñ
 
ﬁd_Àvñ
;

278 
	`li°_push_back
(&
Àvñ_que
[
¥oc
->
que_Àvñ
],&¥oc->
ñem_°©
);

279 
¥oc
->
°©e
 = 
PROC_RUN
;

280 
	}
}

282 
boﬁ
 
	$Àss_time_¶ìp
(c⁄° 
li°_ñem
 *
a
, c⁄° li°_ñem *
b
,*
aux
)

284 
¥o˚ss
 *
p1
 = 
	`li°_íåy
(
a
, ¥o˚ss, 
ñem_°©
);

285 
¥o˚ss
 *
p2
 = 
	`li°_íåy
(
b
, ¥o˚ss, 
ñem_°©
);

287  
p1
->
time_¶ìp
 < 
p2
->time_sleep;

288 
	}
}

290 
boﬁ
 
	$m‹e_¥io
(c⁄° 
li°_ñem
 *
a
, c⁄° li°_ñem *
b
,*
aux
)

292 
¥o˚ss
 *
p1
 = 
	`li°_íåy
(
a
, ¥o˚ss, 
ñem_°©
);

293 
¥o˚ss
 *
p2
 = 
	`li°_íåy
(
b
, ¥o˚ss, 
ñem_°©
);

295  
p1
->
¥i‹ôy
 > 
p2
->priority;

296 
	}
}

298 
	$kî√l1_¥oc
(* 
aux
)

300 
∑s£d
 = 0;

303 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >80Ë&& (!
∑s£d
)) {

305 
	`¥oc_¶ìp
(60);

306 
∑s£d
 = 1;

309 i‡(
cur_¥o˚ss
 -> 
time_u£d
 >= 200)

310 
	`¥oc_íd
();

312 
	}
}

314 
	$kî√l2_¥oc
(* 
aux
)

316 
∑s£d
 = 0;

319 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >30Ë&& (!
∑s£d
)) {

320 
	`¥oc_¶ìp
(30);

321 
∑s£d
 = 1;

325 i‡(
cur_¥o˚ss
 -> 
time_u£d
 >= 120) {

326 
	`¥oc_íd
();

329 
	}
}

331 
	$kî√l3_¥oc
(* 
aux
)

333 
∑s£d
 = 0;

338 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >100Ë&& (!
∑s£d
)) {

339 
	`¥oc_¶ìp
(200);

340 
∑s£d
 = 1;

344 i‡(
cur_¥o˚ss
 -> 
time_u£d
 >= 300) {

345 
	`¥oc_íd
();

348 
	}
}

350 
	$kî√l4_¥oc
(* 
aux
)

352 
∑s£d1
=0, 
∑s£d2
 = 0 ;

356 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >30Ë&& (!
∑s£d1
)){

357 
	`¥oc_¶ìp
(250);

358 
∑s£d1
 = 1 ;

362 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >80Ë&& (!
∑s£d2
)){

363 
	`¥oc_¶ìp
(300);

364 
∑s£d2
 =1;

368 i‡(
cur_¥o˚ss
 -> 
time_u£d
 >=300){

369 
	`¥oc_íd
();

373 
	}
}

374 
	$kî√l5_¥oc
(* 
aux
)

376 
∑s£d1
=0, 
∑s£d2
 = 0 ;

379 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >20Ë&& (!
∑s£d1
)){

380 
	`¥oc_¶ìp
(350);

381 
∑s£d1
 = 1;

384 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >100Ë&& (!
∑s£d2
)){

385 
	`¥oc_¶ìp
(50);

386 
∑s£d2
 = 1;

389 i‡(
cur_¥o˚ss
 -> 
time_u£d
 >=400)

390 
	`¥oc_íd
();

392 
	}
}

394 
	$kî√l6_¥oc
(* 
aux
)

396 
∑s£d1
=0, 
∑s£d2
 = 0, 
∑s£d3
 = 0, 
∑s£d4
 = 0;

399 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >10Ë&& (!
∑s£d1
)){

400 
	`¥oc_¶ìp
(10);

401 
∑s£d1
 = 1;

404 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >30Ë&& (!
∑s£d2
)){

405 
	`¥oc_¶ìp
(20);

406 
∑s£d2
 = 1;

409 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >100Ë&& (!
∑s£d3
)){

410 
	`¥oc_¶ìp
(200);

411 
∑s£d3
 = 1;

414 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >150Ë&& (!
∑s£d4
)){

415 
	`¥oc_¶ìp
(10);

416 
∑s£d4
 = 1;

420 i‡(
cur_¥o˚ss
 -> 
time_u£d
 >=200)

421 
	`¥oc_íd
();

423 
	}
}

425 
	$kî√l7_¥oc
(* 
aux
)

427 
∑s£d1
=0, 
∑s£d2
 = 0, 
∑s£d3
 = 0;

430 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >20Ë&& (!
∑s£d1
)){

431 
	`¥oc_¶ìp
(20);

432 
∑s£d1
 = 1;

435 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >40Ë&& (!
∑s£d2
)){

436 
	`¥oc_¶ìp
(200);

437 
∑s£d2
 = 1;

440 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >100Ë&& (!
∑s£d3
)){

441 
	`¥oc_¶ìp
(10);

442 
∑s£d3
 = 1;

445 i‡(
cur_¥o˚ss
 -> 
time_u£d
 >=500)

446 
	`¥oc_íd
();

448 
	}
}

450 
	$kî√l8_¥oc
(* 
aux
)

452 
∑s£d
 = 0;

455 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >20Ë&& (!
∑s£d
)){

456 
	`¥oc_¶ìp
(200);

457 
∑s£d
 = 1;

461 i‡(
cur_¥o˚ss
 -> 
time_u£d
 >=600)

462 
	`¥oc_íd
();

464 
	}
}

466 
	$kî√l9_¥oc
(* 
aux
)

468 
∑s£d
 = 0;

471 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >30Ë&& (!
∑s£d
)){

472 
	`¥oc_¶ìp
(20);

473 
∑s£d
 = 1;

477 i‡(
cur_¥o˚ss
 -> 
time_u£d
 >=750)

478 
	`¥oc_íd
();

480 
	}
}

482 
	$kî√l10_¥oc
(* 
aux
)

484 
∑s£d
 = 0;

487 i‡((
cur_¥o˚ss
 -> 
time_u£d
 >200Ë&& (!
∑s£d
)){

488 
	`¥oc_¶ìp
(100);

489 
∑s£d
 = 1;

493 i‡(
cur_¥o˚ss
 -> 
time_u£d
 >=800)

494 
	`¥oc_íd
();

496 
	}
}

498 
	$idÀ
(* 
aux
)

500 
	`¥oc_¸óã
(
kî√l1_¥oc
, 
NULL
, NULL);

501 
	`¥oc_¸óã
(
kî√l2_¥oc
, 
NULL
, NULL);

502 
	`¥oc_¸óã
(
kî√l3_¥oc
, 
NULL
, NULL);

503 
	`¥oc_¸óã
(
kî√l4_¥oc
, 
NULL
, NULL);

504 
	`¥oc_¸óã
(
kî√l5_¥oc
, 
NULL
, NULL);

505 
	`¥oc_¸óã
(
kî√l6_¥oc
, 
NULL
, NULL);

506 
	`¥oc_¸óã
(
kî√l7_¥oc
, 
NULL
, NULL);

507 
	`¥oc_¸óã
(
kî√l8_¥oc
, 
NULL
, NULL);

508 
	`¥oc_¸óã
(
kî√l9_¥oc
, 
NULL
, NULL);

509 
	`¥oc_¸óã
(
kî√l10_¥oc
, 
NULL
, NULL);

510 
	`¥ötk
("createÖroc done\n");

511 
li°_ñem
 *
ñe
;

513 
	`scheduÀ
();

515 
	}
}

519 
	$¥oc_¥öt_d©a
()

521 
a
, 
b
, 
c
, 
d
, 
bp
, 
si
, 
di
, 
•
;

524 
__asm__
 
	`__vﬁ©ûe
("mov %%óx ,%0": "=m"(
a
));

526 
__asm__
 
	`__vﬁ©ûe
("mov %ebx ,%eax");

527 
__asm__
 
	`__vﬁ©ûe
("mov %%óx ,%0": "=m"(
b
));

529 
__asm__
 
	`__vﬁ©ûe
("mov %ecx ,%eax");

530 
__asm__
 
	`__vﬁ©ûe
("mov %%óx ,%0": "=m"(
c
));

532 
__asm__
 
	`__vﬁ©ûe
("mov %edx ,%eax");

533 
__asm__
 
	`__vﬁ©ûe
("mov %%óx ,%0": "=m"(
d
));

536 
__asm__
 
	`__vﬁ©ûe
("mov %ebp ,%eax");

537 
__asm__
 
	`__vﬁ©ûe
("mov %%óx ,%0": "=m"(
bp
));

539 
__asm__
 
	`__vﬁ©ûe
("mov %esi ,%eax");

540 
__asm__
 
	`__vﬁ©ûe
("mov %%óx ,%0": "=m"(
si
));

542 
__asm__
 
	`__vﬁ©ûe
("mov %edi ,%eax");

543 
__asm__
 
	`__vﬁ©ûe
("mov %%óx ,%0": "=m"(
di
));

545 
__asm__
 
	`__vﬁ©ûe
("mov %esp ,%eax");

546 
__asm__
 
	`__vﬁ©ûe
("mov %%óx ,%0": "=m"(
•
));

548 
	`¥ötk
( "\neax %oÉbx %oÉcx %oÉdx %o"\

550 , 
a
, 
b
, 
c
, 
d
, 
bp
, 
si
, 
di
, 
•
);

551 
	}
}

553 
	$hexDump
 (*
addr
, 
Àn
) {

554 
i
;

555 
buff
[17];

556 *
pc
 = (*)
addr
;

558 i‡(
Àn
 == 0) {

559 
	`¥ötk
(" ZERO LENGTH\n");

562 i‡(
Àn
 < 0) {

563 
	`¥ötk
(" NEGATIVE LENGTH: %i\n",
Àn
);

567 
i
 = 0; i < 
Àn
; i++) {

568 i‡((
i
 % 16) == 0) {

569 i‡(
i
 != 0)

570 
	`¥ötk
 (" %s\n", 
buff
);

572 
	`¥ötk
 (" %04x ", 
i
);

575 
	`¥ötk
 (" %02x", 
pc
[
i
]);

577 i‡((
pc
[
i
] < 0x20) || (pc[i] > 0x7e))

578 
buff
[
i
 % 16] = '.';

580 
buff
[
i
 % 16] = 
pc
[i];

581 
buff
[(
i
 % 16) + 1] = '\0';

584 (
i
 % 16) != 0) {

585 
	`¥ötk
 (" ");

586 
i
++;

589 
	`¥ötk
 (" %s\n", 
buff
);

590 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/proc/sched.c

1 
	~<li°.h
>

2 
	~<¥oc/sched.h
>

3 
	~<mem/mÆloc.h
>

4 
	~<¥oc/¥oc.h
>

5 
	~<¥oc/swôch.h
>

6 
	~<öãºu±.h
>

7 
	~<devi˚/c⁄sﬁe.h
>

9 
li°
 
Àvñ_que
[
QUE_LV_MAX
];

10 
li°
 
∂i°
;

11 
li°
 
¶i°
;

12 
¥o˚ss
 
¥ocs
[
PROC_NUM_MAX
];

13 
¥o˚ss
 *
idÀ_¥o˚ss
;

15 
¥o˚ss
 *
	gœã°
;

17 
¥o˚ss
* 
gë_√xt_¥oc
(
li°
 *
æi°_èrgë
);

18 
¥oc_que_Àvñup
(
¥o˚ss
 *
cur
);

19 
¥oc_que_Àvñdown
(
¥o˚ss
 *
cur
);

20 
¥o˚ss
* 
sched_föd_que
();

22 
	gschedulög
;

31 
¥o˚ss
* 
	$sched_föd_que
() {

32 
i
,
j
;

33 
¥o˚ss
 * 
ªsu…
 = 
NULL
;

35 
	`¥oc_wake
();

37 if(
	`li°_em±y
(&
Àvñ_que
[1]))

39 if(
	`li°_em±y
(&
Àvñ_que
[2]))

44 
ªsu…
 = 
	`gë_√xt_¥oc
(&
Àvñ_que
[1]);

49 
ªsu…
 = 
	`gë_√xt_¥oc
(&
Àvñ_que
[1]);

55  
ªsu…
;

56 
	}
}

58 
¥o˚ss
* 
	$gë_√xt_¥oc
(
li°
 *
æi°_èrgë
) {

59 
li°_ñem
 *
e
;

61 
e
 = 
	`li°_begö
 (
æi°_èrgë
);É !
	`li°_íd
 (rlist_target);

62 
e
 = 
	`li°_√xt
 (e))

64 
¥o˚ss
* 
p
 = 
	`li°_íåy
(
e
, ¥o˚ss, 
ñem_°©
);

66 if(
p
->
°©e
 =
PROC_RUN
)

67  
p
;

69  
NULL
;

70 
	}
}

72 
	$scheduÀ
()

74 
¥o˚ss
 *
cur
;

75 
¥o˚ss
 *
√xt
;

76 
¥o˚ss
 *
tmp
;

77 
li°_ñem
 *
ñe
;

78 
i
 = 0, 
¥öãd
 = 0;

80 
schedulög
 = 1;

81 
cur
 = 
cur_¥o˚ss
;

87 i‡((
cur
 -> 
pid
) != 0) {

92 
œã°
 -> 
que_Àvñ
){

95 
	`¥oc_wake
();

98 
ñe
 = 
	`li°_begö
(&
∂i°
);ÉÀ !
	`li°_íd
(&∂i°);ÉÀ = 
	`li°_√xt
(ele)) {

99 
tmp
 = 
	`li°_íåy
 (
ñe
, 
¥o˚ss
, 
ñem_Æl
);

100 i‡((
tmp
 -> 
°©e
 =
PROC_ZOMBIE
) ||

103 (
tmp
 -> 
pid
 == 0)) ;

104 i‡(!
¥öãd
) {

105 
	`¥ötk
("#=%2dÅ=%3d u=%3d ", 
tmp
 -> 
pid
,Åm∞-> 
time_¶i˚
,Åm∞-> 
time_u£d
);

106 
	`¥ötk
("q=%3d\n", 
tmp
->
que_Àvñ
);

107 
¥öãd
 = 1;

110 
	`¥ötk
(", #=%2dÅ=%3d u=%3d ", 
tmp
 -> 
pid
,Åm∞-> 
time_¶i˚
,Åmp->
time_u£d
);

111 
	`¥ötk
("q=%3d\n", 
tmp
->
que_Àvñ
);

116 i‡(
¥öãd
)

117 
	`¥ötk
("\n");

119 i‡((
√xt
 = 
	`sched_föd_que
()Ë!
NULL
) {

120 
	`¥ötk
("Sñe˘edÖro˚s†: %d\n", 
√xt
 -> 
pid
);

125 
	}
}

127 
	$¥oc_que_Àvñup
(
¥o˚ss
 *
cur
)

130 
	}
}

132 
	$¥oc_que_Àvñdown
(
¥o˚ss
 *
cur
)

135 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/ssulib.c

1 
	~<ssulib.h
>

2 
	~<devi˚/io.h
>

3 
	~<sysˇŒ.h
>

5 
	$°∫cmp
(* 
b1
, * 
b2
, 
Àn
)

7 
i
;

9 
i
 = 0; i < 
Àn
; i++)

11 
c
 = 
b1
[
i
] - 
b2
[i];

12 if(
c
)

13  
c
;

14 if(
b1
[
i
] == 0)

18 
	}
}

20 
	$gëch¨
()

22  
	`ssuªad
();

23 
	}
}

25 
	$gëTokí
(* 
buf
, 
Àn
)

27 * 
°›≥r
 = " \t\n";

28 
off
 = 0;

31 
c
 = -1;

32 *
p
;

33 
c
 == -1)

35 
c
 = 
	`ssuªad
();

38 
p
 = 
°›≥r
;

39 *
p
 != 0)

41 if(*
p
 =
c
)

43 
buf
[
off
++] = 0;

44  
off
;

46 
p
++;

49 
buf
[
off
++] = 
c
;

50 if(
off
 >
Àn
)

52  
off
;

55 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/string.c

1 
	~<°rög.h
>

2 
	~<debug.h
>

3 
	~<ty≥.h
>

7 
	$mem˝y
 (*
d°_
, c⁄° *
§c_
, 
size_t
 
size
)

9 *
d°
 = 
d°_
;

10 c⁄° *
§c
 = 
§c_
;

15 
size
-- > 0)

16 *
d°
++ = *
§c
++;

18  
d°_
;

19 
	}
}

24 
	$memmove
 (*
d°_
, c⁄° *
§c_
, 
size_t
 
size
)

26 *
d°
 = 
d°_
;

27 c⁄° *
§c
 = 
§c_
;

32 i‡(
d°
 < 
§c
)

34 
size
-- > 0)

35 *
d°
++ = *
§c
++;

39 
d°
 +
size
;

40 
§c
 +
size
;

41 
size
-- > 0)

42 *--
d°
 = *--
§c
;

45  
d°
;

46 
	}
}

53 
	$memcmp
 (c⁄° *
a_
, c⁄° *
b_
, 
size_t
 
size
)

55 c⁄° *
a
 = 
a_
;

56 c⁄° *
b
 = 
b_
;

61 ; 
size
-- > 0; 
a
++, 
b
++)

62 i‡(*
a
 !*
b
)

63  *
a
 > *
b
 ? +1 : -1;

65 
	}
}

73 
	$°rcmp
 (c⁄° *
a_
, c⁄° *
b_
)

75 c⁄° *
a
 = (c⁄° *Ë
a_
;

76 c⁄° *
b
 = (c⁄° *Ë
b_
;

81 *
a
 !'\0' && *®=*
b
)

83 
a
++;

84 
b
++;

87  *
a
 < *
b
 ? -1 : *a > *b;

88 
	}
}

94 
	$memchr
 (c⁄° *
block_
, 
ch_
, 
size_t
 
size
)

96 c⁄° *
block
 = 
block_
;

97 
ch
 = 
ch_
;

101 ; 
size
-- > 0; 
block
++)

102 i‡(*
block
 =
ch
)

103  (*Ë
block
;

105  
NULL
;

106 
	}
}

113 
	$°rchr
 (c⁄° *
°rög
, 
c_
)

115 
c
 = 
c_
;

120 i‡(*
°rög
 =
c
)

121  (*Ë
°rög
;

122 i‡(*
°rög
 == '\0')

123  
NULL
;

125 
°rög
++;

126 
	}
}

130 
size_t


131 
	$°rc•n
 (c⁄° *
°rög
, c⁄° *
°›
)

133 
size_t
 
Àngth
;

135 
Àngth
 = 0; 
°rög
[length] != '\0';Üength++)

136 i‡(
	`°rchr
 (
°›
, 
°rög
[
Àngth
]Ë!
NULL
)

138  
Àngth
;

139 
	}
}

145 
	$°Ωbrk
 (c⁄° *
°rög
, c⁄° *
°›
)

147 ; *
°rög
 != '\0'; string++)

148 i‡(
	`°rchr
 (
°›
, *
°rög
Ë!
NULL
)

149  (*Ë
°rög
;

150  
NULL
;

151 
	}
}

156 
	$°ºchr
 (c⁄° *
°rög
, 
c_
)

158 
c
 = 
c_
;

159 c⁄° *
p
 = 
NULL
;

161 ; *
°rög
 != '\0'; string++)

162 i‡(*
°rög
 =
c
)

163 
p
 = 
°rög
;

164  (*Ë
p
;

165 
	}
}

169 
size_t


170 
	$°r•n
 (c⁄° *
°rög
, c⁄° *
skù
)

172 
size_t
 
Àngth
;

174 
Àngth
 = 0; 
°rög
[length] != '\0';Üength++)

175 i‡(
	`°rchr
 (
skù
, 
°rög
[
Àngth
]Ë=
NULL
)

177  
Àngth
;

178 
	}
}

184 
	$°r°r
 (c⁄° *
hay°ack
, c⁄° *
√edÀ
)

186 
size_t
 
hay°ack_Àn
 = 
	`°æí
 (
hay°ack
);

187 
size_t
 
√edÀ_Àn
 = 
	`°æí
 (
√edÀ
);

189 i‡(
hay°ack_Àn
 >
√edÀ_Àn
)

191 
size_t
 
i
;

193 
i
 = 0; i <
hay°ack_Àn
 - 
√edÀ_Àn
; i++)

194 i‡(!
	`memcmp
 (
hay°ack
 + 
i
, 
√edÀ
, 
√edÀ_Àn
))

195  (*Ë
hay°ack
 + 
i
;

198  
NULL
;

199 
	}
}

235 
	$°πok_r
 (*
s
, c⁄° *
dñimôîs
, **
ßve_±r
)

237 *
tokí
;

244 i‡(
s
 =
NULL
)

245 
s
 = *
ßve_±r
;

249 
	`°rchr
 (
dñimôîs
, *
s
Ë!
NULL
)

254 i‡(*
s
 == '\0')

256 *
ßve_±r
 = 
s
;

257  
NULL
;

260 
s
++;

264 
tokí
 = 
s
;

265 
	`°rchr
 (
dñimôîs
, *
s
Ë=
NULL
)

266 
s
++;

267 i‡(*
s
 != '\0')

269 *
s
 = '\0';

270 *
ßve_±r
 = 
s
 + 1;

273 *
ßve_±r
 = 
s
;

274  
tokí
;

275 
	}
}

279 
	$mem£t
 (*
d°_
, 
vÆue
, 
size_t
 
size
)

281 *
d°
 = 
d°_
;

285 
size
-- > 0)

286 *
d°
++ = 
vÆue
;

288  
d°_
;

289 
	}
}

306 
size_t


307 
	$°∫Àn
 (c⁄° *
°rög
, 
size_t
 
maxÀn
)

309 
size_t
 
Àngth
;

311 
Àngth
 = 0; 
°rög
[Àngth] !'\0' &&Üígth < 
maxÀn
;Üength++)

313  
Àngth
;

314 
	}
}

325 
size_t


326 
	$°æ˝y
 (*
d°
, c⁄° *
§c
, 
size_t
 
size
)

328 
size_t
 
§c_Àn
;

333 
§c_Àn
 = 
	`°æí
 (
§c
);

334 i‡(
size
 > 0)

336 
size_t
 
d°_Àn
 = 
size
 - 1;

337 i‡(
§c_Àn
 < 
d°_Àn
)

338 
d°_Àn
 = 
§c_Àn
;

339 
	`mem˝y
 (
d°
, 
§c
, 
d°_Àn
);

340 
d°
[
d°_Àn
] = '\0';

342  
§c_Àn
;

343 
	}
}

355 
size_t


356 
	$°æˇt
 (*
d°
, c⁄° *
§c
, 
size_t
 
size
)

358 
size_t
 
§c_Àn
, 
d°_Àn
;

363 
§c_Àn
 = 
	`°æí
 (
§c
);

364 
d°_Àn
 = 
	`°æí
 (
d°
);

365 i‡(
size
 > 0 && 
d°_Àn
 < size)

367 
size_t
 
c›y_˙t
 = 
size
 - 
d°_Àn
 - 1;

368 i‡(
§c_Àn
 < 
c›y_˙t
)

369 
c›y_˙t
 = 
§c_Àn
;

370 
	`mem˝y
 (
d°
 + 
d°_Àn
, 
§c
, 
c›y_˙t
);

371 
d°
[
d°_Àn
 + 
c›y_˙t
] = '\0';

373  
§c_Àn
 + 
d°_Àn
;

374 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/synch.c

1 
	~<synch.h
>

2 
	~<öãºu±.h
>

3 
	~<¥oc/¥oc.h
>

4 
	~<devi˚/c⁄sﬁe.h
>

6 #i‚de‡
ASSERT


7 
	#ASSERT
(
COND
Ë;

	)

10 
	$£ma_öô
(
£m≠h‹e
 *
£ma
, 
vÆue
)

12 
	`ASSERT
 (
£ma
 !
NULL
);

14 
£ma
->
vÆue
 = value;

15 
	`li°_öô
(&
£ma
->
waôîs
);

16 
	}
}

18 
	$£ma_down
 (
£m≠h‹e
 *
£ma
)

20 
öå_Àvñ
 
ﬁd_Àvñ
;

22 
	`ASSERT
 (
£ma
 !
NULL
);

23 
	`ASSERT
 (!
	`öå_c⁄ãxt
 ());

25 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
 ();

26 
£ma
->
vÆue
 == 0)

28 
	`li°_push_back
 (&
£ma
->
waôîs
, &
cur_¥o˚ss
->
ñem_°©
);

29 
	`¥oc_block
 ();

31 
£ma
->
vÆue
--;

32 
	`öå_£t_Àvñ
 (
ﬁd_Àvñ
);

33 
	}
}

35 
boﬁ
 
	$£ma_åy_down
 (
£m≠h‹e
 *
£ma
)

37 
öå_Àvñ
 
ﬁd_Àvñ
;

39 
boﬁ
 
suc˚ss
;

41 
	`ASSERT
 (
£ma
 !
NULL
);

43 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
 ();

44 i‡(
£ma
->
vÆue
 > 0)

46 
£ma
->
vÆue
--;

47 
suc˚ss
 = 
åue
;

50 
suc˚ss
 = 
Ál£
;

51 
	`öå_£t_Àvñ
 (
ﬁd_Àvñ
);

53  
suc˚ss
;

54 
	}
}

56 
	$£ma_up
 (
£m≠h‹e
 *
£ma
)

58 
öå_Àvñ
 
ﬁd_Àvñ
;

60 
	`ASSERT
 (
£ma
 !
NULL
);

62 
ﬁd_Àvñ
 = 
	`öå_dißbÀ
 ();

63 i‡(!
	`li°_em±y
 (&
£ma
->
waôîs
))

64 
	`¥oc_unblock
 (
	`li°_íåy
 (
	`li°_p›_‰⁄t
 (&
£ma
->
waôîs
),

65 
¥o˚ss
, 
ñem_°©
));

66 
£ma
->
vÆue
++;

67 
	`öå_£t_Àvñ
 (
ﬁd_Àvñ
);

68 
	}
}

69 
£ma_ã°_hñ≥r
 (*
£ma_
);

71 
	$£ma_£lf_ã°
 ()

73 
£m≠h‹e
 
£ma
[2];

74 
i
;

76 
	`¥ötk
 ("Testing semaphores...");

77 
	`£ma_öô
 (&
£ma
[0], 0);

78 
	`£ma_öô
 (&
£ma
[1], 0);

79 
	`¥oc_¸óã
 (
£ma_ã°_hñ≥r
, 
NULL
, &
£ma
);

80 
i
 = 0; i < 10; i++)

82 
	`£ma_up
 (&
£ma
[0]);

83 
	`£ma_down
 (&
£ma
[1]);

85 
	`¥ötk
 ("done.\n");

86 
	}
}

88 
	$£ma_ã°_hñ≥r
 (*
£ma_
)

90 
£m≠h‹e
 *
£ma
 = 
£ma_
;

91 
i
;

92 
cur_¥o˚ss
 -> 
¥i‹ôy
 = 100;

94 
i
 = 0; i < 10; i++)

96 
	`£ma_down
 (&
£ma
[0]);

97 
	`£ma_up
 (&
£ma
[1]);

99 
	}
}

101 
	$lock_öô
 (
lock
 *lock)

103 
	`ASSERT
 (
lock
 !
NULL
);

105 
lock
->
hﬁdî
 = 
NULL
;

106 
	`£ma_öô
 (&
lock
->
£m≠h‹e
, 1);

107 
	}
}

109 
	$lock_acquúe
 (
lock
 *lock)

111 
	`ASSERT
 (
lock
 !
NULL
);

112 
	`ASSERT
 (!
	`öå_c⁄ãxt
 ());

113 
	`ASSERT
 (!
	`lock_hñd_by_cuºít_thªad
 (
lock
));

115 
	`£ma_down
 (&
lock
->
£m≠h‹e
);

116 
lock
->
hﬁdî
 = 
cur_¥o˚ss
;

117 
	}
}

119 
boﬁ
 
	$lock_åy_acquúe
 (
lock
 *lock)

121 
boﬁ
 
suc˚ss
;

123 
	`ASSERT
 (
lock
 !
NULL
);

124 
	`ASSERT
 (!
	`lock_hñd_by_cuºít_thªad
 (
lock
));

126 
suc˚ss
 = 
	`£ma_åy_down
 (&
lock
->
£m≠h‹e
);

127 i‡(
suc˚ss
)

128 
lock
->
hﬁdî
 = 
cur_¥o˚ss
;

129  
suc˚ss
;

130 
	}
}

132 
	$lock_ªÀa£
 (
lock
 *lock)

134 
	`ASSERT
 (
lock
 !
NULL
);

135 
	`ASSERT
 (
	`lock_hñd_by_cuºít_thªad
 (
lock
));

137 
lock
->
hﬁdî
 = 
NULL
;

138 
	`£ma_up
 (&
lock
->
£m≠h‹e
);

139 
	}
}

141 
boﬁ
 
	$lock_hñd_by_cuºít_thªad
 (c⁄° 
lock
 *lock)

143 
	`ASSERT
 (
lock
 !
NULL
);

145  
lock
->
hﬁdî
 =
cur_¥o˚ss
;

146 
	}
}

	@/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/vsprintk.c

1 
	~<°d¨g.h
>

3 
	#ZEROPAD
 1

	)

4 
	#SIGN
 2

	)

5 
	#PLUS
 4

	)

6 
	#SPACE
 8

	)

7 
	#LEFT
 16

	)

8 
	#SPECIAL
 32

	)

9 
	#SMALL
 64

	)

11 
	#is_digô
(
c
Ë–(cË> '0' && (cË< '9' )

	)

13 
	#do_div
(
n
,
ba£
) \

15 
__ªs
; \

16 
__ªs
 = (()
n
Ë% ()
ba£
; \

17 
n
 = ((ÍË/ ()
ba£
; \

18 
__ªs
; \

19 })

	)

21 
	$°æí
(c⁄° *
°rög
)

23 c⁄° *
ªt
 = 
°rög
;

25 *
°rög
++);

27  
°rög
 - 1 - 
ªt
;

28 
	}
}

30 *
	$numbî
(* 
°r
, 
num
, 
ba£
, 
size
, 
¥ecisi⁄
, 
ty≥
)

32 
c
,
sign
,
tmp
[36];

33 c⁄° *
digôs
="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";

34 
i
;

36 i‡(
ty≥
&
SMALL
Ë
digôs
="0123456789abcdefghijklmnopqrstuvwxyz";

37 i‡(
ty≥
&
LEFT
Ëty≥ &~
ZEROPAD
;

38 i‡(
ba£
<2 || base>36)

40 
c
 = (
ty≥
 & 
ZEROPAD
) ? '0' : ' ' ;

41 i‡(
ty≥
&
SIGN
 && 
num
<0) {

42 
sign
='-';

43 
num
 = -num;

45 
sign
=(
ty≥
&
PLUS
Ë? '+' : (—y≥&
SPACE
) ? ' ' : 0);

46 i‡(
sign
Ë
size
--;

47 i‡(
ty≥
&
SPECIAL
)

48 i‡(
ba£
==16Ë
size
 -= 2;

49 i‡(
ba£
==8Ë
size
--;

50 
i
=0;

51 i‡(
num
==0)

52 
tmp
[
i
++]='0';

53 
num
!=0)

54 
tmp
[
i
++]=
digôs
[
	`do_div
(
num
,
ba£
)];

55 i‡(
i
>
¥ecisi⁄
)Örecision=i;

56 
size
 -
¥ecisi⁄
;

57 i‡(!(
ty≥
&(
ZEROPAD
+
LEFT
)))

58 
size
-->0)

59 *
°r
++ = ' ';

60 i‡(
sign
)

61 *
°r
++ = 
sign
;

62 i‡(
ty≥
&
SPECIAL
)

63 i‡(
ba£
==8)

64 *
°r
++ = '0';

65 i‡(
ba£
==16) {

66 *
°r
++ = '0';

67 *
°r
++ = 
digôs
[33];

69 i‡(!(
ty≥
&
LEFT
))

70 
size
-->0)

71 *
°r
++ = 
c
;

72 
i
<
¥ecisi⁄
--)

73 *
°r
++ = '0';

74 
i
-->0)

75 *
°r
++ = 
tmp
[
i
];

76 
size
-->0)

77 *
°r
++ = ' ';

78  
°r
;

79 
	}
}

81 
	$skù_©oi
(c⁄° **
s
)

83 
i
=0;

85 
	`is_digô
(**
s
))

87 
i
 = i*10 + *((*
s
)++) - '0';

89  
i
;

90 
	}
}

92 
	$v•rötk
(*
buf
, c⁄° *
fmt
, 
va_li°
 
¨gs
)

94 
Àn
;

95 
i
;

97 
quÆifõr
;

98 
¥ecisi⁄
;

99 
fõld_width
;

101 *
°r
;

102 *
s
;

103 *
ù
;

105 
Êags
;

107 
°r
 = 
buf
 ; *
fmt
 ; ++fmt)

109 if(*
fmt
 != '%')

111 *
°r
++ = *
fmt
;

115 
Êags
 = 0;

116 
ª≥©
:

117 ++
fmt
;

118 *
fmt
)

120 '-': 
Êags
 |
LEFT
; 
ª≥©
;

121 '+': 
Êags
 |
PLUS
; 
ª≥©
;

122 ' ': 
Êags
 |
SPACE
; 
ª≥©
;

123 '#': 
Êags
 |
SPECIAL
 ; 
ª≥©
;

124 '0': 
Êags
 |
ZEROPAD
; 
ª≥©
;

127 
fõld_width
 = -1;

129 if(
	`is_digô
(*
fmt
))

131 
fõld_width
 = 
	`skù_©oi
(&
fmt
);

133 if(*
fmt
 == '*')

135 
fõld_width
 = 
	`va_¨g
(
¨gs
, );

136 if(
fõld_width
 < 0)

138 
fõld_width
 = -field_width;

139 
Êags
 |
LEFT
;

143 
¥ecisi⁄
 = -1;

145 if(*
fmt
 == '.')

147 ++
fmt
;

148 if(
	`is_digô
(*
fmt
))

150 
¥ecisi⁄
 = 
	`skù_©oi
(&
fmt
);

152 if(*
fmt
 == '*')

154 
¥ecisi⁄
 = 
	`va_¨g
(
¨gs
, );

156 if(
¥ecisi⁄
 < 0)

158 
¥ecisi⁄
 = 0;

162 
quÆifõr
 = -1;

164 if(*
fmt
 == 'h' || *fmt == 'l' || *fmt == 'L')

166 
quÆifõr
 = *
fmt
;

167 ++
fmt
;

170 *
fmt
)

174 if(!(
Êags
 & 
LEFT
))

176 --
fõld_width
 > 0)

178 *
°r
++ = ' ';

181 *
°r
++ = ()
	`va_¨g
(
¨gs
, );

182 --
fõld_width
 > 0)

184 *
°r
++ = ' ';

190 
s
 = 
	`va_¨g
(
¨gs
, *);

191 
Àn
 = 
	`°æí
(
s
);

192 if(
¥ecisi⁄
 < 0)

194 
¥ecisi⁄
 = 
Àn
;

196 if(
Àn
 > 
¥ecisi⁄
)

198 
Àn
 = 
¥ecisi⁄
;

201 if(!(
Êags
 & 
LEFT
))

203 
Àn
 < 
fõld_width
--)

205 *
°r
++ = ' ';

208 
i
 = 0 ; i < 
Àn
 ; ++i)

210 *
°r
++ = *
s
++;

213 
Àn
 < 
fõld_width
--)

215 *
°r
++ = ' ';

221 
°r
 = 
	`numbî
(°r, 
	`va_¨g
(
¨gs
, ), 8, 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

226 if(
fõld_width
 == -1)

228 
fõld_width
 = 8;

229 
Êags
 |
ZEROPAD
;

231 
°r
 = 
	`numbî
(°r, ()
	`va_¨g
(
¨gs
, *), 16, 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

236 
Êags
 |
SMALL
;

240 
°r
 = 
	`numbî
(°r, 
	`va_¨g
(
¨gs
, ), 16, 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

246 
Êags
 |
SIGN
;

250 
°r
 = 
	`numbî
(°r, 
	`va_¨g
(
¨gs
, ), 10, 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

255 
ù
 = 
	`va_¨g
(
¨gs
, *);

256 *
ù
 = (
°r
 - 
buf
);

261 if(*
fmt
 != '%')

263 *
°r
++ = '%';

265 if(*
fmt
)

267 *
°r
++ = *
fmt
;

271 --
fmt
;

278 *
°r
 = '\0';

279  (
°r
 - 
buf
);

280 
	}
}

	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	$©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/syscall.h

1 
	~<sys/sysˇŒ.h
>

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@
1
.
1
/usr/include
72
4120
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/arch/Main.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/arch/do_syscall.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/arch/i386/intr-stubs.S
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/arch/i386/switch.S
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/arch/interrupt.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/arch/syscall.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/bitmap.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/build/Main.s
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/device/block.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/device/console.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/device/device.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/device/kbd.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/device/partition.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/device/pit.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/bitmap.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/ctype.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/debug.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/device/block.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/device/console.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/device/device.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/device/io.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/device/kbd.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/device/partition.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/device/pit.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/do_syscall.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/interrupt.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/intr-stubs.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/inttypes.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/limits.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/list.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/loader.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/mem/malloc.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/mem/mm.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/mem/paging.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/mem/palloc.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/packed.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/proc/proc.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/proc/sched.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/proc/switch.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/round.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/ssulib.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/stdarg.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/stdbool.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/stddef.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/stdint.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/stdlib.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/string.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/synch.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/syscall.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/type.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/include/vaddr.h
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/list.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/mem/malloc.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/mem/mm.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/mem/paging.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/mem/palloc.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/proc/proc.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/proc/sched.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/ssulib.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/string.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/synch.c
/home/psm/Documents/SSUOS_P4/ssuos/src/kernel/vsprintk.c
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/stdint.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/syscall.h
/usr/include/alloca.h
/usr/include/features.h
/usr/include/xlocale.h
/usr/include/stdc-predef.h
