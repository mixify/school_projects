!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AFLAGS	kernel/Makefile	/^AFLAGS = -f elf32$/;"	m
ASSERT	kernel/arch/interrupt.c	39;"	d	file:
ASSERT	kernel/bitmap.c	12;"	d	file:
ASSERT	kernel/include/debug.h	27;"	d
ASSERT	kernel/include/debug.h	31;"	d
ASSERT	kernel/include/debug.h	37;"	d
ASSERT	kernel/list.c	4;"	d	file:
ASSERT	kernel/synch.c	7;"	d	file:
ATA_ALT_ST_REG	kernel/include/device/ata.h	15;"	d
ATA_CMD_CACHE_FLUSH	kernel/include/device/ata.h	43;"	d
ATA_CMD_CACHE_FLUSH_EXT	kernel/include/device/ata.h	44;"	d
ATA_CMD_IDENTIFY	kernel/include/device/ata.h	47;"	d
ATA_CMD_IDENTIFY_PACKET	kernel/include/device/ata.h	46;"	d
ATA_CMD_PACKET	kernel/include/device/ata.h	45;"	d
ATA_CMD_READ_DMA	kernel/include/device/ata.h	37;"	d
ATA_CMD_READ_DMA_EXT	kernel/include/device/ata.h	38;"	d
ATA_CMD_READ_PIO	kernel/include/device/ata.h	35;"	d
ATA_CMD_READ_PIO_EXT	kernel/include/device/ata.h	36;"	d
ATA_CMD_WRITE_DMA	kernel/include/device/ata.h	41;"	d
ATA_CMD_WRITE_DMA_EXT	kernel/include/device/ata.h	42;"	d
ATA_CMD_WRITE_PIO	kernel/include/device/ata.h	39;"	d
ATA_CMD_WRITE_PIO_EXT	kernel/include/device/ata.h	40;"	d
ATA_DEV_CTRL_REG	kernel/include/device/ata.h	16;"	d
ATA_DEV_NUM	kernel/include/device/ata.h	55;"	d
ATA_DRHD_DEF	kernel/include/device/ata.h	30;"	d
ATA_DRHD_LBA	kernel/include/device/ata.h	33;"	d
ATA_DRHD_MST	kernel/include/device/ata.h	31;"	d
ATA_DRHD_SLV	kernel/include/device/ata.h	32;"	d
ATA_MASTER	kernel/include/device/ata.h	18;"	d
ATA_REG_CMD	kernel/include/device/ata.h	14;"	d
ATA_REG_DATA	kernel/include/device/ata.h	6;"	d
ATA_REG_DEVICE	kernel/include/device/ata.h	12;"	d
ATA_REG_ERR	kernel/include/device/ata.h	7;"	d
ATA_REG_LBAH	kernel/include/device/ata.h	11;"	d
ATA_REG_LBAL	kernel/include/device/ata.h	9;"	d
ATA_REG_LBAM	kernel/include/device/ata.h	10;"	d
ATA_REG_NSECT	kernel/include/device/ata.h	8;"	d
ATA_REG_STATUS	kernel/include/device/ata.h	13;"	d
ATA_SECOR_SIZE	kernel/include/device/ata.h	52;"	d
ATA_SLAVE	kernel/include/device/ata.h	19;"	d
ATA_SR_BSY	kernel/include/device/ata.h	21;"	d
ATA_SR_CORR	kernel/include/device/ata.h	26;"	d
ATA_SR_DF	kernel/include/device/ata.h	23;"	d
ATA_SR_DRDY	kernel/include/device/ata.h	22;"	d
ATA_SR_DRQ	kernel/include/device/ata.h	25;"	d
ATA_SR_DSC	kernel/include/device/ata.h	24;"	d
ATA_SR_ERR	kernel/include/device/ata.h	28;"	d
ATA_SR_IDX	kernel/include/device/ata.h	27;"	d
ATA_WAIT_BUSY	kernel/include/device/ata.h	49;"	d
ATA_WAIT_IDLE	kernel/include/device/ata.h	50;"	d
AUTHOR	kernel/arch/Main.c	/^const char* AUTHOR = "OSLAB";$/;"	v
AUTHOR	kernel/build/Main.s	/^AUTHOR:$/;"	l
Activate_A20Gate	boot/i386/boot1.asm	/^Activate_A20Gate:$/;"	l
Address	kernel/arch/interrupt.c	/^	unsigned long Address;$/;"	m	struct:_IDTR	file:
BITMAP_ERROR	kernel/include/bitmap.h	34;"	d
BITMASK	kernel/include/vaddr.h	15;"	d
BLK_DEV_CDR	kernel/include/device/block.h	14;"	d
BLK_DEV_HDD	kernel/include/device/block.h	11;"	d
BLK_DEV_OTH	kernel/include/device/block.h	15;"	d
BLK_DEV_ROM	kernel/include/device/block.h	10;"	d
BLK_DEV_SSD	kernel/include/device/block.h	12;"	d
BLK_DEV_USB	kernel/include/device/block.h	13;"	d
BLK_SEC_SIZE	kernel/include/device/block.h	8;"	d
BOOL	kernel/include/type.h	/^typedef char BOOL;$/;"	t
BOOT1_LOAD	boot/i386/bootloader.asm	/^BOOT1_LOAD:$/;"	l
BUFSIZ	kernel/include/ssulib.h	7;"	d
BUILD_COMMAND	kernel/Makefile	/^BUILD_COMMAND = -o $(BUILD_PATH)\/$@$/;"	m
BUILD_PATH	kernel/Makefile	/^BUILD_PATH = .\/build$/;"	m
BYTE	kernel/include/type.h	/^typedef unsigned char BYTE;$/;"	t
CARRIAGE_RETURN	boot/i386/boot1.asm	/^CARRIAGE_RETURN:$/;"	l
CC	kernel/Makefile	/^CC = gcc$/;"	m
CFLAGS	kernel/Makefile	/^CFLAGS = -O0 -g -I.\/include -ffreestanding -m32 -nostdlib -nostdinc -static -fno-stack-protector$/;"	m
CHAR	kernel/include/device/console.h	/^} CHAR;$/;"	t	typeref:struct:kChStruct
CHAR	kernel/stdio.c	/^        CHAR = 1,               \/* hh *\/$/;"	e	enum:printf_conversion::__anon3	file:
CHAR_BIT	kernel/include/limits.h	4;"	d
CHAR_MAX	kernel/include/limits.h	12;"	d
CHAR_MAX	kernel/include/limits.h	15;"	d
CHAR_MIN	kernel/include/limits.h	11;"	d
CHAR_MIN	kernel/include/limits.h	14;"	d
CHECK_LINE_STATUS	boot/i386/boot1.asm	/^CHECK_LINE_STATUS:$/;"	l
CLS	boot/i386/boot1.asm	/^CLS:$/;"	l
CMDNUM	kernel/proc/proc.c	407;"	d	file:
CODEDESCRIPTOR	boot/i386/boot1.asm	/^		CODEDESCRIPTOR  equ 0x08$/;"	d
CODE_SEGMENT	kernel/arch/interrupt.c	17;"	d	file:
COMMON_COMMAND	kernel/Makefile	/^COMMON_COMMAND = $(BUILD_COMMAND) -c $^ $(CFLAGS)$/;"	m
CR0_FLAG_PE	kernel/include/mem/paging.h	8;"	d
CR0_FLAG_PG	kernel/include/mem/paging.h	7;"	d
CapslockFlag	kernel/include/device/kbd.h	/^	BOOL CapslockFlag;$/;"	m	struct:Key_Status_Struct
CmdList	kernel/proc/proc.c	/^} CmdList;$/;"	t	typeref:struct:__anon1	file:
CodeSelector	kernel/arch/interrupt.c	/^	unsigned short CodeSelector;$/;"	m	struct:_ID	file:
ConvertScancodeToASCII	kernel/device/kbd.c	/^BOOL ConvertScancodeToASCII(BYTE Scancode, BYTE *Asciicode)$/;"	f
DATADESCRIPTOR	boot/i386/boot1.asm	/^		DATADESCRIPTOR  equ 0x10$/;"	d
DEVICES_PARTITION_H	kernel/include/device/partition.h	2;"	d
DEVOP_READ	kernel/include/filesys/fs.h	22;"	d
DEVOP_WRITE	kernel/include/filesys/fs.h	23;"	d
DIR	kernel/Makefile	/^DIR := ${CURDIR}$/;"	m
DIV_ROUND_UP	kernel/include/round.h	10;"	d
ELEM_BITS	kernel/bitmap.c	18;"	d	file:
ENTRY	kernel/Makefile	/^ENTRY = ssuos_main$/;"	m
ENTRY32	boot/i386/boot1.asm	/^ENTRY32:$/;"	l
ExtentedFlag	kernel/include/device/kbd.h	/^	BOOL ExtentedFlag;$/;"	m	struct:Key_Status_Struct
FALSE	kernel/include/type.h	13;"	d
FILENAME_LEN	kernel/include/filesys/inode.h	11;"	d
FIRST_SPORT	kernel/device/console.c	17;"	d	file:
FLAG_IF	kernel/arch/interrupt.c	153;"	d	file:
FLAG_MBS	kernel/arch/interrupt.c	152;"	d	file:
GDT	boot/i386/boot1.asm	/^GDT:$/;"	l
GDT_DESC	boot/i386/boot1.asm	/^GDT_DESC:$/;"	l
GDT_END	boot/i386/boot1.asm	/^GDT_END:$/;"	l
GROUP	kernel/stdio.c	/^        GROUP = 1 << 5          \/* '\\'' *\/$/;"	e	enum:printf_conversion::__anon2	file:
Glob_x	kernel/include/device/console.h	/^int Glob_x;$/;"	v
Glob_y	kernel/include/device/console.h	/^int Glob_y;$/;"	v
HLT	kernel/include/interrupt.h	4;"	d
HSCREEN	kernel/device/console.c	9;"	d	file:
HighOffset	kernel/arch/interrupt.c	/^	unsigned short HighOffset;$/;"	m	struct:_ID	file:
IDT	boot/i386/boot1.asm	/^IDT  equ    0x40000$/;"	d
IDTDESCRIPTOR	boot/i386/boot1.asm	/^		IDTDESCRIPTOR	equ 0x20$/;"	d
IDTR	boot/i386/boot1.asm	/^IDTR:$/;"	l
IDT_IGNORE	boot/i386/boot1.asm	/^IDT_IGNORE:$/;"	l
IDT_LOOP	boot/i386/boot1.asm	/^IDT_LOOP:$/;"	l
INODE_PER_BLOCK	kernel/include/filesys/inode.h	12;"	d
INO_ROOTDIR	kernel/include/filesys/inode.h	8;"	d
INT	kernel/stdio.c	/^        INT = 3,                \/* (none) *\/$/;"	e	enum:printf_conversion::__anon3	file:
INT16_MAX	kernel/include/stdint.h	9;"	d
INT16_MAX	kernel/include/type.h	34;"	d
INT16_MIN	kernel/include/stdint.h	10;"	d
INT16_MIN	kernel/include/type.h	35;"	d
INT32_MAX	kernel/include/stdint.h	13;"	d
INT32_MAX	kernel/include/type.h	38;"	d
INT32_MIN	kernel/include/stdint.h	14;"	d
INT32_MIN	kernel/include/type.h	39;"	d
INT64_MAX	kernel/include/stdint.h	17;"	d
INT64_MAX	kernel/include/type.h	42;"	d
INT64_MIN	kernel/include/stdint.h	18;"	d
INT64_MIN	kernel/include/type.h	43;"	d
INT8_MAX	kernel/include/stdint.h	5;"	d
INT8_MAX	kernel/include/type.h	30;"	d
INT8_MIN	kernel/include/stdint.h	6;"	d
INT8_MIN	kernel/include/type.h	31;"	d
INTMAX	kernel/stdio.c	/^        INTMAX = 4,             \/* j *\/$/;"	e	enum:printf_conversion::__anon3	file:
INTMAX_MAX	kernel/include/stdint.h	41;"	d
INTMAX_MAX	kernel/include/type.h	66;"	d
INTMAX_MIN	kernel/include/stdint.h	40;"	d
INTMAX_MIN	kernel/include/type.h	65;"	d
INTPTR_MAX	kernel/include/stdint.h	34;"	d
INTPTR_MAX	kernel/include/type.h	59;"	d
INTPTR_MIN	kernel/include/stdint.h	33;"	d
INTPTR_MIN	kernel/include/type.h	58;"	d
INTR_MAX	kernel/include/intr-stubs.h	4;"	d
INTR_OFF	kernel/include/interrupt.h	/^	INTR_OFF,             \/* Interrupts disabled. *\/$/;"	e	enum:intr_level
INTR_ON	kernel/include/interrupt.h	/^	INTR_ON               \/* Interrupts enabled. *\/$/;"	e	enum:intr_level
INT_MAX	kernel/include/limits.h	22;"	d
INT_MIN	kernel/include/limits.h	23;"	d
IO_BASE	kernel/device/console.c	16;"	d	file:
ISR_IGNORE	boot/i386/boot1.asm	/^ISR_IGNORE:$/;"	l
Initialize_PIC	boot/i386/boot1.asm	/^Initialize_PIC:$/;"	l
Initialize_Serial_port	boot/i386/boot1.asm	/^Initialize_Serial_port:$/;"	l
KBDMAPSIZE	kernel/include/device/kbd.h	7;"	d
KERNEL_ADDR	kernel/include/mem/paging.h	34;"	d
KERNEL_HEAP	kernel/include/mem/paging.h	35;"	d
KERNEL_LOAD	boot/i386/bootloader.asm	/^KERNEL_LOAD:$/;"	l
KER_SIZ	boot/i386/bootloader.asm	/^KER_SIZ		equ		0x80$/;"	d
KEY_BSPACE	kernel/include/device/kbd.h	27;"	d
KEY_CAPS	kernel/include/device/kbd.h	14;"	d
KEY_ESC	kernel/include/device/kbd.h	9;"	d
KEY_F1	kernel/include/device/kbd.h	15;"	d
KEY_F10	kernel/include/device/kbd.h	24;"	d
KEY_F11	kernel/include/device/kbd.h	25;"	d
KEY_F12	kernel/include/device/kbd.h	26;"	d
KEY_F2	kernel/include/device/kbd.h	16;"	d
KEY_F3	kernel/include/device/kbd.h	17;"	d
KEY_F4	kernel/include/device/kbd.h	18;"	d
KEY_F5	kernel/include/device/kbd.h	19;"	d
KEY_F6	kernel/include/device/kbd.h	20;"	d
KEY_F7	kernel/include/device/kbd.h	21;"	d
KEY_F8	kernel/include/device/kbd.h	22;"	d
KEY_F9	kernel/include/device/kbd.h	23;"	d
KEY_LALT	kernel/include/device/kbd.h	12;"	d
KEY_PRTSCN	kernel/include/device/kbd.h	11;"	d
KEY_RSHIFT	kernel/include/device/kbd.h	10;"	d
KEY_SPACE	kernel/include/device/kbd.h	13;"	d
KEY_TAB	kernel/include/device/kbd.h	28;"	d
KStat	kernel/device/kbd.c	/^static Key_Status KStat;$/;"	v	file:
Kbd_Map	kernel/device/kbd.c	/^static BYTE Kbd_Map[4][KBDMAPSIZE] = {$/;"	v	file:
Key_Status	kernel/include/device/kbd.h	/^} Key_Status;$/;"	t	typeref:struct:Key_Status_Struct
Key_Status_Struct	kernel/include/device/kbd.h	/^typedef struct Key_Status_Struct {$/;"	s
LEFT	kernel/vsprintk.c	7;"	d	file:
LINE_FEED	boot/i386/boot1.asm	/^LINE_FEED:$/;"	l
LINE_STATUS	kernel/device/console.c	18;"	d	file:
LIST_INITIALIZER	kernel/include/list.h	121;"	d
LLONG_MAX	kernel/include/limits.h	30;"	d
LLONG_MIN	kernel/include/limits.h	31;"	d
LOADER_ARGS	kernel/include/loader.h	18;"	d
LOADER_ARGS_LEN	kernel/include/loader.h	24;"	d
LOADER_ARG_CNT	kernel/include/loader.h	19;"	d
LOADER_ARG_CNT_LEN	kernel/include/loader.h	25;"	d
LOADER_BASE	kernel/include/loader.h	5;"	d
LOADER_END	kernel/include/loader.h	6;"	d
LOADER_KERN_BASE	kernel/include/loader.h	9;"	d
LOADER_PARTS	kernel/include/loader.h	17;"	d
LOADER_PARTS_LEN	kernel/include/loader.h	23;"	d
LOADER_PHYS_BASE	kernel/include/loader.h	13;"	d
LOADER_SIG	kernel/include/loader.h	16;"	d
LOADER_SIG_LEN	kernel/include/loader.h	22;"	d
LONG	kernel/stdio.c	/^        LONG = 5,               \/* l *\/$/;"	e	enum:printf_conversion::__anon3	file:
LONGLONG	kernel/stdio.c	/^        LONGLONG = 6,           \/* ll *\/$/;"	e	enum:printf_conversion::__anon3	file:
LONG_MAX	kernel/include/limits.h	26;"	d
LONG_MIN	kernel/include/limits.h	27;"	d
LowOffset	kernel/arch/interrupt.c	/^	unsigned short LowOffset;$/;"	m	struct:_ID	file:
MEM_SIZE	kernel/mem/mm.c	/^static unsigned long MEM_SIZE;$/;"	v	file:
MINUS	kernel/stdio.c	/^        MINUS = 1 << 0,         \/* '-' *\/$/;"	e	enum:printf_conversion::__anon2	file:
MODIFIER	kernel/arch/Main.c	/^const char* MODIFIER = "You";$/;"	v
MODIFIER	kernel/build/Main.s	/^MODIFIER:$/;"	l
NASM	kernel/Makefile	/^NASM = nasm$/;"	m
NOT_REACHED	kernel/include/debug.h	28;"	d
NOT_REACHED	kernel/include/debug.h	35;"	d
NOT_REACHED	kernel/include/debug.h	38;"	d
NO_INLINE	kernel/include/debug.h	9;"	d
NO_RETURN	kernel/include/debug.h	8;"	d
NR_FILEDES	kernel/include/filesys/file.h	6;"	d
NSCROLL	kernel/device/console.c	12;"	d	file:
NULL	kernel/include/type.h	16;"	d
NULLDESCRIPTOR	boot/i386/boot1.asm	/^		NULLDESCRIPTOR equ 0x00$/;"	d
NUM_DIRECT	kernel/include/filesys/inode.h	9;"	d
NUM_INODE	kernel/include/filesys/inode.h	10;"	d
NUM_INODEBLOCK	kernel/include/filesys/fs.h	18;"	d
NumlockFLag	kernel/include/device/kbd.h	/^	BOOL NumlockFLag;	$/;"	m	struct:Key_Status_Struct
OBJS	kernel/Makefile	/^OBJS = $(BUILD_PATH)\/Main.o $(BUILD_PATH)\/io.o $(BUILD_PATH)\/pit.o $(BUILD_PATH)\/interrupt.o $(BUILD_PATH)\/kbd.o $(BUILD_PATH)\/crset.o $(BUILD_PATH)\/paging.o \\$/;"	m
OUT_TO_SERIAL	boot/i386/boot1.asm	/^OUT_TO_SERIAL:$/;"	l
O_RDONLY	kernel/include/filesys/file.h	8;"	d
O_RDWR	kernel/include/filesys/file.h	10;"	d
O_WRONLY	kernel/include/filesys/file.h	9;"	d
PACKED	kernel/include/packed.h	8;"	d
PAGE_ADDR_AVAIL	kernel/include/mem/paging.h	21;"	d
PAGE_ADDR_BASE	kernel/include/mem/paging.h	22;"	d
PAGE_DIR_SIZE	kernel/include/mem/paging.h	32;"	d
PAGE_FLAG_ACCESS	kernel/include/mem/paging.h	15;"	d
PAGE_FLAG_AVAIL	kernel/include/mem/paging.h	16;"	d
PAGE_FLAG_CACHE	kernel/include/mem/paging.h	14;"	d
PAGE_FLAG_DIRTY	kernel/include/mem/paging.h	17;"	d
PAGE_FLAG_GLOB	kernel/include/mem/paging.h	20;"	d
PAGE_FLAG_PRESENT	kernel/include/mem/paging.h	10;"	d
PAGE_FLAG_PTA	kernel/include/mem/paging.h	19;"	d
PAGE_FLAG_RW	kernel/include/mem/paging.h	11;"	d
PAGE_FLAG_SIZE	kernel/include/mem/paging.h	18;"	d
PAGE_FLAG_USER	kernel/include/mem/paging.h	12;"	d
PAGE_FLAG_WRITE	kernel/include/mem/paging.h	13;"	d
PAGE_MASK_BASE	kernel/include/mem/paging.h	24;"	d
PAGE_MASK_PDE	kernel/include/mem/paging.h	25;"	d
PAGE_MASK_PTE	kernel/include/mem/paging.h	26;"	d
PAGE_OFFSET_PDE	kernel/include/mem/paging.h	27;"	d
PAGE_OFFSET_PTE	kernel/include/mem/paging.h	28;"	d
PAGE_SIZE	kernel/include/mem/paging.h	30;"	d
PAGE_TBL_SIZE	kernel/include/mem/paging.h	31;"	d
PANIC	kernel/include/debug.h	14;"	d
PGBITS	kernel/include/vaddr.h	19;"	d
PGMASK	kernel/include/vaddr.h	21;"	d
PGSHIFT	kernel/include/vaddr.h	18;"	d
PGSIZE	kernel/include/vaddr.h	20;"	d
PHYS_BASE	kernel/include/vaddr.h	53;"	d
PID0_PAGE_DIR	kernel/mem/paging.c	/^uint32_t *PID0_PAGE_DIR;$/;"	v
PIT_BCD	kernel/include/device/pit.h	27;"	d
PIT_BINARY	kernel/include/device/pit.h	26;"	d
PIT_CHANNEL0	kernel/include/device/pit.h	4;"	d
PIT_CHANNEL1	kernel/include/device/pit.h	5;"	d
PIT_CHANNEL2	kernel/include/device/pit.h	6;"	d
PIT_COMMAND	kernel/include/device/pit.h	7;"	d
PIT_COUNTER0	kernel/include/device/pit.h	9;"	d
PIT_COUNTER1	kernel/include/device/pit.h	10;"	d
PIT_COUNTER2	kernel/include/device/pit.h	11;"	d
PIT_FRQ_HZ	kernel/include/device/pit.h	30;"	d
PIT_HZ	kernel/include/device/pit.h	29;"	d
PIT_MODE0	kernel/include/device/pit.h	19;"	d
PIT_MODE1	kernel/include/device/pit.h	20;"	d
PIT_MODE2	kernel/include/device/pit.h	21;"	d
PIT_MODE3	kernel/include/device/pit.h	22;"	d
PIT_MODE4	kernel/include/device/pit.h	23;"	d
PIT_MODE5	kernel/include/device/pit.h	24;"	d
PIT_READBACK	kernel/include/device/pit.h	12;"	d
PIT_RW_COUNTER_LATCH	kernel/include/device/pit.h	14;"	d
PIT_RW_LBYTE	kernel/include/device/pit.h	15;"	d
PIT_RW_LMBYTE	kernel/include/device/pit.h	17;"	d
PIT_RW_MBYTE	kernel/include/device/pit.h	16;"	d
PLUS	kernel/stdio.c	/^        PLUS = 1 << 1,          \/* '+' *\/$/;"	e	enum:printf_conversion::__anon2	file:
PLUS	kernel/vsprintk.c	5;"	d	file:
POUND	kernel/stdio.c	/^        POUND = 1 << 3,         \/* '#' *\/$/;"	e	enum:printf_conversion::__anon2	file:
PRINT	boot/i386/boot1.asm	/^PRINT:$/;"	l
PRINTF_FORMAT	kernel/include/debug.h	10;"	d
PRINT_END	boot/i386/boot1.asm	/^PRINT_END:$/;"	l
PRINT_LOOP	boot/i386/boot1.asm	/^PRINT_LOOP:$/;"	l
PRINT_NEW_LINE	boot/i386/boot1.asm	/^PRINT_NEW_LINE:$/;"	l
PRINT_TO_SERIAL	boot/i386/boot1.asm	/^PRINT_TO_SERIAL:$/;"	l
PRIX16	kernel/include/inttypes.h	18;"	d
PRIX32	kernel/include/inttypes.h	25;"	d
PRIX64	kernel/include/inttypes.h	32;"	d
PRIX8	kernel/include/inttypes.h	11;"	d
PRIXMAX	kernel/include/inttypes.h	39;"	d
PRIXPTR	kernel/include/inttypes.h	46;"	d
PRId16	kernel/include/inttypes.h	13;"	d
PRId32	kernel/include/inttypes.h	20;"	d
PRId64	kernel/include/inttypes.h	27;"	d
PRId8	kernel/include/inttypes.h	6;"	d
PRIdMAX	kernel/include/inttypes.h	34;"	d
PRIdPTR	kernel/include/inttypes.h	41;"	d
PRIi16	kernel/include/inttypes.h	14;"	d
PRIi32	kernel/include/inttypes.h	21;"	d
PRIi64	kernel/include/inttypes.h	28;"	d
PRIi8	kernel/include/inttypes.h	7;"	d
PRIiMAX	kernel/include/inttypes.h	35;"	d
PRIiPTR	kernel/include/inttypes.h	42;"	d
PRIo16	kernel/include/inttypes.h	15;"	d
PRIo32	kernel/include/inttypes.h	22;"	d
PRIo64	kernel/include/inttypes.h	29;"	d
PRIo8	kernel/include/inttypes.h	8;"	d
PRIoMAX	kernel/include/inttypes.h	36;"	d
PRIoPTR	kernel/include/inttypes.h	43;"	d
PRIu16	kernel/include/inttypes.h	16;"	d
PRIu32	kernel/include/inttypes.h	23;"	d
PRIu64	kernel/include/inttypes.h	30;"	d
PRIu8	kernel/include/inttypes.h	9;"	d
PRIuMAX	kernel/include/inttypes.h	37;"	d
PRIuPTR	kernel/include/inttypes.h	44;"	d
PRIx16	kernel/include/inttypes.h	17;"	d
PRIx32	kernel/include/inttypes.h	24;"	d
PRIx64	kernel/include/inttypes.h	31;"	d
PRIx8	kernel/include/inttypes.h	10;"	d
PRIxMAX	kernel/include/inttypes.h	38;"	d
PRIxPTR	kernel/include/inttypes.h	45;"	d
PROC_BLOCK	kernel/include/proc/proc.h	/^	PROC_BLOCK,$/;"	e	enum:p_state
PROC_NUM_MAX	kernel/proc/proc.c	18;"	d	file:
PROC_RUN	kernel/include/proc/proc.h	/^	PROC_RUN,	$/;"	e	enum:p_state
PROC_STOP	kernel/include/proc/proc.h	/^	PROC_STOP,$/;"	e	enum:p_state
PROC_UNUSED	kernel/include/proc/proc.h	/^	PROC_UNUSED,$/;"	e	enum:p_state
PROC_ZOMBIE	kernel/include/proc/proc.h	/^	PROC_ZOMBIE,$/;"	e	enum:p_state
PROTECTED	boot/i386/boot1.asm	/^PROTECTED:$/;"	l
PTRDIFFT	kernel/stdio.c	/^        PTRDIFFT = 7,           \/* t *\/$/;"	e	enum:printf_conversion::__anon3	file:
PTRDIFF_MAX	kernel/include/stdint.h	47;"	d
PTRDIFF_MAX	kernel/include/type.h	72;"	d
PTRDIFF_MIN	kernel/include/stdint.h	46;"	d
PTRDIFF_MIN	kernel/include/type.h	71;"	d
PauseFlag	kernel/include/device/kbd.h	/^	int PauseFlag;	$/;"	m	struct:Key_Status_Struct
PrintChar	kernel/device/console.c	/^void PrintChar(int x, int y, const char String) $/;"	f
PrintCharToScreen	kernel/device/console.c	/^void PrintCharToScreen(int x, int y, const char *pString) $/;"	f
READY_TO_PRINT	boot/i386/boot1.asm	/^READY_TO_PRINT:$/;"	l
REAL	kernel/arch/i386/intr-stubs.S	/^#define REAL                                    \\$/;"	d
REFRESH_FPS	kernel/arch/interrupt.c	16;"	d	file:
REGSYS	kernel/arch/syscall.c	73;"	d	file:
ROUND_DOWN	kernel/include/round.h	14;"	d
ROUND_UP	kernel/include/round.h	6;"	d
SCHAR_MAX	kernel/include/limits.h	6;"	d
SCHAR_MIN	kernel/include/limits.h	7;"	d
SCREEN_SCROLL	kernel/include/device/console.h	17;"	d
SCROLL_END	kernel/device/console.c	26;"	d	file:
SECTORCOUNT	kernel/include/filesys/fs.h	20;"	d
SEEK_CUR	kernel/include/filesys/file.h	13;"	d
SEEK_END	kernel/include/filesys/file.h	14;"	d
SEEK_SET	kernel/include/filesys/file.h	12;"	d
SEL_KCSEG	kernel/include/loader.h	30;"	d
SEL_KDSEG	kernel/include/loader.h	31;"	d
SEL_NULL	kernel/include/loader.h	29;"	d
SERIAL_STDOUT	kernel/include/device/console.h	18;"	d
SETUP_GDT	boot/i386/boot1.asm	/^SETUP_GDT:$/;"	l
SHORT	kernel/stdio.c	/^        SHORT = 2,              \/* h *\/$/;"	e	enum:printf_conversion::__anon3	file:
SHRT_MAX	kernel/include/limits.h	18;"	d
SHRT_MIN	kernel/include/limits.h	19;"	d
SIGN	kernel/vsprintk.c	4;"	d	file:
SIZET	kernel/stdio.c	/^        SIZET = 8               \/* z *\/$/;"	e	enum:printf_conversion::__anon3	file:
SIZE_MAX	kernel/include/stdint.h	49;"	d
SIZE_MAX	kernel/include/type.h	74;"	d
SIZE_SCREEN	kernel/device/console.c	11;"	d	file:
SIZE_SCROLL	kernel/device/console.c	13;"	d	file:
SLEEP_FREQ	kernel/proc/proc.c	327;"	d	file:
SMALL	kernel/vsprintk.c	9;"	d	file:
SPACE	kernel/stdio.c	/^        SPACE = 1 << 2,         \/* ' ' *\/$/;"	e	enum:printf_conversion::__anon2	file:
SPACE	kernel/vsprintk.c	6;"	d	file:
SPECIAL	kernel/vsprintk.c	8;"	d	file:
SSU_BITMAP_BLOCK	kernel/include/filesys/fs.h	13;"	d
SSU_BLOCK_SIZE	kernel/include/filesys/fs.h	7;"	d
SSU_BOOT_BLOCK	kernel/include/filesys/fs.h	9;"	d
SSU_DATA_BLOCK	kernel/include/filesys/fs.h	15;"	d
SSU_INODE_BLOCK	kernel/include/filesys/fs.h	14;"	d
SSU_RESERVED_BLOCK	kernel/include/filesys/fs.h	10;"	d
SSU_SB_MAGIC	kernel/include/filesys/fs.h	6;"	d
SSU_SUPER_BLOCK	kernel/include/filesys/fs.h	12;"	d
SSU_TYPE_DIR	kernel/include/filesys/inode.h	16;"	d
SSU_TYPE_FILE	kernel/include/filesys/inode.h	15;"	d
SSU_TYPE_INVALID	kernel/include/filesys/inode.h	14;"	d
STACK_SIZE	kernel/proc/proc.c	17;"	d	file:
START	boot/i386/bootloader.asm	/^START:   $/;"	l
STDIN_FILENO	kernel/include/stdio.h	15;"	d
STDOUT_FILENO	kernel/include/stdio.h	16;"	d
STUB	kernel/arch/i386/intr-stubs.S	/^#define STUB(NUMBER, TYPE)                      \\$/;"	d
STUDENT_NAME	kernel/device/ata.c	13;"	d	file:
SYSCALL_ARG_MAX	kernel/arch/interrupt.c	254;"	d	file:
SYS_EXIT	kernel/include/syscall.h	/^	SYS_EXIT,$/;"	e	enum:SYS_LIST
SYS_FORK	kernel/include/syscall.h	/^	SYS_FORK = 0,$/;"	e	enum:SYS_LIST
SYS_LIST	kernel/include/syscall.h	/^enum SYS_LIST {$/;"	g
SYS_NUM	kernel/include/syscall.h	/^	SYS_NUM,$/;"	e	enum:SYS_LIST
SYS_OPEN	kernel/include/syscall.h	/^	SYS_OPEN,$/;"	e	enum:SYS_LIST
SYS_READ	kernel/include/syscall.h	/^	SYS_READ,$/;"	e	enum:SYS_LIST
SYS_SHUTDOWN	kernel/include/syscall.h	/^	SYS_SHUTDOWN,$/;"	e	enum:SYS_LIST
SYS_SSUREAD	kernel/include/syscall.h	/^	SYS_SSUREAD,$/;"	e	enum:SYS_LIST
SYS_WAIT	kernel/include/syscall.h	/^	SYS_WAIT,$/;"	e	enum:SYS_LIST
SYS_WRITE	kernel/include/syscall.h	/^	SYS_WRITE,$/;"	e	enum:SYS_LIST
ScrolllockFlag	kernel/include/device/kbd.h	/^	BOOL ScrolllockFlag;$/;"	m	struct:Key_Status_Struct
ShiftFlag	kernel/include/device/kbd.h	/^	BOOL ShiftFlag; 	$/;"	m	struct:Key_Status_Struct
Size	kernel/arch/interrupt.c	/^	unsigned short Size;$/;"	m	struct:_IDTR	file:
THREADS_LOADER_H	kernel/include/loader.h	2;"	d
THREADS_VADDR_H	kernel/include/vaddr.h	2;"	d
THR_EMPTY	kernel/device/console.c	19;"	d	file:
TIMER_MAX	kernel/arch/interrupt.c	15;"	d	file:
TOKNUM	kernel/proc/proc.c	408;"	d	file:
TRUE	kernel/include/type.h	12;"	d
Type	kernel/arch/interrupt.c	/^	unsigned short Type;$/;"	m	struct:_ID	file:
UCHAR_MAX	kernel/include/limits.h	8;"	d
UINT16_MAX	kernel/include/stdint.h	24;"	d
UINT16_MAX	kernel/include/type.h	49;"	d
UINT32_MAX	kernel/include/stdint.h	27;"	d
UINT32_MAX	kernel/include/type.h	52;"	d
UINT64_MAX	kernel/include/stdint.h	30;"	d
UINT64_MAX	kernel/include/type.h	55;"	d
UINT8_MAX	kernel/include/stdint.h	21;"	d
UINT8_MAX	kernel/include/type.h	46;"	d
UINTMAX_MAX	kernel/include/stdint.h	44;"	d
UINTMAX_MAX	kernel/include/type.h	69;"	d
UINTPTR_MAX	kernel/include/stdint.h	37;"	d
UINTPTR_MAX	kernel/include/type.h	62;"	d
UINT_MAX	kernel/include/limits.h	24;"	d
ULLONG_MAX	kernel/include/limits.h	32;"	d
ULONG_MAX	kernel/include/limits.h	28;"	d
UNUSED	kernel/include/debug.h	7;"	d
UNVALID_BLOCK	kernel/include/filesys/fs.h	8;"	d
USHRT_MAX	kernel/include/limits.h	20;"	d
UpdateKeyStat	kernel/device/kbd.c	/^void UpdateKeyStat(BYTE Scancode)$/;"	f
VERSION	kernel/arch/Main.c	/^const char* VERSION = "0.1.07";$/;"	v
VERSION	kernel/build/Main.s	/^VERSION:$/;"	l
VIDEODESCRIPTOR	boot/i386/boot1.asm	/^		VIDEODESCRIPTOR equ 0x18$/;"	d
VIDIO_MEMORY	kernel/device/console.c	14;"	d	file:
VOLNAME_LEN	kernel/include/filesys/fs.h	17;"	d
VSCREEN	kernel/device/console.c	10;"	d	file:
ZERO	kernel/stdio.c	/^        ZERO = 1 << 4,          \/* '0' *\/$/;"	e	enum:printf_conversion::__anon2	file:
ZEROPAD	kernel/vsprintk.c	3;"	d	file:
_ADDRESSOF	kernel/include/stdarg.h	6;"	d
_ID	kernel/arch/interrupt.c	/^typedef struct _ID$/;"	s	file:
_ID	kernel/arch/interrupt.c	/^} _ID;$/;"	t	typeref:struct:_ID	file:
_IDTR	kernel/arch/interrupt.c	/^typedef struct _IDTR$/;"	s	file:
_IDTR	kernel/arch/interrupt.c	/^} _IDTR;$/;"	t	typeref:struct:_IDTR	file:
_INTR_STUBS_H_	kernel/include/intr-stubs.h	2;"	d
_INTSIZEOF	kernel/include/stdarg.h	7;"	d
_SWITCH_H_	kernel/include/proc/switch.h	2;"	d
__ATA_H__	kernel/include/device/ata.h	2;"	d
__BITMAP_H__	kernel/include/bitmap.h	2;"	d
__BLOCK_H__	kernel/include/device/block.h	2;"	d
__CONSOLE_H__	kernel/include/device/console.h	2;"	d
__DEVICE_H__	kernel/include/device/device.h	2;"	d
__DO_SYSCALL_H__	kernel/include/do_syscall.h	2;"	d
__INODE_H__	kernel/include/filesys/inode.h	2;"	d
__INTERRUPT_H__	kernel/include/interrupt.h	2;"	d
__IO_H__	kernel/include/device/io.h	2;"	d
__IO_H__	kernel/include/device/io2.h	2;"	d
__KDB_H__	kernel/include/device/kbd.h	2;"	d
__LIB_CTYPE_H	kernel/include/ctype.h	2;"	d
__LIB_DEBUG_H	kernel/include/debug.h	2;"	d
__LIB_INTTYPES_H	kernel/include/inttypes.h	2;"	d
__LIB_PACKED_H	kernel/include/packed.h	2;"	d
__LIB_ROUND_H	kernel/include/round.h	2;"	d
__LIB_STDBOOL_H	kernel/include/stdbool.h	2;"	d
__LIB_STDDEF_H	kernel/include/stddef.h	2;"	d
__LIB_STDINT_H	kernel/include/stdint.h	2;"	d
__LIB_STDIO_H	kernel/include/stdio.h	2;"	d
__LIB_STDLIB_H	kernel/include/stdlib.h	2;"	d
__LIB_STRING_H	kernel/include/string.h	2;"	d
__LIMITS_H__	kernel/include/limits.h	2;"	d
__LIST_H__	kernel/include/list.h	2;"	d
__MALLOC_H__	kernel/include/mem/malloc.h	2;"	d
__MEM_H__	kernel/include/mem/mm.h	2;"	d
__PAGING_H__	kernel/include/mem/paging.h	2;"	d
__PALLOC_H__	kernel/include/mem/palloc.h	2;"	d
__PIT_H__	kernel/include/device/pit.h	2;"	d
__PROC_H__	kernel/include/proc/proc.h	2;"	d
__SCHED_H__	kernel/include/proc/sched.h	2;"	d
__SSULIB_H__	kernel/include/ssulib.h	2;"	d
__SSU_FILE_H__	kernel/include/filesys/file.h	2;"	d
__SSU_FS_H__	kernel/include/filesys/fs.h	2;"	d
__STDARG_H__	kernel/include/stdarg.h	2;"	d
__SYNCH_H__	kernel/include/synch.h	2;"	d
__SYSCALL_H__	kernel/include/syscall.h	2;"	d
__TYPE_H__	kernel/include/type.h	2;"	d
__bool_true_false_are_defined	kernel/include/stdbool.h	7;"	d
__printf	kernel/stdio.c	/^__printf (const char *format,$/;"	f
__vprintf	kernel/stdio.c	/^__vprintf (const char *format, va_list args,$/;"	f
a_s	kernel/device/console.c	/^bool a_s = TRUE;$/;"	v
arch	kernel/Makefile	/^arch = .\/arch$/;"	m
archx86	kernel/Makefile	/^archx86 = .\/arch\/i386$/;"	m
ata	kernel/include/device/ata.h	/^struct ata_interface ata;$/;"	v	typeref:struct:ata_interface
ata0_blk_dev	kernel/include/device/ata.h	/^struct blk_dev ata0_blk_dev;$/;"	v	typeref:struct:blk_dev
ata0_blk_dev	kernel/include/device/block.h	/^struct blk_dev ata0_blk_dev;$/;"	v	typeref:struct:blk_dev
ata1_blk_dev	kernel/include/device/ata.h	/^struct blk_dev ata1_blk_dev;$/;"	v	typeref:struct:blk_dev
ata1_blk_dev	kernel/include/device/block.h	/^struct blk_dev ata1_blk_dev;$/;"	v	typeref:struct:blk_dev
ata_cmd	kernel/device/ata.c	/^ata_cmd(struct ata_device *device, uint8_t command)$/;"	f	file:
ata_device	kernel/include/device/ata.h	/^struct ata_device$/;"	s
ata_interface	kernel/include/device/ata.h	/^struct ata_interface$/;"	s
ata_io_ready	kernel/device/ata.c	/^ata_io_ready (struct ata_device *d, blk_sec_t sec_num)$/;"	f	file:
ata_ops	kernel/device/ata.c	/^static struct blk_dev_ops ata_ops =$/;"	v	typeref:struct:blk_dev_ops	file:
ata_read	kernel/device/ata.c	/^ata_read (void *dev, blk_sec_t sec_num, void *buf)$/;"	f	file:
ata_write	kernel/device/ata.c	/^ata_write (void *dev, blk_sec_t sec_num, const void *buf)$/;"	f	file:
bAtt	kernel/include/device/console.h	/^		unsigned char bAtt;$/;"	m	struct:kChStruct
bCh	kernel/include/device/console.h	/^		unsigned char bCh;$/;"	m	struct:kChStruct
balloc	kernel/filesys/fs.c	/^balloc(struct bitmap *b, unsigned *index)$/;"	f
barrier	kernel/include/synch.h	50;"	d
base	kernel/mem/palloc.c	/^	uint32_t *base;                      \/* Base of pool. *\/$/;"	m	struct:pool	file:
base	kernel/stdio.c	/^    int base;                   \/* Base. *\/$/;"	m	struct:integer_base	file:
base_X	kernel/stdio.c	/^static const struct integer_base base_X = {16, "0123456789ABCDEF", 'X', 4};$/;"	v	typeref:struct:integer_base	file:
base_d	kernel/stdio.c	/^static const struct integer_base base_d = {10, "0123456789", 0, 3};$/;"	v	typeref:struct:integer_base	file:
base_o	kernel/stdio.c	/^static const struct integer_base base_o = {8, "01234567", 0, 3};$/;"	v	typeref:struct:integer_base	file:
base_x	kernel/stdio.c	/^static const struct integer_base base_x = {16, "0123456789abcdef", 'x', 4};$/;"	v	typeref:struct:integer_base	file:
bit_cnt	kernel/include/bitmap.h	/^	size_t bit_cnt;     \/* Number of bits. *\/$/;"	m	struct:bitmap
bit_mask	kernel/bitmap.c	/^bit_mask (size_t bit_idx) $/;"	f	file:
bitmap	kernel/include/bitmap.h	/^struct bitmap$/;"	s
bitmap_all	kernel/bitmap.c	/^bitmap_all (const struct bitmap *b, size_t start, size_t cnt) $/;"	f
bitmap_any	kernel/bitmap.c	/^bitmap_any (const struct bitmap *b, size_t start, size_t cnt) $/;"	f
bitmap_buf_size	kernel/bitmap.c	/^bitmap_buf_size (size_t bit_cnt) $/;"	f
bitmap_contains	kernel/bitmap.c	/^bitmap_contains (const struct bitmap *b, size_t start, size_t cnt, bool value) $/;"	f
bitmap_count	kernel/bitmap.c	/^bitmap_count (const struct bitmap *b, size_t start, size_t cnt, bool value) $/;"	f
bitmap_create_in_buf	kernel/bitmap.c	/^bitmap_create_in_buf (size_t bit_cnt, void *block, size_t block_size)\/\/ UNUSED)$/;"	f
bitmap_file_size	kernel/bitmap.c	/^bitmap_file_size (const struct bitmap *b) $/;"	f
bitmap_flip	kernel/bitmap.c	/^bitmap_flip (struct bitmap *b, size_t bit_idx) $/;"	f
bitmap_mark	kernel/bitmap.c	/^bitmap_mark (struct bitmap *b, size_t bit_idx) $/;"	f
bitmap_none	kernel/bitmap.c	/^bitmap_none (const struct bitmap *b, size_t start, size_t cnt) $/;"	f
bitmap_read	kernel/bitmap.c	/^bitmap_read (struct bitmap *b, struct file *file) $/;"	f
bitmap_reset	kernel/bitmap.c	/^bitmap_reset (struct bitmap *b, size_t bit_idx) $/;"	f
bitmap_scan	kernel/bitmap.c	/^bitmap_scan (const struct bitmap *b, size_t start, size_t cnt, bool value) $/;"	f
bitmap_scan_and_flip	kernel/bitmap.c	/^bitmap_scan_and_flip (struct bitmap *b, size_t start, size_t cnt, bool value)$/;"	f
bitmap_set	kernel/bitmap.c	/^bitmap_set (struct bitmap *b, size_t idx, bool value) $/;"	f
bitmap_set_all	kernel/bitmap.c	/^bitmap_set_all (struct bitmap *b, bool value) $/;"	f
bitmap_set_multiple	kernel/bitmap.c	/^bitmap_set_multiple (struct bitmap *b, size_t start, size_t cnt, bool value) $/;"	f
bitmap_size	kernel/bitmap.c	/^bitmap_size (const struct bitmap *b)$/;"	f
bitmap_test	kernel/bitmap.c	/^bitmap_test (const struct bitmap *b, size_t idx) $/;"	f
bitmap_write	kernel/bitmap.c	/^bitmap_write (const struct bitmap *b, struct file *file)$/;"	f
bitmapblock	kernel/filesys/fs.c	/^static unsigned char bitmapblock[SSU_BLOCK_SIZE];$/;"	v	file:
bits	kernel/include/bitmap.h	/^	elem_type *bits;    \/* Elements that represent bits. *\/$/;"	m	struct:bitmap
blk_cnt_t	kernel/include/device/block.h	/^typedef uint32_t blk_cnt_t;$/;"	t
blk_count	kernel/include/device/block.h	/^    blk_cnt_t blk_count;$/;"	m	struct:blk_dev
blk_dev	kernel/include/device/block.h	/^struct blk_dev$/;"	s
blk_dev_ops	kernel/include/device/block.h	/^struct blk_dev_ops$/;"	s
blk_dev_read	kernel/device/block.c	/^blk_dev_read (struct blk_dev *blk_dev, blk_sec_t sector, void *buf)$/;"	f
blk_dev_register	kernel/device/block.c	/^void blk_dev_register (struct blk_dev * blk_dev, blk_dev_t type,$/;"	f
blk_dev_t	kernel/include/device/block.h	/^typedef uint32_t blk_dev_t;$/;"	t
blk_dev_write	kernel/device/block.c	/^blk_dev_write (struct blk_dev *blk_dev, blk_sec_t sector, const void *buf)$/;"	f
blk_sec_t	kernel/include/device/block.h	/^typedef uint32_t blk_sec_t;$/;"	t
blk_size	kernel/include/device/block.h	/^    blk_size_t blk_size;                 $/;"	m	struct:blk_dev
blk_size_t	kernel/include/device/block.h	/^typedef uint32_t blk_size_t;$/;"	t
bool	kernel/include/type.h	/^typedef char bool;$/;"	t
buf_e	kernel/device/console.c	25;"	d	file:
buf_head	kernel/device/kbd.c	/^int buf_head, buf_tail;$/;"	v
buf_p	kernel/device/console.c	/^char *buf_p;	$/;"	v
buf_s	kernel/device/console.c	/^char buf_s[SIZE_SCROLL]; $/;"	v
buf_tail	kernel/device/kbd.c	/^int buf_head, buf_tail;$/;"	v
buf_w	kernel/device/console.c	/^char *buf_w;	$/;"	v
byte_cnt	kernel/bitmap.c	/^byte_cnt (size_t bit_cnt)$/;"	f	file:
cat_proc	kernel/proc/proc.c	/^void cat_proc(void *aux)$/;"	f
change_dir	kernel/filesys/inode.c	/^int change_dir(struct inode *cwd, char *path)$/;"	f
child_pid	kernel/include/proc/proc.h	/^	int child_pid;						\/\/ 종료된 자식$/;"	m	struct:process
clrScreen	kernel/device/console.c	/^void clrScreen(void) $/;"	f
clr_tmp_block	kernel/device/ata.c	/^void clr_tmp_block(void)$/;"	f
cmd	kernel/proc/proc.c	/^	char* cmd;$/;"	m	struct:__anon1	file:
condition	kernel/include/synch.h	/^struct condition $/;"	s
cs	kernel/include/interrupt.h	/^	uint16_t cs, :16;           \/* Code segment for eip. *\/$/;"	m	struct:intr_frame
cur_process	kernel/proc/proc.c	/^struct process *cur_process;$/;"	v	typeref:struct:process
cwd	kernel/include/proc/proc.h	/^	struct inode * cwd;$/;"	m	struct:process	typeref:struct:process::inode
d_list	kernel/proc/proc.c	/^struct list d_list;		\/\/ Deleted Process List$/;"	v	typeref:struct:list
de_ino	kernel/include/filesys/inode.h	/^	uint32_t de_ino;			\/* Inode number *\/$/;"	m	struct:direntry
de_name	kernel/include/filesys/inode.h	/^	char de_name[FILENAME_LEN];		\/* Filename *\/$/;"	m	struct:direntry
default_handler	kernel/arch/interrupt.c	/^void default_handler(struct intr_frame *iframe)$/;"	f
delay_ata_for	kernel/device/ata.c	/^delay_ata_for(struct ata_device *device, int what_for)$/;"	f	file:
detect_mem	kernel/mem/mm.c	/^void detect_mem()$/;"	f
dev_shutdown	kernel/device/device.c	/^void dev_shutdown(void)$/;"	f
device	kernel/Makefile	/^device = .\/device$/;"	m
device_info	kernel/include/device/block.h	/^    void *device_info;                        \/* Extra data owned by driver. *\/$/;"	m	struct:blk_dev
digits	kernel/stdio.c	/^    const char *digits;         \/* Collection of digits. *\/$/;"	m	struct:integer_base	file:
direntry	kernel/include/filesys/inode.h	/^struct direntry {$/;"	s
disk_handler	kernel/device/ata.c	/^disk_handler (struct intr_frame *iframe) $/;"	f	file:
do_div	kernel/vsprintk.c	13;"	d	file:
do_exit	kernel/arch/do_syscall.c	/^void do_exit(int status)$/;"	f
do_fork	kernel/arch/do_syscall.c	/^pid_t do_fork(proc_func func, void* aux1, void* aux2)$/;"	f
do_open	kernel/arch/do_syscall.c	/^int do_open(const char *pathname, int flags)$/;"	f
do_read	kernel/arch/do_syscall.c	/^int do_read(int fd, char *buf, int len)$/;"	f
do_sched_on_return	kernel/arch/interrupt.c	/^void do_sched_on_return(void)$/;"	f
do_shutdown	kernel/arch/do_syscall.c	/^void do_shutdown(void)$/;"	f
do_ssuread	kernel/arch/do_syscall.c	/^int do_ssuread(void)$/;"	f
do_wait	kernel/arch/do_syscall.c	/^pid_t do_wait(int *status)$/;"	f
do_write	kernel/arch/do_syscall.c	/^int do_write(int fd, const char *buf, int len)$/;"	f
ds	kernel/include/interrupt.h	/^	uint16_t ds, :16;           \/* Saved DS segment register. *\/$/;"	m	struct:intr_frame
dw	boot/i386/bootloader.asm	/^dw	0xaa55$/;"	l
eax	kernel/include/interrupt.h	/^	uint32_t eax;               \/* Saved EAX. *\/$/;"	m	struct:intr_frame
ebp	kernel/include/interrupt.h	/^	uint32_t ebp;               \/* Saved EBP. *\/$/;"	m	struct:intr_frame
ebx	kernel/include/interrupt.h	/^	uint32_t ebx;               \/* Saved EBX. *\/$/;"	m	struct:intr_frame
ecx	kernel/include/interrupt.h	/^	uint32_t ecx;               \/* Saved ECX. *\/$/;"	m	struct:intr_frame
edi	kernel/include/interrupt.h	/^	uint32_t edi;               \/* Saved EDI. *\/$/;"	m	struct:intr_frame
edx	kernel/include/interrupt.h	/^	uint32_t edx;               \/* Saved EDX. *\/$/;"	m	struct:intr_frame
eflags	kernel/include/interrupt.h	/^	uint32_t eflags;            \/* Saved CPU flags. *\/$/;"	m	struct:intr_frame
eip	kernel/include/interrupt.h	/^	void (*eip) (void);         \/* Next instruction to execute. *\/$/;"	m	struct:intr_frame
elem_all	kernel/include/proc/proc.h	/^	struct list_elem elem_all;		\/\/프로세스 전체 리스트 노드$/;"	m	struct:process	typeref:struct:process::list_elem
elem_cnt	kernel/bitmap.c	/^elem_cnt (size_t bit_cnt)$/;"	f	file:
elem_idx	kernel/bitmap.c	/^elem_idx (size_t bit_idx) $/;"	f	file:
elem_stat	kernel/include/proc/proc.h	/^	struct list_elem elem_stat;		\/\/프로세스 상태 별 리스트 노드$/;"	m	struct:process	typeref:struct:process::list_elem
elem_type	kernel/include/bitmap.h	/^typedef unsigned long elem_type;$/;"	t
error_code	kernel/include/interrupt.h	/^	uint32_t error_code;        \/* Error code. *\/$/;"	m	struct:intr_frame
es	kernel/include/interrupt.h	/^	uint16_t es, :16;           \/* Saved ES segment register. *\/$/;"	m	struct:intr_frame
esi	kernel/include/interrupt.h	/^	uint32_t esi;               \/* Saved ESI. *\/$/;"	m	struct:intr_frame
esp	kernel/include/interrupt.h	/^	void *esp;                  \/* Saved stack pointer. *\/$/;"	m	struct:intr_frame
esp_dummy	kernel/include/interrupt.h	/^	uint32_t esp_dummy;         \/* Not used. *\/$/;"	m	struct:intr_frame
exit	kernel/arch/syscall.c	/^void exit(int status)$/;"	f
exit_status	kernel/include/proc/proc.h	/^	int exit_status;					\/\/ 종료 상태$/;"	m	struct:process
f	Makefile	/^	dd if=disk.bin of=disk.img bs=10240000 seek=0 count=1 conv=notrunc$/;"	m
false	kernel/include/stdbool.h	6;"	d
false	kernel/include/type.h	22;"	d
file	kernel/include/proc/proc.h	/^	struct ssufile *file[NR_FILEDES];$/;"	m	struct:process	typeref:struct:process::ssufile
file_open	kernel/filesys/file.c	/^int file_open(struct inode *inode, int flags, int mode)$/;"	f
file_read	kernel/filesys/file.c	/^int file_read(struct inode *inode, size_t offset, void *buf, size_t len)$/;"	f
file_write	kernel/filesys/file.c	/^int file_write(struct inode *inode, size_t offset, void *buf, size_t len)$/;"	f
filesys	kernel/Makefile	/^filesys = .\/filesys$/;"	m
filesys	kernel/include/filesys/fs.h	/^static struct ssu_fs filesys;$/;"	v	typeref:struct:ssu_fs
find_end_of_run	kernel/list.c	/^find_end_of_run (struct list_elem *a, struct list_elem *b,$/;"	f	file:
flags	kernel/include/filesys/file.h	/^	uint8_t flags;$/;"	m	struct:ssufile
flags	kernel/stdio.c	/^    flags;$/;"	m	struct:printf_conversion	typeref:enum:printf_conversion::__anon2	file:
fork	kernel/arch/syscall.c	/^pid_t fork(proc_func func, void* aux1, void* aux2)$/;"	f
format_integer	kernel/stdio.c	/^format_integer (unsigned int value, bool is_signed, bool negative, $/;"	f	file:
format_string	kernel/stdio.c	/^format_string (const char *string, int length,$/;"	f	file:
frame_pointer	kernel/include/interrupt.h	/^	void *frame_pointer;        \/* Saved EBP (frame pointer). *\/$/;"	m	struct:intr_frame
fs	kernel/include/interrupt.h	/^	uint16_t fs, :16;           \/* Saved FS segment register. *\/$/;"	m	struct:intr_frame
fs_blkmap	kernel/include/filesys/fs.h	/^	struct bitmap *fs_blkmap;$/;"	m	struct:ssu_fs	typeref:struct:ssu_fs::bitmap
fs_device	kernel/include/filesys/fs.h	/^	struct blk_dev *fs_device;$/;"	m	struct:ssu_fs	typeref:struct:ssu_fs::blk_dev
fs_inodemap	kernel/include/filesys/fs.h	/^	struct bitmap *fs_inodemap;$/;"	m	struct:ssu_fs	typeref:struct:ssu_fs::bitmap
fs_mount	kernel/filesys/fs.c	/^fs_mount(struct ssu_fs *fs, struct blk_dev *dev)$/;"	f
fs_readblock	kernel/filesys/fs.c	/^int fs_readblock(struct ssu_fs *fs, uint32_t blknum, char *buf)$/;"	f
fs_sb	kernel/include/filesys/fs.h	/^	struct ssu_superblock fs_sb;$/;"	m	struct:ssu_fs	typeref:struct:ssu_fs::ssu_superblock
fs_writeblock	kernel/filesys/fs.c	/^int fs_writeblock(struct ssu_fs *fs, uint32_t blknum, const char *buf)$/;"	f
func	kernel/proc/proc.c	/^	void* func;$/;"	m	struct:__anon1	file:
generic_read	kernel/ssulib.c	/^int generic_read(int fd, void *buf, size_t len)$/;"	f
generic_write	kernel/ssulib.c	/^int generic_write(int fd, void *buf, size_t len)$/;"	f
getEIP	kernel/proc/proc.c	/^void* getEIP()$/;"	f
getMemSize	kernel/arch/i386/mem.asm	/^getMemSize:		$/;"	l
getToken	kernel/ssulib.c	/^int getToken(char* buf, char token[][BUFSIZ], int max_tok)$/;"	f
getValidPid	kernel/proc/proc.c	/^pid_t getValidPid(int *idx) {$/;"	f
get_cur_pd	kernel/mem/paging.c	/^uint32_t* get_cur_pd()$/;"	f
get_curde	kernel/filesys/inode.c	/^int get_curde(struct inode *cwd, struct direntry * de)$/;"	f
get_next_proc	kernel/proc/sched.c	/^struct process* get_next_proc(void) {$/;"	f
get_ticks	kernel/arch/interrupt.c	/^unsigned long get_ticks(void)$/;"	f
getkbd	kernel/ssulib.c	/^bool getkbd(char *buf, int len) $/;"	f
group	kernel/stdio.c	/^    int group;                  \/* Number of digits to group with ' flag. *\/$/;"	m	struct:integer_base	file:
gs	kernel/include/interrupt.h	/^	uint16_t gs, :16;           \/* Saved GS segment register. *\/$/;"	m	struct:intr_frame
handlers	kernel/arch/interrupt.c	/^intr_handler_func *handlers[INTR_MAX];	\/\/실제 인터럽트 핸들러 들$/;"	v
head	kernel/include/list.h	/^    struct list_elem head;      \/* List head. *\/$/;"	m	struct:list	typeref:struct:list::list_elem
hexDump	kernel/proc/proc.c	/^void hexDump (void *addr, int len) {$/;"	f
hex_dump	kernel/stdio.c	/^hex_dump (uintptr_t ofs, const void *buf_, size_t size, bool ascii)$/;"	f
holder	kernel/include/synch.h	/^      struct process *holder;      \/* Process holding lock (for debugging). *\/$/;"	m	struct:lock	typeref:struct:lock::process
idle	kernel/include/proc/proc.h	/^proc_func idle;						\/\/idle 함수$/;"	v
idle	kernel/proc/proc.c	/^void idle(void* aux)$/;"	f
idt	kernel/arch/interrupt.c	/^_ID     *idt;$/;"	v
in_external_intr	kernel/arch/interrupt.c	/^static bool in_external_intr;   \/* Are we processing an external interrupt? *\/$/;"	v	file:
inb	kernel/arch/i386/io.asm	/^inb:$/;"	l
init_ata	kernel/device/ata.c	/^init_ata(void) $/;"	f
init_console	kernel/device/console.c	/^void init_console(void)$/;"	f
init_filesystem	kernel/filesys/fs.c	/^void init_filesystem(void)$/;"	f
init_inode_table	kernel/filesys/inode.c	/^void init_inode_table(struct ssu_fs *fs)$/;"	f
init_intr	kernel/arch/interrupt.c	/^int init_intr(void)$/;"	f
init_kbd	kernel/device/kbd.c	/^void init_kbd(void)$/;"	f
init_paging	kernel/mem/paging.c	/^void init_paging()$/;"	f
init_palloc	kernel/mem/palloc.c	/^init_palloc (void) $/;"	f
init_pit	kernel/device/pit.c	/^void init_pit(void)  $/;"	f
init_pool	kernel/mem/palloc.c	/^init_pool (struct pool *p, void *base, size_t page_cnt, const char *name) $/;"	f	file:
init_proc	kernel/proc/proc.c	/^void init_proc()$/;"	f
init_syscall	kernel/arch/syscall.c	/^void init_syscall(void)$/;"	f
inl	kernel/arch/i386/io.asm	/^inl:$/;"	l
inode	kernel/include/filesys/file.h	/^	struct inode *inode;$/;"	m	struct:ssufile	typeref:struct:ssufile::inode
inode	kernel/include/filesys/inode.h	/^struct inode$/;"	s
inode_create	kernel/filesys/inode.c	/^struct inode* inode_create(struct ssu_fs *fs, uint16_t type)$/;"	f
inode_open	kernel/filesys/inode.c	/^struct inode *inode_open(const char *pathname)$/;"	f
inode_read	kernel/filesys/inode.c	/^int inode_read(struct inode * in, uint32_t offset, char * buf, int len)$/;"	f
inode_tbl	kernel/include/filesys/inode.h	/^struct inode inode_tbl[NUM_INODE];$/;"	v	typeref:struct:inode
inode_write	kernel/filesys/inode.c	/^int inode_write(struct inode * in, uint32_t offset, char * buf, int len)$/;"	f
inplace_merge	kernel/list.c	/^inplace_merge (struct list_elem *a0, struct list_elem *a1b0,$/;"	f	file:
insw	kernel/include/device/io.h	/^insw (uint16_t port, void *addr, size_t cnt)$/;"	f
insw	kernel/include/device/io2.h	/^insw (uint16_t port, void *addr, size_t cnt)$/;"	f
int16_t	kernel/include/stdint.h	/^typedef signed short int int16_t;$/;"	t
int16_t	kernel/include/type.h	/^typedef signed short int int16_t;$/;"	t
int32_t	kernel/include/stdint.h	/^typedef signed int int32_t;$/;"	t
int32_t	kernel/include/type.h	/^typedef signed int int32_t;$/;"	t
int64_t	kernel/include/stdint.h	/^typedef signed long long int int64_t;$/;"	t
int64_t	kernel/include/type.h	/^typedef signed long long int int64_t;$/;"	t
int8_t	kernel/include/stdint.h	/^typedef signed char int8_t;$/;"	t
int8_t	kernel/include/type.h	/^typedef signed char int8_t;$/;"	t
integer_base	kernel/stdio.c	/^struct integer_base $/;"	s	file:
intmax_t	kernel/include/stdint.h	/^typedef int64_t intmax_t;$/;"	t
intmax_t	kernel/include/type.h	/^typedef int64_t intmax_t;$/;"	t
intptr_t	kernel/include/stdint.h	/^typedef int32_t intptr_t;$/;"	t
intptr_t	kernel/include/type.h	/^typedef int32_t intptr_t;$/;"	t
intr_common	kernel/arch/interrupt.c	/^void intr_common(struct intr_frame *iframe)$/;"	f
intr_context	kernel/arch/interrupt.c	/^bool intr_context (void)$/;"	f
intr_disable	kernel/arch/interrupt.c	/^enum intr_level intr_disable (void) $/;"	f
intr_enable	kernel/arch/interrupt.c	/^enum intr_level intr_enable (void) $/;"	f
intr_entry	kernel/arch/i386/intr-stubs.S	/^intr_entry:$/;"	l
intr_exit	kernel/arch/i386/intr-stubs.S	/^intr_exit:$/;"	l
intr_frame	kernel/include/interrupt.h	/^struct intr_frame$/;"	s
intr_get_level	kernel/arch/interrupt.c	/^enum intr_level intr_get_level (void) $/;"	f
intr_handler_func	kernel/include/interrupt.h	/^typedef void intr_handler_func (struct intr_frame *);$/;"	t
intr_level	kernel/include/interrupt.h	/^enum intr_level$/;"	g
intr_set_level	kernel/arch/interrupt.c	/^enum intr_level intr_set_level (enum intr_level level) $/;"	f
intr_stub_func	kernel/include/intr-stubs.h	/^typedef void intr_stub_func (void);$/;"	t
intr_stubs	kernel/arch/i386/intr-stubs.S	/^intr_stubs:$/;"	l
inw	kernel/include/device/io2.h	/^inw (uint16_t port)$/;"	f
iowait	kernel/arch/i386/io.asm	/^iowait:$/;"	l
irq	kernel/include/device/ata.h	/^  uint8_t irq;$/;"	m	struct:ata_device
isEmpty	kernel/device/kbd.c	/^bool isEmpty()$/;"	f
isFull	kernel/device/kbd.c	/^bool isFull()$/;"	f
is_digit	kernel/vsprintk.c	11;"	d	file:
is_head	kernel/list.c	/^is_head (struct list_elem *elem)$/;"	f	file:
is_interior	kernel/list.c	/^is_interior (struct list_elem *elem)$/;"	f	file:
is_kernel_vaddr	kernel/include/vaddr.h	/^is_kernel_vaddr (const void *vaddr) $/;"	f
is_sorted	kernel/list.c	/^is_sorted (struct list_elem *a, struct list_elem *b,$/;"	f	file:
is_tail	kernel/list.c	/^is_tail (struct list_elem *elem)$/;"	f	file:
is_user_vaddr	kernel/include/vaddr.h	/^is_user_vaddr (const void *vaddr) $/;"	f
isalnum	kernel/include/ctype.h	/^static inline int isalnum (int c) { return isalpha (c) || isdigit (c); }$/;"	f
isalpha	kernel/include/ctype.h	/^static inline int isalpha (int c) { return islower (c) || isupper (c); }$/;"	f
isascii	kernel/include/ctype.h	/^static inline int isascii (int c) { return c >= 0 && c < 128; }$/;"	f
isblank	kernel/include/ctype.h	/^static inline int isblank (int c) { return c == ' ' || c == '\\t'; }$/;"	f
iscntrl	kernel/include/ctype.h	/^static inline int iscntrl (int c) { return (c >= 0 && c < 32) || c == 127; }$/;"	f
isdigit	kernel/include/ctype.h	/^static inline int isdigit (int c) { return c >= '0' && c <= '9'; }$/;"	f
isgraph	kernel/include/ctype.h	/^static inline int isgraph (int c) { return c > 32 && c < 127; }$/;"	f
islower	kernel/include/ctype.h	/^static inline int islower (int c) { return c >= 'a' && c <= 'z'; }$/;"	f
isprint	kernel/include/ctype.h	/^static inline int isprint (int c) { return c >= 32 && c < 127; }$/;"	f
ispunct	kernel/include/ctype.h	/^static inline int ispunct (int c) {$/;"	f
isspace	kernel/include/ctype.h	/^static inline int isspace (int c) {$/;"	f
isupper	kernel/include/ctype.h	/^static inline int isupper (int c) { return c >= 'A' && c <= 'Z'; }$/;"	f
isxdigit	kernel/include/ctype.h	/^static inline int isxdigit (int c) {$/;"	f
jmp	boot/i386/bootloader.asm	/^jmp		0x0900:0x0000$/;"	l
jump_ata	kernel/device/ata.c	/^jump_ata (struct ata_device *device) $/;"	f	file:
kChStruct	kernel/include/device/console.h	/^typedef struct kChStruct$/;"	s
kbd_buf	kernel/device/kbd.c	/^static char kbd_buf[BUFSIZ];$/;"	v	file:
kbd_handler	kernel/device/kbd.c	/^void kbd_handler(struct intr_frame *iframe)$/;"	f
kbd_read_char	kernel/device/kbd.c	/^char kbd_read_char()$/;"	f
kernel1_proc	kernel/proc/proc.c	/^void kernel1_proc(void* aux)$/;"	f
kernel2_proc	kernel/proc/proc.c	/^void kernel2_proc(void* aux)$/;"	f
last_mask	kernel/bitmap.c	/^last_mask (const struct bitmap *b) $/;"	f	file:
lately_pid	kernel/proc/proc.c	/^static int lately_pid;		\/\/init vaule = -1$/;"	v	file:
length	kernel/stdio.c	/^    int length;         \/* Length of output string. *\/$/;"	m	struct:vsnprintf_aux	file:
less_time_sleep	kernel/proc/proc.c	/^bool less_time_sleep(const struct list_elem *a, const struct list_elem *b,void *aux)$/;"	f
lib	kernel/Makefile	/^lib = .\/lib$/;"	m
list	kernel/include/list.h	/^struct list $/;"	s
list_back	kernel/list.c	/^list_back (struct list *list)$/;"	f
list_begin	kernel/list.c	/^list_begin (struct list *list)$/;"	f
list_elem	kernel/include/list.h	/^struct list_elem $/;"	s
list_empty	kernel/list.c	/^list_empty (struct list *list)$/;"	f
list_end	kernel/list.c	/^list_end (struct list *list)$/;"	f
list_entry	kernel/include/list.h	107;"	d
list_front	kernel/list.c	/^list_front (struct list *list)$/;"	f
list_head	kernel/list.c	/^list_head (struct list *list) $/;"	f
list_init	kernel/list.c	/^list_init (struct list *list)$/;"	f
list_insert	kernel/list.c	/^list_insert (struct list_elem *before, struct list_elem *elem)$/;"	f
list_insert_ordered	kernel/list.c	/^list_insert_ordered (struct list *list, struct list_elem *elem,$/;"	f
list_less_func	kernel/include/list.h	/^typedef bool list_less_func (const struct list_elem *a,$/;"	t
list_max	kernel/list.c	/^list_max (struct list *list, list_less_func *less, void *aux)$/;"	f
list_min	kernel/list.c	/^list_min (struct list *list, list_less_func *less, void *aux)$/;"	f
list_next	kernel/list.c	/^list_next (struct list_elem *elem)$/;"	f
list_pop_back	kernel/list.c	/^list_pop_back (struct list *list)$/;"	f
list_pop_front	kernel/list.c	/^list_pop_front (struct list *list)$/;"	f
list_prev	kernel/list.c	/^list_prev (struct list_elem *elem)$/;"	f
list_push_back	kernel/list.c	/^list_push_back (struct list *list, struct list_elem *elem)$/;"	f
list_push_front	kernel/list.c	/^list_push_front (struct list *list, struct list_elem *elem)$/;"	f
list_rbegin	kernel/list.c	/^list_rbegin (struct list *list) $/;"	f
list_remove	kernel/list.c	/^list_remove (struct list_elem *elem)$/;"	f
list_rend	kernel/list.c	/^list_rend (struct list *list) $/;"	f
list_reverse	kernel/list.c	/^list_reverse (struct list *list)$/;"	f
list_segment	kernel/filesys/inode.c	/^void list_segment(struct inode *cwd)$/;"	f
list_size	kernel/list.c	/^list_size (struct list *list)$/;"	f
list_sort	kernel/list.c	/^list_sort (struct list *list, list_less_func *less, void *aux)$/;"	f
list_splice	kernel/list.c	/^list_splice (struct list_elem *before,$/;"	f
list_tail	kernel/list.c	/^list_tail (struct list *list) $/;"	f
list_unique	kernel/list.c	/^list_unique (struct list *list, struct list *duplicates,$/;"	f
lock	kernel/include/synch.h	/^struct lock $/;"	s
lock	kernel/mem/palloc.c	/^	struct lock lock;                   \/* Mutual exclusion. *\/$/;"	m	struct:pool	typeref:struct:pool::lock	file:
lock_acquire	kernel/synch.c	/^lock_acquire (struct lock *lock)$/;"	f
lock_held_by_current_thread	kernel/synch.c	/^lock_held_by_current_thread (const struct lock *lock) $/;"	f
lock_init	kernel/synch.c	/^lock_init (struct lock *lock)$/;"	f
lock_pid_simple	kernel/proc/proc.c	/^static int lock_pid_simple; \/\/1 : lock, 0 : unlock$/;"	v	file:
lock_release	kernel/synch.c	/^lock_release (struct lock *lock) $/;"	f
lock_try_acquire	kernel/synch.c	/^lock_try_acquire (struct lock *lock)$/;"	f
login_proc	kernel/proc/proc.c	/^void login_proc(void* aux)$/;"	f
ls_proc	kernel/proc/proc.c	/^void ls_proc(void *aux)$/;"	f
lseek_proc	kernel/proc/proc.c	/^void lseek_proc(void *aux , void *filename)$/;"	f
main_init	kernel/arch/Main.c	/^void main_init(void)$/;"	f
main_init	kernel/build/Main.s	/^main_init:$/;"	l
make_dir	kernel/filesys/inode.c	/^int make_dir(struct inode *cwd, char *name)$/;"	f
max_length	kernel/stdio.c	/^    int max_length;     \/* Max length of output string. *\/$/;"	m	struct:vsnprintf_aux	file:
mem	kernel/Makefile	/^mem = .\/mem$/;"	m
mem_pool	kernel/mem/palloc.c	/^static struct pool mem_pool;$/;"	v	typeref:struct:pool	file:
mem_size	kernel/mem/mm.c	/^unsigned long mem_size()$/;"	f
memchr	kernel/string.c	/^memchr (const void *block_, int ch_, size_t size) $/;"	f
memcmp	kernel/string.c	/^memcmp (const void *a_, const void *b_, size_t size) $/;"	f
memcpy	kernel/string.c	/^memcpy (void *dst_, const void *src_, size_t size) $/;"	f
memcpy_hard	kernel/mem/paging.c	/^void memcpy_hard(void* from, void* to, uint32_t len)$/;"	f
memmove	kernel/string.c	/^memmove (void *dst_, const void *src_, size_t size) $/;"	f
memset	kernel/string.c	/^memset (void *dst_, int value, size_t size) $/;"	f
more_prio	kernel/proc/proc.c	/^bool more_prio(const struct list_elem *a, const struct list_elem *b,void *aux)$/;"	f
msgPMode	boot/i386/boot1.asm	/^msgPMode db "Protected Mode", 0$/;"	d
msgRMode	boot/i386/boot1.asm	/^msgRMode db "Real Mode", 0$/;"	d
nGetMemSize	kernel/mem/mm.c	/^unsigned long nGetMemSize()$/;"	f
next	kernel/include/list.h	/^    struct list_elem *next;     \/* Next list element. *\/$/;"	m	struct:list_elem	typeref:struct:list_elem::list_elem
next_line	kernel/device/console.c	/^char next_line[2]; \/\/"\\r\\n";$/;"	v
nodes	kernel/include/device/ata.h	/^  struct ata_device nodes[ATA_DEV_NUM];$/;"	m	struct:ata_interface	typeref:struct:ata_interface::ata_device
num_direntry	kernel/filesys/inode.c	/^static int num_direntry(struct inode *in)$/;"	f	file:
number	kernel/vsprintk.c	/^static char *number(char * str, int num, int base, int size, int precision, int type)$/;"	f	file:
offsetof	kernel/include/ssulib.h	5;"	d
offsetof	kernel/include/stddef.h	5;"	d
open	kernel/arch/syscall.c	/^int open(const char *pathname, int flags)$/;"	f
open_proc	kernel/proc/proc.c	/^void open_proc(void *aux)$/;"	f
ops	kernel/include/device/block.h	/^    const struct blk_dev_ops *ops;    $/;"	m	struct:blk_dev	typeref:struct:blk_dev::blk_dev_ops
org	boot/i386/boot1.asm	/^org	0x9000$/;"	l
org	boot/i386/bootloader.asm	/^org	0x7c00   $/;"	l
outb	kernel/arch/i386/io.asm	/^outb:  $/;"	l
outl	kernel/arch/i386/io.asm	/^outl:$/;"	l
output_dup	kernel/stdio.c	/^output_dup (char ch, size_t cnt, void (*output) (char, void *), void *aux) $/;"	f	file:
outsw	kernel/include/device/io.h	/^outsw (uint16_t port, const void *addr, size_t cnt)$/;"	f
outsw	kernel/include/device/io2.h	/^outsw (uint16_t port, const void *addr, size_t cnt)$/;"	f
p	kernel/stdio.c	/^    char *p;            \/* Current output position. *\/$/;"	m	struct:vsnprintf_aux	file:
p_list	kernel/proc/proc.c	/^struct list p_list;		\/\/ All Porcess List$/;"	v	typeref:struct:list
p_state	kernel/include/proc/proc.h	/^enum p_state {$/;"	g
padding	kernel/include/filesys/fs.h	/^	uint32_t padding;$/;"	m	struct:ssu_superblock
palloc_free_multiple	kernel/mem/palloc.c	/^palloc_free_multiple (void *pages, size_t page_cnt) $/;"	f
palloc_free_page	kernel/mem/palloc.c	/^palloc_free_page (void *page) $/;"	f
palloc_get_multiple	kernel/mem/palloc.c	/^palloc_get_multiple (size_t page_cnt)$/;"	f
palloc_get_page	kernel/mem/palloc.c	/^palloc_get_page (void) $/;"	f
parent	kernel/include/proc/proc.h	/^	struct process* parent;				\/\/ 부모 프로세스$/;"	m	struct:process	typeref:struct:process::process
parse_conversion	kernel/stdio.c	/^parse_conversion (const char *format, struct printf_conversion *c,$/;"	f	file:
pd	kernel/include/proc/proc.h	/^	void *pd;						\/\/page directory$/;"	m	struct:process
pd_copy	kernel/mem/paging.c	/^void pd_copy(uint32_t* from, uint32_t* to, uint32_t* start, uint32_t* end, bool share)$/;"	f
pd_create	kernel/mem/paging.c	/^uint32_t* pd_create (pid_t pid)$/;"	f
pde_idx_addr	kernel/mem/paging.c	/^uint32_t pde_idx_addr(uint32_t* addr)$/;"	f
pf_handler	kernel/mem/paging.c	/^intr_handler_func pf_handler;$/;"	v
pf_handler	kernel/mem/paging.c	/^void pf_handler(struct intr_frame *iframe)$/;"	f
pg_addr	kernel/mem/paging.c	/^uint32_t* pg_addr(uint32_t* addr)$/;"	f
pg_no	kernel/include/mem/paging.h	/^static inline uint32_t pg_no(const uint32_t *page){$/;"	f
pg_no	kernel/include/vaddr.h	/^static inline uintptr_t pg_no (const void *va) {$/;"	f
pg_ofs	kernel/include/vaddr.h	/^static inline unsigned pg_ofs (const void *va) {$/;"	f
pg_round_down	kernel/include/vaddr.h	/^static inline void *pg_round_down (const void *va) {$/;"	f
pg_round_up	kernel/include/vaddr.h	/^static inline void *pg_round_up (const void *va) {$/;"	f
pid	kernel/include/proc/proc.h	/^	pid_t pid;						\/\/process id$/;"	m	struct:process
pid_num_max	kernel/proc/proc.c	/^int pid_num_max;$/;"	v
pid_t	kernel/include/proc/proc.h	/^typedef int pid_t;$/;"	t
pool	kernel/mem/palloc.c	/^struct pool$/;"	s	file:
pop	boot/i386/boot1.asm	/^		pop		ds$/;"	d
port_addr	kernel/include/device/ata.h	/^  uint16_t port_addr;$/;"	m	struct:ata_device
pos	kernel/include/filesys/file.h	/^	uint16_t pos;$/;"	m	struct:ssufile
precision	kernel/stdio.c	/^    int precision;$/;"	m	struct:printf_conversion	file:
prev	kernel/include/list.h	/^    struct list_elem *prev;     \/* Previous list element. *\/$/;"	m	struct:list_elem	typeref:struct:list_elem::list_elem
printCharToSerial	kernel/device/console.c	/^void printCharToSerial(const char *pString)$/;"	f
print_contributors	kernel/arch/Main.c	/^void print_contributors(void)$/;"	f
print_contributors	kernel/build/Main.s	/^print_contributors:$/;"	l
print_hex	kernel/device/ata.c	/^ print_hex(char buf[], blk_sec_t sec_num, int len) {$/;"	f	file:
print_human_readable_size	kernel/stdio.c	/^print_human_readable_size (uint64_t size) $/;"	f
print_pid	kernel/include/proc/proc.h	/^proc_func print_pid;				\/\/디버그용, pid 출력$/;"	v
print_pid	kernel/proc/proc.c	/^void print_pid(void* aux) {$/;"	f
printf	kernel/stdio.c	/^printf (const char *format, ...) $/;"	f
printf_conversion	kernel/stdio.c	/^struct printf_conversion $/;"	s	file:
printk	kernel/device/console.c	/^int printk(const char *fmt, ...)$/;"	f
priority	kernel/include/proc/proc.h	/^	unsigned char priority;			\/\/프로세스의 스케쥴링 우선순위 0~256$/;"	m	struct:process
priority	kernel/include/proc/proc.h	/^	unsigned priority;$/;"	m	struct:proc_option
proc	kernel/Makefile	/^proc = .\/proc$/;"	m
proc_block	kernel/proc/proc.c	/^void proc_block(void)$/;"	f
proc_create	kernel/proc/proc.c	/^pid_t proc_create(proc_func func, struct proc_option *opt, void* aux, void* aux2)$/;"	f
proc_end	kernel/proc/proc.c	/^void proc_end(void)$/;"	f
proc_free	kernel/proc/proc.c	/^void proc_free(void)$/;"	f
proc_func	kernel/include/proc/proc.h	/^typedef void proc_func(void* aux);	\/\/process 동작 함수 원형$/;"	t
proc_option	kernel/include/proc/proc.h	/^struct proc_option$/;"	s
proc_print_data	kernel/proc/proc.c	/^void proc_print_data()$/;"	f
proc_sleep	kernel/proc/proc.c	/^void proc_sleep(unsigned ticks)$/;"	f
proc_start	kernel/proc/proc.c	/^void  proc_start(void)$/;"	f
proc_unblock	kernel/proc/proc.c	/^void proc_unblock(struct process* proc)$/;"	f
proc_wake	kernel/proc/proc.c	/^void proc_wake(void)$/;"	f
process	kernel/include/proc/proc.h	/^struct process$/;"	s
process_stack_ofs	kernel/proc/proc.c	/^uint32_t process_stack_ofs;$/;"	v
procs	kernel/proc/proc.c	/^struct process procs[PROC_NUM_MAX];$/;"	v	typeref:struct:process
ps_proc	kernel/proc/proc.c	/^void ps_proc(void* aux)$/;"	f
pt_addr	kernel/mem/paging.c	/^uint32_t* pt_addr(uint32_t* addr)$/;"	f
pt_copy	kernel/mem/paging.c	/^uint32_t pt_copy(uint32_t *pd, uint32_t *dest_pd, uint32_t idx, uint32_t* start, uint32_t* end, bool share)$/;"	f
pt_pde	kernel/mem/paging.c	/^uint32_t* pt_pde(uint32_t pde)$/;"	f
pte_idx_addr	kernel/mem/paging.c	/^uint32_t pte_idx_addr(uint32_t* addr)$/;"	f
ptov	kernel/include/vaddr.h	/^ptov (uintptr_t paddr)$/;"	f
ptrdiff_t	kernel/include/stddef.h	/^typedef __PTRDIFF_TYPE__ ptrdiff_t;$/;"	t
push	boot/i386/boot1.asm	/^		push	ds$/;"	d
qword	kernel/include/type.h	/^typedef long long qword;$/;"	t
r_list	kernel/proc/proc.c	/^struct list r_list;		\/\/ Run Porcess List$/;"	v	typeref:struct:list
read	kernel/arch/syscall.c	/^int read(int fd, char *buf, size_t len)$/;"	f
read	kernel/include/device/block.h	/^  void (*read) (void *blk_dev, blk_sec_t, void *buf);$/;"	m	struct:blk_dev_ops
read_cr0	kernel/arch/i386/crset.asm	/^read_cr0:$/;"	l
read_cr3	kernel/arch/i386/crset.asm	/^read_cr3:$/;"	l
refreshScreen	kernel/device/console.c	/^void refreshScreen(void)$/;"	f
reg_handler	kernel/arch/interrupt.c	/^void reg_handler(unsigned short idx, intr_handler_func *handler) $/;"	f
rootdir	kernel/include/proc/proc.h	/^	struct inode * rootdir;$/;"	m	struct:process	typeref:struct:process::inode
s_list	kernel/proc/proc.c	/^struct list s_list;		\/\/ Sleep Process List$/;"	v	typeref:struct:list
sb_magic	kernel/include/filesys/fs.h	/^	uint32_t sb_magic;					$/;"	m	struct:ssu_superblock
sb_nblocks	kernel/include/filesys/fs.h	/^	uint32_t sb_nblocks;$/;"	m	struct:ssu_superblock
sb_volname	kernel/include/filesys/fs.h	/^	char sb_volname[VOLNAME_LEN];$/;"	m	struct:ssu_superblock
scale_down	kernel/mem/paging.c	/^uint32_t scale_down(uint32_t base, uint32_t size)$/;"	f
scale_up	kernel/mem/paging.c	/^uint32_t scale_up(uint32_t base, uint32_t size)$/;"	f
sched_on_return	kernel/arch/interrupt.c	/^bool sched_on_return;		\/\/인터럽트가 끝날 때 schedule 할 지 결정$/;"	v
schedule	kernel/proc/sched.c	/^void schedule(void)$/;"	f
scroll	kernel/device/console.c	/^void scroll(void) $/;"	f
scroll_screen	kernel/device/console.c	/^void scroll_screen(int offset)$/;"	f
sector_read	kernel/device/ata.c	/^sector_read (struct ata_device *device, void *sector) $/;"	f	file:
sector_write	kernel/device/ata.c	/^sector_write (struct ata_device *device, const void *sector) $/;"	f	file:
sema	kernel/include/device/ata.h	/^  struct semaphore sema;$/;"	m	struct:ata_device	typeref:struct:ata_device::semaphore
sema_down	kernel/synch.c	/^sema_down (struct semaphore *sema) $/;"	f
sema_init	kernel/synch.c	/^sema_init(struct semaphore *sema, unsigned value)$/;"	f
sema_self_test	kernel/synch.c	/^sema_self_test (void) $/;"	f
sema_test_helper	kernel/synch.c	/^sema_test_helper (void *sema_) $/;"	f	file:
sema_try_down	kernel/synch.c	/^sema_try_down (struct semaphore *sema) $/;"	f
sema_up	kernel/synch.c	/^sema_up (struct semaphore *sema) $/;"	f
semaphore	kernel/include/synch.h	/^      struct semaphore semaphore; \/* Binary semaphore controlling access. *\/$/;"	m	struct:lock	typeref:struct:lock::semaphore
semaphore	kernel/include/synch.h	/^struct semaphore $/;"	s
set_cursor	kernel/device/console.c	/^void set_cursor(void)$/;"	f
set_fallow	kernel/device/console.c	/^void set_fallow(void)$/;"	f
set_volname	kernel/filesys/fs.c	/^set_volname(struct ssu_superblock *sb, const char *name)$/;"	f	file:
shell_proc	kernel/proc/proc.c	/^void shell_proc(void* aux)$/;"	f
shutdown	kernel/arch/syscall.c	/^void shutdown(void)$/;"	f
simple_lock	kernel/include/proc/proc.h	/^	int simple_lock;					\/\/ 부모 락$/;"	m	struct:process
size_t	kernel/include/stddef.h	/^typedef __SIZE_TYPE__ size_t;$/;"	t
size_t	kernel/include/type.h	/^typedef unsigned size_t;$/;"	t
skip_atoi	kernel/vsprintk.c	/^static int skip_atoi(const char **s)$/;"	f	file:
sn_directblock	kernel/include/filesys/inode.h	/^	uint32_t sn_directblock[NUM_DIRECT];	\/\/ index of data block$/;"	m	struct:inode
sn_fs	kernel/include/filesys/inode.h	/^	struct ssu_fs * sn_fs;							\/\/ filesystem of inode$/;"	m	struct:inode	typeref:struct:inode::ssu_fs
sn_ino	kernel/include/filesys/inode.h	/^	uint32_t sn_ino;						\/\/ inode number. In SSU-FS, i-number is inode-table index$/;"	m	struct:inode
sn_nlink	kernel/include/filesys/inode.h	/^	uint16_t sn_nlink;						\/\/ number of using direct block$/;"	m	struct:inode
sn_padding	kernel/include/filesys/inode.h	/^	uint32_t sn_padding;					\/\/ unused$/;"	m	struct:inode
sn_refcount	kernel/include/filesys/inode.h	/^	uint32_t sn_refcount; 					\/\/ open count$/;"	m	struct:inode
sn_size	kernel/include/filesys/inode.h	/^	uint32_t sn_size;						\/\/ file size(Byte)$/;"	m	struct:inode
sn_type	kernel/include/filesys/inode.h	/^	uint16_t sn_type;						\/\/ file type$/;"	m	struct:inode
snprintf	kernel/stdio.c	/^snprintf (char *buffer, size_t buf_size, const char *format, ...) $/;"	f
sprintf	kernel/include/stdio.h	37;"	d
ss	kernel/include/interrupt.h	/^	uint16_t ss, :16;           \/* Data segment for esp. *\/$/;"	m	struct:intr_frame
ssu_fs	kernel/include/filesys/fs.h	/^struct ssu_fs{$/;"	s
ssu_superblock	kernel/include/filesys/fs.h	/^struct ssu_superblock{$/;"	s
ssufile	kernel/include/filesys/file.h	/^struct ssufile {$/;"	s
ssuos_main	kernel/arch/Main.c	/^void ssuos_main(void)$/;"	f
ssuos_main	kernel/build/Main.s	/^ssuos_main:$/;"	l
ssuread	kernel/arch/syscall.c	/^int ssuread()$/;"	f
stack	kernel/include/proc/proc.h	/^	void *stack;					\/\/stack for esp$/;"	m	struct:process
state	kernel/include/proc/proc.h	/^	enum p_state state;				\/\/ process state$/;"	m	struct:process	typeref:enum:process::p_state
strcat	kernel/include/string.h	31;"	d
strchr	kernel/string.c	/^strchr (const char *string, int c_) $/;"	f
strcmp	kernel/string.c	/^strcmp (const char *a_, const char *b_) $/;"	f
strcpy	kernel/include/string.h	29;"	d
strcspn	kernel/string.c	/^strcspn (const char *string, const char *stop) $/;"	f
strlcat	kernel/string.c	/^strlcat (char *dst, const char *src, size_t size) $/;"	f
strlcpy	kernel/string.c	/^strlcpy (char *dst, const char *src, size_t size) $/;"	f
strlen	kernel/vsprintk.c	/^int strlen(const char *string)$/;"	f
strncat	kernel/include/string.h	32;"	d
strncmp	kernel/ssulib.c	/^int strncmp(char* b1, char* b2, int len)$/;"	f
strncpy	kernel/include/string.h	30;"	d
strnlen	kernel/string.c	/^strnlen (const char *string, size_t maxlen) $/;"	f
strpbrk	kernel/string.c	/^strpbrk (const char *string, const char *stop) $/;"	f
strrchr	kernel/string.c	/^strrchr (const char *string, int c_) $/;"	f
strspn	kernel/string.c	/^strspn (const char *string, const char *skip) $/;"	f
strstr	kernel/string.c	/^strstr (const char *haystack, const char *needle) $/;"	f
strtok	kernel/include/string.h	33;"	d
strtok_r	kernel/string.c	/^strtok_r (char *s, const char *delimiters, char **save_ptr) $/;"	f
sum_y	kernel/device/console.c	/^int sum_y;$/;"	v
swap	kernel/list.c	/^swap (struct list_elem **a, struct list_elem **b) $/;"	f	file:
switch_process	kernel/arch/i386/switch.S	/^switch_process:$/;"	l
sync_bitmapblock	kernel/filesys/fs.c	/^sync_bitmapblock(struct ssu_fs *fs)$/;"	f
sync_inode	kernel/filesys/inode.c	/^static int sync_inode(struct ssu_fs *fs, struct inode* inode)$/;"	f	file:
sync_ssufs	kernel/filesys/fs.c	/^sync_ssufs(struct ssu_fs *fs, const char* inodes, const char* superblock)$/;"	f	file:
sync_superblock	kernel/filesys/fs.c	/^sync_superblock(struct ssu_fs *fs, const char* superblock)$/;"	f	file:
syscall0	kernel/arch/syscall.c	11;"	d	file:
syscall1	kernel/arch/syscall.c	23;"	d	file:
syscall2	kernel/arch/syscall.c	37;"	d	file:
syscall3	kernel/arch/syscall.c	53;"	d	file:
syscall_handler	kernel/arch/interrupt.c	/^void syscall_handler(struct intr_frame *iframe)$/;"	f
syscall_tbl	kernel/arch/syscall.c	/^int syscall_tbl[SYS_NUM][2];$/;"	v
tail	kernel/include/list.h	/^    struct list_elem tail;      \/* List tail. *\/$/;"	m	struct:list	typeref:struct:list::list_elem
ticks	kernel/arch/interrupt.c	/^static unsigned long ticks;$/;"	v	file:
time_sched	kernel/include/proc/proc.h	/^	unsigned long long time_sched;		\/\/ 스케줄 횟수$/;"	m	struct:process
time_sleep	kernel/include/proc/proc.h	/^	unsigned long long time_sleep;	\/\/프로세스를 재울 시간$/;"	m	struct:process
time_slice	kernel/include/proc/proc.h	/^	unsigned time_slice;			\/\/프로세스의 수행 tick. 스케줄 시 초기화$/;"	m	struct:process
time_used	kernel/include/proc/proc.h	/^	unsigned long long time_used;		\/\/ 총 실행 시간$/;"	m	struct:process
timer_handler	kernel/arch/interrupt.c	/^void timer_handler(struct intr_frame *iframe)$/;"	f
times	boot/i386/boot1.asm	/^times 	2048-($-$$) db 0x00$/;"	l
times	boot/i386/bootloader.asm	/^times 	510-($-$$) db 0x00$/;"	l
tmp_block	kernel/device/ata.c	/^unsigned char tmp_block[ATA_SECOR_SIZE] = {0, };$/;"	v
tmpblock	kernel/filesys/inode.c	/^char tmpblock[SSU_BLOCK_SIZE];$/;"	v
tolower	kernel/include/ctype.h	/^static inline int tolower (int c) { return isupper (c) ? c - 'A' + 'a' : c; }$/;"	f
toupper	kernel/include/ctype.h	/^static inline int toupper (int c) { return islower (c) ? c - 'a' + 'A' : c; }$/;"	f
transform_string	kernel/device/ata.c	/^transform_string (char *buf, int len) $/;"	f	file:
true	kernel/include/stdbool.h	5;"	d
true	kernel/include/type.h	19;"	d
type	kernel/include/device/ata.h	/^  uint8_t type;$/;"	m	struct:ata_device
type	kernel/include/device/block.h	/^    blk_dev_t type;$/;"	m	struct:blk_dev
type	kernel/proc/proc.c	/^	unsigned char type;	\/\/0 : 직접실행, 1 : fork 함수실행$/;"	m	struct:__anon1	file:
type	kernel/stdio.c	/^    type;$/;"	m	struct:printf_conversion	typeref:enum:printf_conversion::__anon3	file:
uint16_t	kernel/include/stdint.h	/^typedef unsigned short int uint16_t;$/;"	t
uint16_t	kernel/include/type.h	/^typedef unsigned short int uint16_t;$/;"	t
uint32_t	kernel/include/stdint.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	kernel/include/type.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	kernel/include/stdint.h	/^typedef unsigned long long int uint64_t;$/;"	t
uint64_t	kernel/include/type.h	/^typedef unsigned long long int uint64_t;$/;"	t
uint8_t	kernel/include/stdint.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	kernel/include/type.h	/^typedef unsigned char uint8_t;$/;"	t
uintmax_t	kernel/include/stdint.h	/^typedef unsigned long long int uintmax_t;$/;"	t
uintmax_t	kernel/include/type.h	/^typedef unsigned long long int uintmax_t;$/;"	t
uintptr_t	kernel/include/stdint.h	/^typedef uint32_t uintptr_t;$/;"	t
uintptr_t	kernel/include/type.h	/^typedef uint32_t uintptr_t;$/;"	t
uname_proc	kernel/proc/proc.c	/^void uname_proc(void* aux)$/;"	f
unused	kernel/include/filesys/file.h	/^	uint8_t unused;$/;"	m	struct:ssufile
used_map	kernel/mem/palloc.c	/^	struct bitmap *used_map;            \/* Bitmap of free pages. *\/$/;"	m	struct:pool	typeref:struct:pool::bitmap	file:
va_arg	kernel/include/stdarg.h	10;"	d
va_end	kernel/include/stdarg.h	11;"	d
va_list	kernel/include/stdarg.h	/^typedef char			*va_list;$/;"	t
va_start	kernel/include/stdarg.h	9;"	d
value	kernel/include/synch.h	/^      unsigned value;             \/* Current value. *\/$/;"	m	struct:semaphore
vec_no	kernel/include/interrupt.h	/^	uint32_t vec_no;            \/* Interrupt vector number. *\/$/;"	m	struct:intr_frame
view_bitmap	kernel/filesys/fs.c	/^void view_bitmap(struct bitmap *b)$/;"	f
vsnprintf	kernel/stdio.c	/^vsnprintf (char *buffer, size_t buf_size, const char *format, va_list args) $/;"	f
vsnprintf_aux	kernel/stdio.c	/^struct vsnprintf_aux $/;"	s	file:
vsnprintf_helper	kernel/stdio.c	/^vsnprintf_helper (char ch, void *aux_)$/;"	f	file:
vsprintf	kernel/include/stdio.h	38;"	d
vsprintk	kernel/vsprintk.c	/^int vsprintk(char *buf, const char *fmt, va_list args)$/;"	f
vtop	kernel/include/vaddr.h	/^vtop (const void *vaddr)$/;"	f
wait	kernel/arch/syscall.c	/^pid_t wait(int *status)$/;"	f
waiters	kernel/include/synch.h	/^      struct list waiters;        \/* List of waiting threads. *\/$/;"	m	struct:condition	typeref:struct:condition::list
waiters	kernel/include/synch.h	/^      struct list waiters;        \/* List of waiting threads. *\/$/;"	m	struct:semaphore	typeref:struct:semaphore::list
width	kernel/stdio.c	/^    int width;$/;"	m	struct:printf_conversion	file:
write	kernel/arch/syscall.c	/^int write(int fd, const char *buf, size_t len)$/;"	f
write	kernel/include/device/block.h	/^  void (*write) (void *blk_dev, blk_sec_t, const void *buf);$/;"	m	struct:blk_dev_ops
write_cr0	kernel/arch/i386/crset.asm	/^write_cr0:$/;"	l
write_cr3	kernel/arch/i386/crset.asm	/^write_cr3:$/;"	l
write_proc	kernel/proc/proc.c	/^void write_proc(void *aux)$/;"	f
x	kernel/stdio.c	/^    int x;                      \/* `x' character to use, for base 16 only. *\/$/;"	m	struct:integer_base	file:
zero	kernel/arch/i386/intr-stubs.S	/^#define zero                                \\$/;"	d
